{
  List<JExpression> expressions=Lists.newArrayList();
  CloneCalleeExpressionVisitor cloner=new CloneCalleeExpressionVisitor();
  for (  JStatement stmt : body.getStatements()) {
    if (stmt instanceof JDeclarationStatement) {
      JDeclarationStatement declStatement=(JDeclarationStatement)stmt;
      if (!(declStatement.getVariableRef() instanceof JLocalRef)) {
        return null;
      }
      JExpression initializer=declStatement.getInitializer();
      if (initializer == null) {
        continue;
      }
      JLocal local=(JLocal)declStatement.getVariableRef().getTarget();
      JExpression clone=new JBinaryOperation(stmt.getSourceInfo(),local.getType(),JBinaryOperator.ASG,local.makeRef(declStatement.getVariableRef().getSourceInfo()),cloner.cloneExpression(initializer));
      expressions.add(clone);
    }
 else     if (stmt instanceof JExpressionStatement) {
      JExpressionStatement exprStmt=(JExpressionStatement)stmt;
      JExpression expr=exprStmt.getExpr();
      JExpression clone=cloner.cloneExpression(expr);
      expressions.add(clone);
    }
 else     if (stmt instanceof JReturnStatement) {
      JReturnStatement returnStatement=(JReturnStatement)stmt;
      JExpression expr=returnStatement.getExpr();
      if (expr != null) {
        JExpression clone=cloner.cloneExpression(expr);
        clone=maybeCast(clone,body.getMethod().getType());
        expressions.add(clone);
      }
      break;
    }
 else {
      return null;
    }
  }
  return expressions;
}

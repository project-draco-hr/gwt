{
  List params=method.params;
  HolderList args=x.args;
  ChangeList changes=new ChangeList("Inline a call to simple method '" + method + "'");
  Mutator resultExpression;
  int magicArg[]=new int[1];
  JExpression targetReturnExpr=returnStmt.getExpression();
  resultExpression=canInlineResultExpression(targetReturnExpr,params,args,magicArg,changes);
  if (resultExpression == null) {
    return false;
  }
  int iMagicArg=magicArg[0];
  JMultiExpression multi=new JMultiExpression(program);
  JExpression instance=x.getInstance();
  if (instance != null && instance.hasSideEffects()) {
    changes.addExpression(x.instance,multi.exprs);
  }
  for (int i=0; i < params.size(); ++i) {
    if (args.getExpr(i).hasSideEffects()) {
      if (i < iMagicArg) {
        changes.addExpression(args.getMutator(i),multi.exprs);
      }
 else       if (i == iMagicArg) {
      }
 else {
        assert(i > iMagicArg);
        return true;
      }
    }
  }
  changes.addExpression(resultExpression,multi.exprs);
  changes.replaceExpression(m,multi);
  changeList.add(changes);
  return true;
}

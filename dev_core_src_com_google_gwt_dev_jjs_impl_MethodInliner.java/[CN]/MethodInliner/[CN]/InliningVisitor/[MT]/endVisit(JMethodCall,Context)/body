{
  JMethod method=x.getTarget();
  if (currentMethod == method) {
    return;
  }
  if (cannotInline.contains(method)) {
    return;
  }
  boolean possibleToInline=false;
  if (method.isStatic() && !method.isNative()) {
    JMethodBody body=(JMethodBody)method.getBody();
    List<JStatement> stmts=body.getStatements();
    if (method.getEnclosingType() != null && method.getEnclosingType().methods.get(0) == method && !stmts.isEmpty()) {
      possibleToInline=false;
    }
 else     if (!body.locals.isEmpty()) {
      possibleToInline=false;
    }
 else {
      JMultiExpression multi=createMultiExpressionFromBody(body,ignoringReturnValueFor == x);
      if (multi != null) {
        possibleToInline=tryInlineExpression(x,ctx,multi);
      }
    }
  }
  if (!possibleToInline) {
    cannotInline.add(method);
  }
}

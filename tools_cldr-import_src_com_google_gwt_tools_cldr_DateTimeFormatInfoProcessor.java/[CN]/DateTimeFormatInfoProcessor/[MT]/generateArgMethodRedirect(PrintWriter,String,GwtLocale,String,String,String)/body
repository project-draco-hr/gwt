{
  String value=localeData.getEntry(category,locale,key);
  if (value != null) {
    pw.println();
    if (getOverrides()) {
      pw.println("  @Override");
    }
    pw.print("  public String " + method + "(");
    String prefix="";
    for (    String arg : args) {
      pw.print(prefix + "String " + arg);
      prefix=", ";
    }
    pw.println(") {");
    final StringBuilder buf=new StringBuilder();
    final StringGenerator gen=StringGenerator.create(buf,false);
    try {
      List<TemplateChunk> chunks=MessageStyle.MESSAGE_FORMAT.parse(value);
      for (      TemplateChunk chunk : chunks) {
        chunk.accept(new DefaultTemplateChunkVisitor(){
          @Override public void visit(          ArgumentChunk argChunk){
            gen.appendStringValuedExpression(args[argChunk.getArgumentNumber()]);
          }
          @Override public void visit(          StringChunk stringChunk){
            gen.appendStringLiteral(stringChunk.getString());
          }
        }
);
      }
    }
 catch (    ParseException e) {
      throw new RuntimeException("Unable to parse pattern '" + value + "' for locale "+ locale+ " key "+ category+ "/"+ key,e);
    }
catch (    VisitorAbortException e) {
      throw new RuntimeException("Unable to parse pattern '" + value + "' for locale "+ locale+ " key "+ category+ "/"+ key,e);
    }
    gen.completeString();
    pw.println("    return " + buf.toString() + ";");
    pw.println("  }");
  }
}

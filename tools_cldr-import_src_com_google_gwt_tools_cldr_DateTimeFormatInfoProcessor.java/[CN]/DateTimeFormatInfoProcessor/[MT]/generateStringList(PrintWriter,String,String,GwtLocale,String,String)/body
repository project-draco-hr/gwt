{
  Map<String,String> map=localeData.getEntries(category,locale);
  Map<String,String> fallback=fallbackCategory == null ? Collections.<String,String>emptyMap() : localeData.getEntries(fallbackCategory,locale);
  if (map == null || map.isEmpty() && fallback != null && !fallback.isEmpty()) {
    return true;
  }
  if (map != null && !map.isEmpty()) {
    if (fallbackCategory != null) {
      boolean different=false;
      for (      String key : keys) {
        String value=map.get(key);
        if (value != null && !value.equals(fallback.get(key))) {
          different=true;
          break;
        }
      }
      if (!different) {
        return true;
      }
    }
    pw.println();
    if (getOverrides()) {
      pw.println("  @Override");
    }
    pw.println("  public String[] " + method + "() {");
    pw.print("    return new String[] {");
    boolean first=true;
    for (    String key : keys) {
      String value=map.get(key);
      if (value == null) {
        value=fallback.get(key);
      }
      if (value == null) {
        System.err.println("Missing \"" + key + "\" in "+ locale+ "/"+ category);
        value="";
      }
      if (first) {
        first=false;
      }
 else {
        pw.print(",");
      }
      pw.print("\n        \"" + value.replace("\"","\\\"") + "\"");
    }
    pw.println("\n    };");
    pw.println("  }");
  }
  return false;
}

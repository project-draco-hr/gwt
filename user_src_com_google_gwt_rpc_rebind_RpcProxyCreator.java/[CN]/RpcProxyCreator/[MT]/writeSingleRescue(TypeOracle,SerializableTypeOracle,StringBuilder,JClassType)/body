{
  boolean shouldDeserialize=deserializationOracle.isSerializable(serializableClass);
  JClassType customSerializer;
  JMethod deserialize=null;
  JMethod instantiate=null;
  boolean hybridSerialization=false;
{
    JClassType search=serializableClass;
    do {
      customSerializer=SerializableTypeOracleBuilder.findCustomFieldSerializer(typeOracle,search);
      if (customSerializer != null) {
        instantiate=CustomFieldSerializerValidator.getInstantiationMethod(customSerializer,search);
        deserialize=CustomFieldSerializerValidator.getDeserializationMethod(customSerializer,search);
        hybridSerialization=search != serializableClass;
        break;
      }
      search=search.getSuperclass();
    }
 while (search != null);
  }
  JField[] serializableFields;
  JEnumType enumType=serializableClass.isEnum();
  if (enumType != null) {
    serializableFields=enumType.getFields();
  }
 else {
    serializableFields=SerializationUtils.getSerializableFields(typeOracle,serializableClass);
  }
  boolean rescueConstructor=instantiate == null && deserialize != null;
  if (shouldDeserialize || rescueConstructor || (customSerializer == null && serializableFields.length > 0)) {
    sb.append("\n@Rescue(className = \"").append(serializableClass.getQualifiedSourceName()).append("\"");
    sb.append(",\n instantiable = ").append(shouldDeserialize);
    sb.append(",\n fields = {");
    if (customSerializer == null || hybridSerialization) {
      for (      JField field : serializableFields) {
        sb.append("\"").append(field.getName()).append("\",");
      }
    }
    sb.append("},\n methods = {");
    if (rescueConstructor) {
      sb.append("\"").append(serializableClass.getName().replace('.','$')).append("()\"");
    }
    sb.append("}),");
  }
  if (customSerializer != null) {
    sb.append("\n@Rescue(className = \"").append(customSerializer.getQualifiedSourceName()).append("\",\n methods = {");
    if (instantiate != null) {
      String jsniSignature=instantiate.getJsniSignature();
      sb.append("\"").append(jsniSignature.substring(jsniSignature.lastIndexOf(':') + 1)).append("\",");
    }
    if (deserialize != null) {
      String jsniSignature=deserialize.getJsniSignature();
      sb.append("\"").append(jsniSignature.substring(jsniSignature.lastIndexOf(':') + 1)).append("\",");
    }
    sb.append("}),");
  }
}

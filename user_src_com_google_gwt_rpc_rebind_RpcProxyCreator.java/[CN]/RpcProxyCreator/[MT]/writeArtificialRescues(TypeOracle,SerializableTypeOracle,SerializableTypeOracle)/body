{
  Set<JType> serializableTypes=new HashSet<JType>();
  Collections.addAll(serializableTypes,serializationSto.getSerializableTypes());
  Collections.addAll(serializableTypes,deserializationSto.getSerializableTypes());
  StringBuilder sb=new StringBuilder("@ArtificialRescue({");
  for (  JType serializableType : serializableTypes) {
    JArrayType serializableArray=serializableType.isArray();
    JClassType serializableClass=serializableType.isClass();
    if (serializableArray != null) {
      sb.append("\n@Rescue(className = \"");
      if (serializableArray.getLeafType() instanceof JPrimitiveType) {
        sb.append(serializableArray.getLeafType().getJNISignature());
        for (int i=0, j=serializableArray.getRank(); i < j; i++) {
          sb.append("[]");
        }
      }
 else {
        sb.append(serializableArray.getQualifiedSourceName());
      }
      sb.append("\",\n instantiable = true),");
    }
 else     if (serializableClass != null) {
      writeSingleRescue(typeOracle,deserializationSto,sb,serializableClass);
    }
  }
  sb.append("})");
  return sb;
}

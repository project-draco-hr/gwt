{
  BrowserManager browserManager=startBrowserManagerServer(false);
  final int NUM_BROWSERS=6;
  int tokens[]=new int[NUM_BROWSERS];
  for (int i=0; i < NUM_BROWSERS; i++) {
    tokens[i]=launchBrowser(browserManager,i);
  }
  Thread.sleep(TIMEOUT_MS / 4);
  int numQueued=server.numQueued();
  int numRunning=server.numRunning();
  assertEquals("No queuing should occur",0,numQueued);
  assertEquals("All browers should be running",NUM_BROWSERS,numRunning);
  long shouldBeDeadBy=System.currentTimeMillis() + (TIMEOUT_MS * 2);
  int liveBrowsers=NUM_BROWSERS;
  while (System.currentTimeMillis() < shouldBeDeadBy) {
    for (int i=0; i < NUM_BROWSERS; ++i) {
      if (tokens[i] == 0) {
        continue;
      }
      try {
        browserManager.keepAlive(tokens[i],TIMEOUT_MS);
      }
 catch (      IllegalStateException ise) {
        if (LOG) {
          System.out.println("Browser token: " + tokens[i] + " exited sucessfully");
        }
        browserManager.killBrowser(tokens[i]);
        tokens[i]=0;
        --liveBrowsers;
        if (liveBrowsers == 0) {
          return;
        }
      }
    }
    Thread.sleep(PING_INTERVAL_MS);
  }
  fail(liveBrowsers + " browsers failed to exit in a timely manner");
}

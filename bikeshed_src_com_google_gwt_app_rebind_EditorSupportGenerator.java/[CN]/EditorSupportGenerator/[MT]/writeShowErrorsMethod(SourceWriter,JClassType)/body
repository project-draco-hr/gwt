{
  sw.indent();
  sw.println("public void showErrors(" + viewType.getName() + " view, Map<String, String> errorMap) {");
  sw.indent();
  sw.println("view.errors.setInnerText(\"\");");
  sw.println("if (errorMap == null || errorMap.isEmpty()) {");
  sw.indent();
  sw.println("return;");
  sw.outdent();
  sw.println("}");
  sw.println();
  sw.println("Document doc = Document.get();");
  sw.println("for (Map.Entry<String, String> entry : errorMap.entrySet()) {");
  sw.println("  /*");
  sw.println("   * Note that we are careful not to use setInnerHtml, to ensure we don't");
  sw.println("   * render user created markup: xsite attack protection");
  sw.println("   */");
  sw.println("");
  sw.indent();
  sw.println("DivElement div = doc.createDivElement();");
  sw.println("div.setInnerText(\" \" + entry.getValue());");
  sw.println("");
  sw.println("SpanElement name = doc.createSpanElement();");
  sw.println("name.getStyle().setFontWeight(FontWeight.BOLD);");
  sw.println("name.setInnerText(entry.getKey());");
  sw.println("");
  sw.println("div.insertFirst(name);");
  sw.println("");
  sw.println("view.errors.appendChild(div);");
  sw.outdent();
  sw.println("}");
  sw.outdent();
  sw.println("}");
  sw.outdent();
}

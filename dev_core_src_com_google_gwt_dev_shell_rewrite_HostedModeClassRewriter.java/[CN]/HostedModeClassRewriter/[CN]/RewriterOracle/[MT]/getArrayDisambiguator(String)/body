{
  String[] cached=arrayDisambiguations.get(desc);
  if (cached != null) {
    return cached;
  }
  List<String> toReturn=Lists.create();
  for (  Type t : Type.getArgumentTypes(desc)) {
    if (t.getSort() == Type.ARRAY && t.getElementType().getSort() == Type.OBJECT) {
      String leafName=t.getElementType().getInternalName();
      if (isJsoOrSubtype(leafName)) {
        String disambiguatotr=DISAMBIGUATOR_TYPE_INTERNAL_NAME + "$" + InternalName.toIdentifier(leafName);
        toReturn=Lists.add(toReturn,disambiguatotr);
      }
    }
  }
  String[] array;
  if (toReturn.isEmpty()) {
    array=EMPTY_STRING;
  }
 else {
    array=toReturn.toArray(new String[toReturn.size()]);
  }
  arrayDisambiguations.put(desc,array);
  return array;
}

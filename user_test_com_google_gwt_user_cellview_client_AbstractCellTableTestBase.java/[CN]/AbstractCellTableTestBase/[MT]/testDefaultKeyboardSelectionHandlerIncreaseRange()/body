{
  int pageStart=150;
  int pageSize=10;
  int increment=HasDataPresenter.PAGE_INCREMENT;
  T table=createAbstractHasData();
  DefaultKeyboardSelectionHandler<String> keyHandler=new DefaultKeyboardSelectionHandler<String>(table);
  table.setKeyboardSelectionHandler(keyHandler);
  HasDataPresenter<String> presenter=table.getPresenter();
  table.setRowCount(300,true);
  table.setVisibleRange(new Range(pageStart,pageSize));
  populateData(table);
  presenter.flush();
  table.setKeyboardPagingPolicy(KeyboardPagingPolicy.INCREASE_RANGE);
  table.setKeyboardSelectedRow(1);
  presenter.flush();
  assertEquals(1,table.getKeyboardSelectedRow());
  keyHandler.prevRow();
  presenter.flush();
  assertEquals(0,table.getKeyboardSelectedRow());
  keyHandler.prevRow();
  populateData(table);
  presenter.flush();
  pageStart-=increment;
  pageSize+=increment;
  assertEquals(increment - 1,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  table.setKeyboardSelectedRow(pageSize - 2);
  presenter.flush();
  assertEquals(pageSize - 2,table.getKeyboardSelectedRow());
  keyHandler.nextRow();
  presenter.flush();
  assertEquals(pageSize - 1,table.getKeyboardSelectedRow());
  keyHandler.nextRow();
  populateData(table);
  presenter.flush();
  pageSize+=increment;
  assertEquals(pageSize - increment,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  table.setKeyboardSelectedRow(increment);
  presenter.flush();
  assertEquals(increment,table.getKeyboardSelectedRow());
  keyHandler.prevPage();
  presenter.flush();
  assertEquals(0,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  keyHandler.prevPage();
  populateData(table);
  presenter.flush();
  assertEquals(0,table.getKeyboardSelectedRow());
  pageStart-=increment;
  pageSize+=increment;
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  keyHandler.nextPage();
  presenter.flush();
  assertEquals(increment,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  table.setKeyboardSelectedRow(pageSize - 1);
  presenter.flush();
  assertEquals(pageSize - 1,table.getKeyboardSelectedRow());
  keyHandler.nextPage();
  populateData(table);
  presenter.flush();
  pageSize+=increment;
  assertEquals(pageSize - 1,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  keyHandler.home();
  populateData(table);
  presenter.flush();
  pageSize+=pageStart;
  pageStart=0;
  assertEquals(0,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  keyHandler.prevRow();
  presenter.flush();
  assertEquals(0,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
  keyHandler.end();
  pageSize=300;
  populateData(table);
  presenter.flush();
  assertEquals(pageSize - 1,table.getKeyboardSelectedRow());
  assertEquals(new Range(0,pageSize),table.getVisibleRange());
  keyHandler.nextRow();
  presenter.flush();
  assertEquals(pageSize - 1,table.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),table.getVisibleRange());
}

{
  EditorModel m=new EditorModel(logger,types.findType("t.CompositeEditorDriver"),rfedType);
  assertNotNull(m.getEditorData(types.getJavaLangObject()));
  assertEquals(0,m.getEditorData(types.getJavaLangObject()).length);
  EditorData[] composite=m.getEditorData(types.findType("t.CompositeEditor"));
  assertEquals(2,composite.length);
  assertEquals("address",composite[0].getPropertyName());
  assertEquals("person",composite[1].getPropertyName());
  EditorData[] person=m.getEditorData(types.findType("t.PersonEditor"));
  assertEquals(5,person.length);
  int fieldNum=0;
  assertEquals("has",person[fieldNum++].getPropertyName());
  assertEquals("is",person[fieldNum++].getPropertyName());
  assertEquals("lastModified",person[fieldNum++].getPropertyName());
  assertEquals("name",person[fieldNum++].getPropertyName());
  assertEquals("readonly",person[fieldNum++].getPropertyName());
  EditorData[] address=m.getEditorData(types.findType("t.AddressEditor"));
  assertEquals("city",address[0].getPropertyName());
  assertEquals("street",address[1].getPropertyName());
}

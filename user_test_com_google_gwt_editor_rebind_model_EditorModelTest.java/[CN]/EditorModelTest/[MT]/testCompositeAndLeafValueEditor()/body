{
  EditorModel m=new EditorModel(logger,types.findType("t.CompositeAndLeafEditorDriver"),rfedType);
  assertEquals(types.findType("t.CompositeAndLeafEditorDriver.AProxy"),m.getProxyType());
  assertEquals(types.findType("t.CompositeAndLeafEditorDriver.AEditor"),m.getEditorType());
  EditorData[] data=m.getEditorData();
  assertEquals(1,data.length);
  assertTrue(data[0].isCompositeEditor());
  EditorData composed=data[0].getComposedData();
  assertEquals(types.findType("t.CompositeAndLeafEditorDriver.BProxy"),composed.getEditedType());
  assertEquals(types.findType("t.CompositeAndLeafEditorDriver.BEditor"),composed.getEditorType());
  EditorData[] optionalEditorData=m.getEditorData(data[0].getEditorType());
  assertEquals(0,optionalEditorData.length);
  EditorData[] subEditorData=m.getEditorData(composed.getEditorType());
  assertEquals(1,subEditorData.length);
}

def test_rendering(self):
    input_text = 'module M {\n  [Constructor(long x)] interface I : @A J, K {\n    attribute int attr;\n    readonly attribute long attr2;\n    getter attribute int get_attr;\n    setter attribute int set_attr;\n\n    [A,B=123] void function(in long x, in optional boolean y);\n\n    const boolean CONST = 1;\n\n    @A @B() @C(x) @D(x=1) @E(x,y=2)\n    void something();\n  };\n};\n@X module M2 {\n  @Y interface I {};\n};'
    expected_text = 'module M {\n  [Constructor(in long x)]\n  interface I :\n      @A J,\n      K {\n\n    /* Constants */\n    const boolean CONST = 1;\n\n    /* Attributes */\n    attribute int attr;\n    attribute long attr2;\n    getter attribute int get_attr;\n    setter attribute int set_attr;\n\n    /* Operations */\n    [A, B=123] void function(in long x, in optional boolean y);\n    @A @B @C(x) @D(x=1) @E(x, y=2) void something();\n  };\n};\n@X module M2 {\n  @Y\n  interface I {\n  };\n};\n'
    self._run_test(input_text, expected_text)

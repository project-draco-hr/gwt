{
  selectorTracker.visitForms(formNames);
  boolean shouldBeDefault=true;
  for (  String form : formNames) {
    if (!"other".equals(form)) {
      shouldBeDefault=false;
      break;
    }
  }
  assertEquals(shouldBeDefault,isDefault);
  MessageStyle expectedStyle=MessageStyle.MESSAGE_FORMAT;
switch (visitState) {
case 6:
    assertEquals(1,formNames.length);
  assertEquals("FEMALE",formNames[0]);
assertFalse(isDefault);
assertEquals("{1} wants to sell her car",msg);
break;
case 9:
assertEquals(1,formNames.length);
assertEquals("MALE",formNames[0]);
assertFalse(isDefault);
assertEquals("{1} wants to sell his car",msg);
break;
case 12:
assertEquals(1,formNames.length);
assertEquals("other",formNames[0]);
assertTrue(isDefault);
assertEquals("{1} wants to sell their car",msg);
break;
case 24:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("Nobody liked her message",msg);
break;
case 27:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("Nobody liked his message",msg);
break;
case 30:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("Nobody liked their message",msg);
break;
case 37:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("Nobody liked her {3} messages",msg);
break;
case 40:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("Nobody liked his {3} messages",msg);
break;
case 43:
assertEquals(3,formNames.length);
assertEquals("=0",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("Nobody liked their {3} messages",msg);
break;
case 54:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1} liked her message",msg);
break;
case 57:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1} liked his message",msg);
break;
case 60:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1} liked their message",msg);
break;
case 67:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1} liked her {3} messages",msg);
break;
case 70:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1} liked his {3} messages",msg);
break;
case 73:
assertEquals(3,formNames.length);
assertEquals("=1",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1} liked their {3} messages",msg);
break;
case 84:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1} and {2} liked her message",msg);
break;
case 87:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1} and {2} liked his message",msg);
break;
case 90:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1} and {2} liked their message",msg);
break;
case 97:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1} and {2} liked her {3} messages",msg);
break;
case 100:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1} and {2} liked his {3} messages",msg);
break;
case 103:
assertEquals(3,formNames.length);
assertEquals("=2",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1} and {2} liked their {3} messages",msg);
break;
case 114:
assertEquals(3,formNames.length);
assertEquals("one",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1}, {2}, and one other liked her message",msg);
break;
case 117:
assertEquals(3,formNames.length);
assertEquals("one",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1}, {2}, and one other liked his message",msg);
break;
case 120:
assertEquals(3,formNames.length);
assertEquals("one",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1}, {2}, and one other liked their message",msg);
break;
case 127:
assertEquals(3,formNames.length);
assertEquals("one",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1}, {2}, and one other liked her {3} messages",msg);
break;
case 130:
assertEquals("one",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1}, {2}, and one other liked his {3} messages",msg);
break;
case 133:
assertEquals(3,formNames.length);
assertEquals("one",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1}, {2}, and one other liked their {3} messages",msg);
break;
case 144:
assertEquals(3,formNames.length);
assertEquals("other",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked her message",msg);
break;
case 147:
assertEquals(3,formNames.length);
assertEquals("other",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked his message",msg);
break;
case 150:
assertEquals(3,formNames.length);
assertEquals("other",formNames[0]);
assertEquals("one",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked their message",msg);
break;
case 157:
assertEquals(3,formNames.length);
assertEquals("other",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("FEMALE",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked her {3} messages",msg);
break;
case 160:
assertEquals("other",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("MALE",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked his {3} messages",msg);
break;
case 163:
assertEquals(3,formNames.length);
assertEquals("other",formNames[0]);
assertEquals("other",formNames[1]);
assertEquals("other",formNames[2]);
assertEquals("{1}, {2}, and {0} others liked their {3} messages",msg);
break;
case 173:
assertEquals(0,formNames.length);
assertEquals("inherited",msg);
expectedStyle=MessageStyle.PLAIN;
break;
case 179:
assertEquals(1,formNames.length);
assertEquals("k1",formNames[0]);
assertEquals("v1",msg);
expectedStyle=MessageStyle.PLAIN;
break;
case 182:
assertEquals(1,formNames.length);
assertEquals("k2",formNames[0]);
assertEquals("v2",msg);
expectedStyle=MessageStyle.PLAIN;
break;
case 188:
assertEquals(0,formNames.length);
assertEquals("inherited",msg);
expectedStyle=MessageStyle.MESSAGE_FORMAT;
break;
default :
fail("Unexpected visitState " + visitState + ", forms="+ Arrays.deepToString(formNames)+ ", msg=\""+ msg+ "\"");
break;
}
assertEquals(expectedStyle,style);
visitState++;
}

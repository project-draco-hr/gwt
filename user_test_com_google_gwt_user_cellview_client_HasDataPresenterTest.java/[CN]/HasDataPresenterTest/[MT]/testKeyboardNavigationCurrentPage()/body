{
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10,null);
  presenter.setVisibleRange(new Range(50,10));
  populatePresenter(presenter);
  presenter.flush();
  presenter.setKeyboardPagingPolicy(KeyboardPagingPolicy.CURRENT_PAGE);
  presenter.setKeyboardSelectedRow(1,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(0,false);
  view.assertKeyboardSelectedRow(1,true);
  assertTrue(presenter.hasKeyboardPrev());
  presenter.keyboardPrev();
  presenter.flush();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(1,false);
  view.assertKeyboardSelectedRow(0,true);
  assertFalse(presenter.hasKeyboardPrev());
  presenter.keyboardPrev();
  presenter.flush();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRowEmpty();
  presenter.setKeyboardSelectedRow(8,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(0,false);
  view.assertKeyboardSelectedRow(8,true);
  assertTrue(presenter.hasKeyboardNext());
  presenter.keyboardNext();
  presenter.flush();
  assertEquals(9,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(8,false);
  view.assertKeyboardSelectedRow(9,true);
  assertFalse(presenter.hasKeyboardNext());
  presenter.keyboardNext();
  presenter.flush();
  assertEquals(9,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRowEmpty();
  presenter.keyboardPrevPage();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
  presenter.keyboardNextPage();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
  presenter.keyboardHome();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
  presenter.keyboardEnd();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
}

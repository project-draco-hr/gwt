{
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  view.setDependsOnSelection(true);
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10);
  assertNull(presenter.getSelectionModel());
  presenter.setVisibleRange(new Range(0,10));
  presenter.setRowData(0,createData(0,10));
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=0,size=10");
  SelectionModel<String> model=new MockSelectionModel<String>();
  model.setSelected("test 0",true);
  presenter.setSelectionModel(model);
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=0,size=10");
  view.assertOnUpdateSelectionFired(true);
  view.assertSelectedRows();
  model.setSelected("test 2",true);
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=0,size=10");
  view.assertOnUpdateSelectionFired(true);
  view.assertSelectedRows();
  presenter.setSelectionModel(null);
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=0,size=10");
  view.assertOnUpdateSelectionFired(true);
  view.assertSelectedRows();
}

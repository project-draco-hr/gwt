{
  int pageStart=150;
  int pageSize=10;
  int increment=HasDataPresenter.PAGE_INCREMENT;
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10,null);
  presenter.setRowCount(300,true);
  presenter.setVisibleRange(new Range(pageStart,pageSize));
  populatePresenter(presenter);
  presenter.flush();
  presenter.setKeyboardPagingPolicy(KeyboardPagingPolicy.INCREASE_RANGE);
  presenter.setKeyboardSelectedRow(1,false,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(0,false);
  view.assertKeyboardSelectedRow(1,true);
  assertTrue(presenter.hasKeyboardPrev());
  presenter.keyboardPrev();
  presenter.flush();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(1,false);
  view.assertKeyboardSelectedRow(0,true);
  assertTrue(presenter.hasKeyboardPrev());
  presenter.keyboardPrev();
  populatePresenter(presenter);
  presenter.flush();
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  pageStart-=increment;
  pageSize+=increment;
  assertEquals(increment - 1,presenter.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.setKeyboardSelectedRow(pageSize - 2,false,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(increment - 1,false);
  view.assertKeyboardSelectedRow(pageSize - 2,true);
  assertTrue(presenter.hasKeyboardNext());
  presenter.keyboardNext();
  presenter.flush();
  assertEquals(pageSize - 1,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(pageSize - 2,false);
  view.assertKeyboardSelectedRow(pageSize - 1,true);
  assertTrue(presenter.hasKeyboardNext());
  presenter.keyboardNext();
  populatePresenter(presenter);
  presenter.flush();
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  pageSize+=increment;
  assertEquals(pageSize - increment,presenter.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.setKeyboardSelectedRow(increment,false,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(pageSize - increment,false);
  view.assertKeyboardSelectedRow(increment,true);
  presenter.keyboardPrevPage();
  presenter.flush();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(increment,false);
  view.assertKeyboardSelectedRow(0,true);
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.keyboardPrevPage();
  populatePresenter(presenter);
  presenter.flush();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  pageStart-=increment;
  pageSize+=increment;
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.keyboardNextPage();
  presenter.flush();
  assertEquals(increment,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(0,false);
  view.assertKeyboardSelectedRow(increment,true);
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.setKeyboardSelectedRow(pageSize - 1,false,false);
  presenter.flush();
  view.assertKeyboardSelectedRow(increment,false);
  view.assertKeyboardSelectedRow(pageSize - 1,true);
  presenter.keyboardNextPage();
  populatePresenter(presenter);
  presenter.flush();
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  pageSize+=increment;
  assertEquals(pageSize - 1,presenter.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  presenter.keyboardHome();
  populatePresenter(presenter);
  presenter.flush();
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  pageSize+=pageStart;
  pageStart=0;
  assertEquals(0,presenter.getKeyboardSelectedRow());
  assertEquals(new Range(pageStart,pageSize),presenter.getVisibleRange());
  assertFalse(presenter.hasKeyboardPrev());
  presenter.keyboardPrev();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
  presenter.keyboardEnd();
  populatePresenter(presenter);
  presenter.flush();
  view.assertReplaceAllChildrenCalled(true);
  view.assertKeyboardSelectedRowEmpty();
  assertEquals(299,presenter.getKeyboardSelectedRow());
  assertEquals(new Range(0,300),presenter.getVisibleRange());
  assertFalse(presenter.hasKeyboardNext());
  presenter.keyboardNext();
  presenter.flush();
  view.assertKeyboardSelectedRowEmpty();
}

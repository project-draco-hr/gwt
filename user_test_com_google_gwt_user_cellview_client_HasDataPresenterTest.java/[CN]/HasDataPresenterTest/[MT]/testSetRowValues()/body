{
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10);
  presenter.setVisibleRange(new Range(5,10));
  view.assertLoadingState(LoadingState.LOADING);
  List<String> expectedData=createData(5,10);
  presenter.setRowValues(5,createData(5,10));
  assertEquals(10,presenter.getRowValues().size());
  assertEquals(expectedData,presenter.getRowValues());
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=5,size=10");
  assertEquals(10,view.getChildCount());
  view.assertLoadingState(LoadingState.LOADED);
  expectedData.set(2,"test 100");
  expectedData.set(3,"test 101");
  presenter.setRowValues(7,createData(100,2));
  assertEquals(10,presenter.getRowValues().size());
  assertEquals(expectedData,presenter.getRowValues());
  view.assertReplaceAllChildrenCalled(false);
  view.assertReplaceChildrenCalled(true);
  view.assertLastHtml("start=7,size=2");
  assertEquals(10,view.getChildCount());
  view.assertLoadingState(LoadingState.LOADED);
  expectedData.set(0,"test 202");
  expectedData.set(1,"test 203");
  presenter.setRowValues(3,createData(200,4));
  assertEquals(10,presenter.getRowValues().size());
  assertEquals(expectedData,presenter.getRowValues());
  view.assertReplaceAllChildrenCalled(false);
  view.assertReplaceChildrenCalled(true);
  view.assertLastHtml("start=5,size=2");
  assertEquals(10,view.getChildCount());
  view.assertLoadingState(LoadingState.LOADED);
  expectedData.set(8,"test 300");
  expectedData.set(9,"test 301");
  presenter.setRowValues(13,createData(300,4));
  assertEquals(10,presenter.getRowValues().size());
  assertEquals(expectedData,presenter.getRowValues());
  view.assertReplaceAllChildrenCalled(false);
  view.assertReplaceChildrenCalled(true);
  view.assertLastHtml("start=13,size=2");
  assertEquals(10,view.getChildCount());
  view.assertLoadingState(LoadingState.LOADED);
  expectedData=createData(400,20).subList(2,12);
  presenter.setRowValues(3,createData(400,20));
  assertEquals(10,presenter.getRowValues().size());
  assertEquals(expectedData,presenter.getRowValues());
  view.assertReplaceAllChildrenCalled(true);
  view.assertReplaceChildrenCalled(false);
  view.assertLastHtml("start=5,size=10");
  assertEquals(10,view.getChildCount());
  view.assertLoadingState(LoadingState.LOADED);
}

{
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10,null);
  presenter.setVisibleRange(new Range(10,10));
  populatePresenter(presenter);
  presenter.setKeyboardPagingPolicy(KeyboardPagingPolicy.INCREASE_RANGE);
  int pageSize=presenter.getVisibleRange().getLength();
  assertEquals(0,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRowEmpty();
  presenter.setKeyboardSelectedRow(1,false);
  assertEquals(1,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(0,false);
  view.assertKeyboardSelectedRow(1,true);
  presenter.setKeyboardSelectedRow(1,false);
  assertEquals(1,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(1,false);
  view.assertKeyboardSelectedRow(1,true);
  presenter.setKeyboardSelectedRow(9,false);
  assertEquals(9,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(1,false);
  view.assertKeyboardSelectedRow(9,true);
  assertEquals(10,presenter.getVisibleRange().getStart());
  assertEquals(pageSize,presenter.getVisibleRange().getLength());
  presenter.setKeyboardSelectedRow(10,false);
  assertEquals(10,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(9,false);
  view.assertKeyboardSelectedRowEmpty();
  assertEquals(10,presenter.getVisibleRange().getStart());
  pageSize+=HasDataPresenter.PAGE_INCREMENT;
  assertEquals(pageSize,presenter.getVisibleRange().getLength());
  populatePresenter(presenter);
  presenter.setKeyboardSelectedRow(-1,false);
  assertEquals(9,presenter.getKeyboardSelectedRow());
  view.assertKeyboardSelectedRow(10,false);
  assertEquals(0,presenter.getVisibleRange().getStart());
  pageSize+=10;
  assertEquals(pageSize,presenter.getVisibleRange().getLength());
}

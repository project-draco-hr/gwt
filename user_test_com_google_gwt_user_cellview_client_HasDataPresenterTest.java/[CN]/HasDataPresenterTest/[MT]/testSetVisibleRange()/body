{
  HasData<String> listView=new MockHasData<String>();
  MockView<String> view=new MockView<String>();
  HasDataPresenter<String> presenter=new HasDataPresenter<String>(listView,view,10,null);
  presenter.setVisibleRange(new Range(0,100));
  assertEquals(new Range(0,100),presenter.getVisibleRange());
  assertEquals(0,presenter.getVisibleItemCount());
  presenter.flush();
  view.assertReplaceChildrenNotCalled();
  view.assertLoadingState(LoadingState.LOADING);
  presenter.setVisibleRange(new Range(0,100));
  assertEquals(new Range(0,100),presenter.getVisibleRange());
  assertEquals(0,presenter.getVisibleItemCount());
  presenter.flush();
  view.assertReplaceChildrenNotCalled();
  view.assertLoadingState(LoadingState.LOADING);
  try {
    presenter.setVisibleRange(new Range(-1,100));
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    presenter.setVisibleRange(new Range(0,-100));
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
}

{
  final int flushDelay=1000;
  display.timerExec(flushDelay,new Runnable(){
    public void run(){
      if (fTree.isDisposed())       return;
      if (fLogger.uiFlush(fTree)) {
        if (autoScroll) {
          TreeItem lastItem=findLastVisibleItem(fTree);
          if (lastItem != null) {
            fTree.setSelection(new TreeItem[]{lastItem});
            fTree.showItem(lastItem);
            expandAllChildren(lastItem);
            syncDetailsPane(lastItem);
          }
        }
      }
      display.timerExec(flushDelay,this);
    }
    private void expandAllChildren(    TreeItem item){
      item.setExpanded(true);
      for (int i=0, n=item.getItemCount(); i < n; ++i) {
        expandAllChildren(item.getItem(i));
      }
    }
    private TreeItem findLastVisibleItem(    Tree tree){
      int n=tree.getItemCount() - 1;
      if (n > 0) {
        TreeItem item=tree.getItem(n);
        if (item.getExpanded()) {
          return findLastVisibleItem(item);
        }
 else {
          return item;
        }
      }
 else {
        return null;
      }
    }
    private TreeItem findLastVisibleItem(    TreeItem item){
      int n=item.getItemCount() - 1;
      if (n > 0) {
        TreeItem child=item.getItem(n);
        if (child.getExpanded()) {
          return findLastVisibleItem(child);
        }
      }
      return item;
    }
  }
);
}

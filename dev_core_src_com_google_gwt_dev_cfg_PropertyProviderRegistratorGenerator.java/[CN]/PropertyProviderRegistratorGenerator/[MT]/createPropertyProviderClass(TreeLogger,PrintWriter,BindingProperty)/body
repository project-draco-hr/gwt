{
  String bindingPropertyClassName="PropertyValueProvider" + propertyProviderClassNames.size();
  propertyProviderClassNames.add(bindingPropertyClassName);
  out.println("  private static class " + bindingPropertyClassName + " extends PropertyValueProvider {");
  out.println("  public String getName() {");
  out.println("    return \"" + bindingProperty.getName() + "\";");
  out.println("  }");
  if (bindingProperty.getConstrainedValue() != null) {
    createConstrainedValueGetter(out,bindingProperty);
  }
 else   if (bindingProperty.isDerived()) {
    createConditionTreeGetter(out,bindingProperty);
  }
 else   if (bindingProperty.getProviderGenerator() != null) {
    createPropertyProviderGeneratorGetter(logger,out,bindingProperty);
  }
 else   if (bindingProperty.getProvider() != null) {
    createProviderGetter(out,bindingProperty);
  }
 else {
    throw new InternalCompilerException("Failed to locate the runtime provider for " + "binding property '" + bindingProperty.getName() + "'");
  }
  out.println("  }");
}

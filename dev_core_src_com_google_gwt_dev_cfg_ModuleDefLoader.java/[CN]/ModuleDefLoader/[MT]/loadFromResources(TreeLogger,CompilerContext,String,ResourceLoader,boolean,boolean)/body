{
  Event moduleDefLoadFromClassPathEvent=SpeedTracerLogger.start(CompilerEventType.MODULE_DEF,"phase","loadFromClassPath","moduleName",moduleName);
  try {
    String physicalName=moduleEffectiveNameToPhysicalName.get(moduleName);
    if (physicalName != null) {
      moduleName=physicalName;
    }
    ModuleDef moduleDef=tryGetLoadedModule(moduleName,refresh);
    if (moduleDef != null) {
      return moduleDef;
    }
    ModuleDefLoader loader=new ModuleDefLoader(compilerContext,resources);
    ModuleDef module=ModuleDefLoader.doLoadModule(loader,logger,moduleName,resources,monolithic);
    LibraryWriter libraryWriter=compilerContext.getLibraryWriter();
    libraryWriter.setLibraryName(module.getName());
    libraryWriter.addDependencyLibraryNames(module.getExternalLibraryModuleNames());
    return module;
  }
  finally {
    moduleDefLoadFromClassPathEvent.end();
  }
}

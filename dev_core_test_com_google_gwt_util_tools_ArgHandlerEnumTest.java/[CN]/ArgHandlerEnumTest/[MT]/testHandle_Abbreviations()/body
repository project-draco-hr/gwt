{
  ArgHandler handler=new MockArgHandlerEnumBase(null,true){
  }
;
  optionValue=null;
  int consuemdArguments=handler.handle(new String[]{"-Xflag","THIS"},0);
  assertEquals(1,consuemdArguments);
  assertEquals(SomeFlags.THIS_FLAG,optionValue);
  consuemdArguments=handler.handle(new String[]{"-Xflag","THAT"},0);
  assertEquals(-1,consuemdArguments);
  assertEquals(SomeFlags.THIS_FLAG,optionValue);
  consuemdArguments=handler.handle(new String[]{"-Xflag","THAT_O"},0);
  assertEquals(1,consuemdArguments);
  assertEquals(SomeFlags.THAT_OTHER_FLAG,optionValue);
  consuemdArguments=handler.handle(new String[]{"-Xflag","ThAt_f"},0);
  assertEquals(1,consuemdArguments);
  assertEquals(SomeFlags.THAT_FLAG,optionValue);
  consuemdArguments=handler.handle(new String[]{"-Xflag","AN"},0);
  assertEquals(-1,consuemdArguments);
  assertEquals(SomeFlags.THAT_FLAG,optionValue);
  consuemdArguments=handler.handle(new String[]{"-Xflag","ANO"},0);
  assertEquals(1,consuemdArguments);
  assertEquals(SomeFlags.ANOTHER_FLAG,optionValue);
}

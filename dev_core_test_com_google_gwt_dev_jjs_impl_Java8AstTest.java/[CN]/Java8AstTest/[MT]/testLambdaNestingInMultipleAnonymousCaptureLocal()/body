{
  addSnippetClassDecl("interface I { int foo(Integer i); }");
  String snippet="int[] x = new int[] {42};\n" + "int result = new I(){\n" + "  public int foo(Integer i1){\n"+ "    return new I(){\n"+ "      public int foo(Integer i2){\n"+ "        return new I(){\n"+ "          public int foo(Integer i3){\n"+ "            Lambda<Integer> l = (a, b) -> x[0] = x[0] + a + b + i1 + i2 + i3;\n"+ "            return l.run(1, 2);\n"+ "          }\n"+ "        }.foo(3);\n"+ "      }\n"+ "    }.foo(2);\n"+ "  }\n"+ "}.foo(1);\n";
  JProgram program=compileSnippet("void",snippet,false);
  JClassType outer1=(JClassType)getType(program,"test.EntryPoint$1");
  JClassType outer2=(JClassType)getType(program,"test.EntryPoint$1$1");
  JClassType outer3=(JClassType)getType(program,"test.EntryPoint$1$1$1");
  assertNotNull(outer1);
  assertNotNull(outer2);
  assertNotNull(outer3);
  JMethod outer1Method=findMethod(outer1,"foo");
  JMethod outer2Method=findMethod(outer2,"foo");
  JMethod outer3Method=findMethod(outer3,"foo");
  assertNotNull(outer3Method);
  assertEquals("public int foo(Integer i1){" + "return(new EntryPoint$1$1(this,this.val$x2,i1)).foo(Integer.valueOf(2));" + "}",formatSource(outer1Method.toSource()));
  assertEquals("public int foo(Integer i2){" + "return(new EntryPoint$1$1$1(this,this.val$x2,this.val$i13,i2)).foo(Integer.valueOf(3));" + "}",formatSource(outer2Method.toSource()));
  assertEquals("public int foo(Integer i3){" + "Lambda l=new EntryPoint$1$1$1$lambda$0$Type(this.val$x2,this.val$i13,this.val$i24,i3);" + "return((Integer)l.run(1,2)).intValue();"+ "}",formatSource(outer3Method.toSource()));
}

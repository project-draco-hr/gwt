{
  sourceLevel=SourceLevel.JAVA8;
  super.setUp();
  addAll(LAMBDA_METAFACTORY);
  addAll(JavaResourceBase.createMockJavaResource("test.Runnable","package test;","public interface Runnable {","  void run();","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.Lambda","package test;","public interface Lambda<T> {","  T run(int a, int b);","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.Lambda2","package test;","public interface Lambda2<T> {","  boolean run(T a, T b);","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.AcceptsLambda","package test;","public class AcceptsLambda<T> {","  public T accept(Lambda<T> foo) {","    return foo.run(10, 20);","  }","  public boolean accept2(Lambda2<String> foo) {","    return foo.run(\"a\", \"b\");","  }","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.Pojo","package test;","public class Pojo {","  public Pojo(int x, int y) {","  }","  public Integer fooInstance(int a, int b) {","    return a + b;","  }","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.DefaultInterface","package test;","public interface DefaultInterface {","  void method1();","  default int method2() { return 42; }","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.DefaultInterfaceImpl","package test;","public class DefaultInterfaceImpl implements DefaultInterface {","  public void method1() {}","}"));
  addAll(JavaResourceBase.createMockJavaResource("test.DefaultInterfaceImpl2","package test;","public class DefaultInterfaceImpl2 implements DefaultInterface {","  public void method1() {}","  public int method2() { return DefaultInterface.super.method2(); }","}"));
}

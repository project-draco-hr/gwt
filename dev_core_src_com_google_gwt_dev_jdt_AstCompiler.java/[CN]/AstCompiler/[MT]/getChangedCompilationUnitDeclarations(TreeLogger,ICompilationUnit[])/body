{
  List<ICompilationUnit> allUnits=Arrays.asList(units);
  List<ICompilationUnitAdapter> newUnits=new ArrayList<ICompilationUnitAdapter>();
  for (Iterator<ICompilationUnit> iter=allUnits.iterator(); iter.hasNext(); ) {
    ICompilationUnitAdapter adapter=(ICompilationUnitAdapter)iter.next();
    CompilationUnitProvider cup=adapter.getCompilationUnitProvider();
    String location=cup.getLocation();
    if (!(cachedResults.containsKey(location))) {
      newUnits.add(adapter);
    }
  }
  ICompilationUnit[] toBeProcessed=new ICompilationUnit[newUnits.size()];
  newUnits.toArray(toBeProcessed);
  CompilationUnitDeclaration[] newCuds=compile(logger,toBeProcessed);
  List<CompilationUnitDeclaration> cudResults=new ArrayList<CompilationUnitDeclaration>();
  for (int i=0; i < newCuds.length; i++) {
    CompilationUnitDeclaration newCud=newCuds[i];
    String newLoc=String.valueOf(newCud.getFileName());
    cachedResults.remove(newLoc);
    cachedResults.add(newLoc,newCud);
    cudResults.add(newCud);
  }
  return cudResults.toArray(new CompilationUnitDeclaration[]{});
}

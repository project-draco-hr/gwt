{
  includeJs(ss,logger,getJsInstallScript(context),"__INSTALL_SCRIPT__");
  includeJs(ss,logger,getJsInstallLocation(context),"__INSTALL_LOCATION__");
  includeJs(ss,logger,getJsWaitForBodyLoaded(context),"__WAIT_FOR_BODY_LOADED__");
  includeJs(ss,logger,getJsPermutations(context),"__PERMUTATIONS__");
  includeJs(ss,logger,getJsProperties(context),"__PROPERTIES__");
  includeJs(ss,logger,getJsProcessMetas(context),"__PROCESS_METAS__");
  includeJs(ss,logger,getJsComputeScriptBase(context),"__COMPUTE_SCRIPT_BASE__");
  includeJs(ss,logger,getJsComputeUrlForResource(context),"__COMPUTE_URL_FOR_RESOURCE__");
  includeJs(ss,logger,getJsLoadExternalStylesheets(context),"__LOAD_STYLESHEETS__");
  SortedSet<ScriptReference> scripts=artifacts.find(ScriptReference.class);
  if (!scripts.isEmpty()) {
    String list="";
    for (    ScriptReference script : scripts) {
      list+=(script.getSrc() + "\n");
    }
    boolean failIfScriptTags=true;
    for (    ConfigurationProperty prop : context.getConfigurationProperties()) {
      if (prop.getName().equalsIgnoreCase(FAIL_IF_SCRIPT_TAG_PROPERTY)) {
        if (prop.getValues().get(0).equalsIgnoreCase("false")) {
          failIfScriptTags=false;
        }
      }
    }
    if (failIfScriptTags) {
      String msg="The " + getDescription() + " linker does not support <script> tags in the gwt.xml files, but the"+ " gwt.xml file (or the gwt.xml files which it includes) contains the"+ " following script tags: \n"+ list+ "In order for your application to run correctly, you will need to"+ " include these tags in your host page directly. In order to avoid"+ " this error, you will need to remove the script tags from the"+ " gwt.xml file, or add this property to the gwt.xml file:"+ " <set-configuration-property name='xsiframe.failIfScriptTag' value='FALSE'/>";
      logger.log(TreeLogger.ERROR,msg);
      throw new UnableToCompleteException();
    }
 else {
      if (logger.isLoggable(TreeLogger.INFO)) {
        logger.log(TreeLogger.INFO,"Ignoring the following script tags in the gwt.xml " + "file\n" + list);
      }
    }
  }
  ss=ResourceInjectionUtil.injectStylesheets(ss,artifacts);
  ss=permutationsUtil.addPermutationsJs(ss,logger,context);
  if (result != null) {
    replaceAll(ss,"__KNOWN_PROPERTIES__",PropertiesUtil.addKnownPropertiesJs(logger,result));
  }
  replaceAll(ss,"__MODULE_FUNC__",context.getModuleFunctionName());
  replaceAll(ss,"__MODULE_NAME__",context.getModuleName());
  replaceAll(ss,"__HOSTED_FILENAME__",getHostedFilenameFull(context));
  return ss.toString();
}

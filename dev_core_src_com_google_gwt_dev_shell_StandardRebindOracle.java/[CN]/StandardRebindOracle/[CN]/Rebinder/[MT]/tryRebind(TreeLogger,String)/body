{
  if (usedTypeNames.contains(typeName)) {
    String[] cycle=(String[])Util.toArray(String.class,usedTypeNames);
    Messages.UNABLE_TO_REBIND_DUE_TO_CYCLE_IN_RULES.log(logger,cycle,null);
    throw new UnableToCompleteException();
  }
  usedTypeNames.add(typeName);
  if (rules.isEmpty()) {
    logger.log(TreeLogger.DEBUG,"No rules are defined, so no substitution can occur",null);
    return null;
  }
  for (Iterator iter=rules.iterator(); iter.hasNext(); ) {
    Rule rule=(Rule)iter.next();
    TreeLogger branch=Messages.TRACE_CHECKING_RULE.branch(logger,rule,null);
    if (rule.isApplicable(branch,genCtx,typeName)) {
      if (!usedRules.contains(rule)) {
        usedRules.add(rule);
        Messages.TRACE_RULE_MATCHED.log(logger,null);
        return rule.realize(logger,genCtx,typeName);
      }
 else {
      }
    }
 else {
      Messages.TRACE_RULE_DID_NOT_MATCH.log(logger,null);
    }
  }
  return null;
}

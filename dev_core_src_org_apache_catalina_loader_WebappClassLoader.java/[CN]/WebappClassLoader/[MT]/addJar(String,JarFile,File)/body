{
  if (jar == null)   return;
  if (jarFile == null)   return;
  if (file == null)   return;
  if (log.isDebugEnabled())   log.debug("addJar(" + jar + ")");
  int i;
  if ((jarPath != null) && (jar.startsWith(jarPath))) {
    String jarName=jar.substring(jarPath.length());
    while (jarName.startsWith("/"))     jarName=jarName.substring(1);
    String[] result=new String[jarNames.length + 1];
    for (i=0; i < jarNames.length; i++) {
      result[i]=jarNames[i];
    }
    result[jarNames.length]=jarName;
    jarNames=result;
  }
  try {
    long lastModified=((ResourceAttributes)resources.getAttributes(jar)).getLastModified();
    String[] result=new String[paths.length + 1];
    for (i=0; i < paths.length; i++) {
      result[i]=paths[i];
    }
    result[paths.length]=jar;
    paths=result;
    long[] result3=new long[lastModifiedDates.length + 1];
    for (i=0; i < lastModifiedDates.length; i++) {
      result3[i]=lastModifiedDates[i];
    }
    result3[lastModifiedDates.length]=lastModified;
    lastModifiedDates=result3;
  }
 catch (  NamingException e) {
  }
  if (!validateJarFile(file))   return;
  JarFile[] result2=new JarFile[jarFiles.length + 1];
  for (i=0; i < jarFiles.length; i++) {
    result2[i]=jarFiles[i];
  }
  result2[jarFiles.length]=jarFile;
  jarFiles=result2;
  File[] result4=new File[jarRealFiles.length + 1];
  for (i=0; i < jarRealFiles.length; i++) {
    result4[i]=jarRealFiles[i];
  }
  result4[jarRealFiles.length]=file;
  jarRealFiles=result4;
}

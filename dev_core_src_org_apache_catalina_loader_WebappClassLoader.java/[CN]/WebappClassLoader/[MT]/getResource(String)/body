{
  if (log.isDebugEnabled())   log.debug("getResource(" + name + ")");
  URL url=null;
  if (delegate) {
    if (log.isDebugEnabled())     log.debug("  Delegating to parent classloader " + parent);
    ClassLoader loader=parent;
    if (loader == null)     loader=system;
    url=loader.getResource(name);
    if (url != null) {
      if (log.isDebugEnabled())       log.debug("  --> Returning '" + url.toString() + "'");
      return (url);
    }
  }
  url=findResource(name);
  if (url != null) {
    ResourceEntry entry=(ResourceEntry)resourceEntries.get(name);
    try {
      String repository=entry.codeBase.toString();
      if ((repository.endsWith(".jar")) && (!(name.endsWith(".class")))) {
        File resourceFile=new File(loaderDir,name);
        url=resourceFile.toURL();
      }
    }
 catch (    Exception e) {
    }
    if (log.isDebugEnabled())     log.debug("  --> Returning '" + url.toString() + "'");
    return (url);
  }
  if (!delegate) {
    ClassLoader loader=parent;
    if (loader == null)     loader=system;
    url=loader.getResource(name);
    if (url != null) {
      if (log.isDebugEnabled())       log.debug("  --> Returning '" + url.toString() + "'");
      return (url);
    }
  }
  if (log.isDebugEnabled())   log.debug("  --> Resource not found, returning null");
  return (null);
}

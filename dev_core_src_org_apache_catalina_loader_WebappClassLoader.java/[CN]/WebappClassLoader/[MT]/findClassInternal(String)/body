{
  if (!validate(name))   throw new ClassNotFoundException(name);
  String tempPath=name.replace('.','/');
  String classPath=tempPath + ".class";
  ResourceEntry entry=null;
  entry=findResourceInternal(name,classPath);
  if ((entry == null) || (entry.binaryContent == null))   throw new ClassNotFoundException(name);
  Class clazz=entry.loadedClass;
  if (clazz != null)   return clazz;
  String packageName=null;
  int pos=name.lastIndexOf('.');
  if (pos != -1)   packageName=name.substring(0,pos);
  Package pkg=null;
  if (packageName != null) {
    pkg=getPackage(packageName);
    if (pkg == null) {
      if (entry.manifest == null) {
        definePackage(packageName,null,null,null,null,null,null,null);
      }
 else {
        definePackage(packageName,entry.manifest,entry.codeBase);
      }
    }
  }
  CodeSource codeSource=new CodeSource(entry.codeBase,entry.certificates);
  if (securityManager != null) {
    if (pkg != null) {
      boolean sealCheck=true;
      if (pkg.isSealed()) {
        sealCheck=pkg.isSealed(entry.codeBase);
      }
 else {
        sealCheck=(entry.manifest == null) || !isPackageSealed(packageName,entry.manifest);
      }
      if (!sealCheck)       throw new SecurityException("Sealing violation loading " + name + " : Package "+ packageName+ " is sealed.");
    }
  }
  if (entry.loadedClass == null) {
synchronized (this) {
      if (entry.loadedClass == null) {
        clazz=defineClass(name,entry.binaryContent,0,entry.binaryContent.length,codeSource);
        entry.loadedClass=clazz;
        entry.binaryContent=null;
        entry.source=null;
        entry.codeBase=null;
        entry.manifest=null;
        entry.certificates=null;
      }
 else {
        clazz=entry.loadedClass;
      }
    }
  }
 else {
    clazz=entry.loadedClass;
  }
  return clazz;
}

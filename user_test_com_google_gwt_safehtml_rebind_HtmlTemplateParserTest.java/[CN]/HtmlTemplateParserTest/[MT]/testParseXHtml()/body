{
  assertParseXHtmlResult("[L(<b>foo</b>)]","<b>foo</b>");
  assertParseXHtmlResult("[L(<span>foo<b>), P((TEXT,null,null),0), L(</b></span>)]","<span>foo<b>{0}</b></span>");
  assertParseXHtmlResult("[L(<span>foo<b>), P((TEXT,null,null),1), L(</b>), " + "P((TEXT,null,null),0), L(</span>)]","<span>foo<b>{1}</b>{0}</span>");
  assertParseXHtmlResult("[L(<b id=\"bAr\">fOo</b>)]","<B Id=\"bAr\">fOo</B>");
  assertParseXHtmlResult("[L(<span>foo&amp;bar<b>), P((TEXT,null,null),1), " + "L(</b>foo-cdata &lt;baz&gt;), P((TEXT,null,null),0), " + "L(</span>)]","<span>foo&amp;bar<b>{1}</b><![CDATA[foo-cdata <baz>]]>{0}</span>");
  assertParseXHtmlResult("[L(<a href=\"), P((ATTRIBUTE_START,a,href),0), " + "L(\">), P((TEXT,null,null),1), L(</a>)]","<a href=\"{0}\">{1}</a>");
  assertParseXHtmlResult("[L(<a href=\"http://), P((ATTRIBUTE,a,href),0), " + "L(\">), P((TEXT,null,null),1), L(</a>)]","<a href=\"http://{0}\">{1}</a>");
  assertParseXHtmlResult("[L(<a href=\"), P((ATTRIBUTE_START,a,href),0), " + "L(/), P((ATTRIBUTE,a,href),1), " + "L(\">), P((TEXT,null,null),2), L(</a>)]","<a href=\"{0}/{1}\">{2}</a>");
  assertParseXHtmlResult("[L(<a href=\"http://...&amp;), " + "P((ATTRIBUTE,a,href),0), " + "L(=), P((ATTRIBUTE,a,href),1), "+ "L(\">), P((TEXT,null,null),2), L(</a>)]","<a href=\"http://...&amp;{0}={1}\">{2}</a>");
}

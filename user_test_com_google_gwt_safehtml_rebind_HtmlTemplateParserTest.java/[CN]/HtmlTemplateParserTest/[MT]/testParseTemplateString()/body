{
  assertParseTemplateStringResult("[]","");
  assertParseTemplateStringResult("[L(foo)]","foo");
  assertParseTemplateStringResult("[L(foo), P((UNDEFINED,null,null),0), L(bar)]","foo{0}bar");
  assertParseTemplateStringResult("[L(foo), P((UNDEFINED,null,null),0), " + "P((UNDEFINED,null,null),1), L(bar)]","foo{0}{1}bar");
  assertParseTemplateStringResult("[L(foo), P((UNDEFINED,null,null),0), L(b), " + "P((UNDEFINED,null,null),1), L(bar)]","foo{0}b{1}bar");
  assertParseTemplateStringResult("[L(foo), P((UNDEFINED,null,null),0), L(baz), " + "P((UNDEFINED,null,null),1), L(bar)]","foo{0}baz{1}bar");
  assertParseTemplateStringResult("[P((UNDEFINED,null,null),0), L(foo), P((UNDEFINED,null,null),0), " + "P((UNDEFINED,null,null),1), L(bar)]","{0}foo{0}{1}bar");
  assertParseTemplateStringResult("[P((UNDEFINED,null,null),0), L(foo), P((UNDEFINED,null,null),0), " + "P((UNDEFINED,null,null),1), L(b)]","{0}foo{0}{1}b");
  assertParseTemplateStringResult("[L(foo), P((UNDEFINED,null,null),0), P((UNDEFINED,null,null),1), " + "L(bar), P((UNDEFINED,null,null),2)]","foo{0}{1}bar{2}");
  assertParseTemplateStringResult("[L(f), P((UNDEFINED,null,null),2), P((UNDEFINED,null,null),1), " + "L(bar), P((UNDEFINED,null,null),2)]","f{2}{1}bar{2}");
  assertParseTemplateStringResult("[L(foo{)]","foo{");
  assertParseTemplateStringResult("[L(}foo)]","}foo");
  assertParseTemplateStringResult("[L(foo{text})]","foo{text}");
}

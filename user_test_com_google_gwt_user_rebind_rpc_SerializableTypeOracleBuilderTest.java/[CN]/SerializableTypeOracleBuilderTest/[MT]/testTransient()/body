{
  Set<Resource> resources=new HashSet<Resource>();
  addStandardClasses(resources);
  addCustomGwtTransient(resources);
{
    StringBuilder code=new StringBuilder();
    code.append("import com.google.gwt.user.client.rpc.GwtTransient;\n");
    code.append("import java.io.Serializable;\n");
    code.append("public class A implements Serializable {\n");
    code.append("  transient ServerOnly1 serverOnly1;\n");
    code.append("  @GwtTransient ServerOnly2 serverOnly2;\n");
    code.append("  @com.google.gwt.user.rebind.rpc.GwtTransient ServerOnly3 serverOnly3;\n");
    code.append("}\n");
    resources.add(new StaticJavaResource("A",code));
  }
{
    StringBuilder code=new StringBuilder();
    code.append("import java.io.Serializable;\n");
    code.append("class ServerOnly1 implements Serializable {\n");
    code.append("}\n");
    resources.add(new StaticJavaResource("ServerOnly1",code));
  }
{
    StringBuilder code=new StringBuilder();
    code.append("import java.io.Serializable;\n");
    code.append("class ServerOnly2 implements Serializable {\n");
    code.append("}\n");
    resources.add(new StaticJavaResource("ServerOnly2",code));
  }
{
    StringBuilder code=new StringBuilder();
    code.append("import java.io.Serializable;\n");
    code.append("class ServerOnly3 implements Serializable {\n");
    code.append("}\n");
    resources.add(new StaticJavaResource("ServerOnly3",code));
  }
  TreeLogger logger=createLogger();
  TypeOracle to=TypeOracleTestingUtils.buildTypeOracle(logger,resources);
  JClassType a=to.getType("A");
  JClassType serverOnly1=to.getType("ServerOnly1");
  JClassType serverOnly2=to.getType("ServerOnly2");
  JClassType serverOnly3=to.getType("ServerOnly3");
  SerializableTypeOracleBuilder sob=createSerializableTypeOracleBuilder(logger,to);
  sob.addRootType(logger,a);
  SerializableTypeOracle so=sob.build(logger);
  assertSerializableTypes(so,a);
  assertInstantiable(so,a);
  assertNotFieldSerializable(so,serverOnly1);
  assertNotFieldSerializable(so,serverOnly2);
  assertNotFieldSerializable(so,serverOnly3);
}

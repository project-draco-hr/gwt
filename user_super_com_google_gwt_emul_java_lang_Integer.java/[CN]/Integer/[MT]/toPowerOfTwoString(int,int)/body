{
  final int bufSize=32 / shift;
  int bitMask=(1 << shift) - 1;
  char[] buf=new char[bufSize];
  char[] digits=__Digits.digits;
  int pos=bufSize - 1;
  if (value >= 0) {
    while (value > bitMask) {
      buf[pos--]=digits[value & bitMask];
      value>>=shift;
    }
  }
 else {
    while (pos > 0) {
      buf[pos--]=digits[value & bitMask];
      value>>=shift;
    }
  }
  buf[pos]=digits[value & bitMask];
  return String.__valueOf(buf,pos,bufSize);
}

{
  if (isDisposed())   error(SWT.ERROR_DEVICE_DISPOSED);
  if (event == null)   error(SWT.ERROR_NULL_ARGUMENT);
  int type=event.type;
switch (type) {
case SWT.KeyDown:
case SWT.KeyUp:
{
      int vKey=Display.untranslateKey(event.keyCode);
      if (vKey != 0) {
        return OS.CGPostKeyboardEvent(0,vKey,type == SWT.KeyDown) == 0;
      }
 else {
        vKey=-1;
        int kchrPtr=OS.GetScriptManagerVariable((short)OS.smKCHRCache);
        int key=-1;
        int[] state=new int[1];
        int[] encoding=new int[1];
        short keyScript=(short)OS.GetScriptManagerVariable((short)OS.smKeyScript);
        short regionCode=(short)OS.GetScriptManagerVariable((short)OS.smRegionCode);
        if (OS.UpgradeScriptInfoToTextEncoding(keyScript,(short)OS.kTextLanguageDontCare,regionCode,null,encoding) == OS.paramErr) {
          if (OS.UpgradeScriptInfoToTextEncoding(keyScript,(short)OS.kTextLanguageDontCare,(short)OS.kTextRegionDontCare,null,encoding) == OS.paramErr) {
            encoding[0]=OS.kTextEncodingMacRoman;
          }
        }
        int[] encodingInfo=new int[1];
        OS.CreateUnicodeToTextInfoByEncoding(encoding[0],encodingInfo);
        if (encodingInfo[0] != 0) {
          char[] input={event.character};
          byte[] buffer=new byte[2];
          OS.ConvertFromUnicodeToPString(encodingInfo[0],2,input,buffer);
          OS.DisposeUnicodeToTextInfo(encodingInfo);
          key=buffer[1] & 0x7f;
        }
        if (key == -1)         return false;
        for (int i=0; i <= 0x7F; i++) {
          int result1=OS.KeyTranslate(kchrPtr,(short)(i | 512),state);
          int result2=OS.KeyTranslate(kchrPtr,(short)i,state);
          if ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {
            vKey=i;
            break;
          }
        }
        if (vKey == -1)         return false;
        return OS.CGPostKeyboardEvent(key,vKey,type == SWT.KeyDown) == 0;
      }
    }
case SWT.MouseDown:
case SWT.MouseMove:
case SWT.MouseUp:
{
    CGPoint mouseCursorPosition=new CGPoint();
    int chord=OS.GetCurrentEventButtonState();
    if (type == SWT.MouseMove) {
      mouseCursorPosition.x=event.x;
      mouseCursorPosition.y=event.y;
      return OS.CGPostMouseEvent(mouseCursorPosition,true,3,(chord & 0x1) != 0,(chord & 0x2) != 0,(chord & 0x4) != 0) == 0;
    }
 else {
      int button=event.button;
      if (button < 1 || button > 3)       return false;
      boolean button1=false, button2=false, button3=false;
switch (button) {
case 1:
{
          button1=type == SWT.MouseDown;
          button2=(chord & 0x4) != 0;
          button3=(chord & 0x2) != 0;
          break;
        }
case 2:
{
        button1=(chord & 0x1) != 0;
        button2=type == SWT.MouseDown;
        button3=(chord & 0x2) != 0;
        break;
      }
case 3:
{
      button1=(chord & 0x1) != 0;
      button2=(chord & 0x4) != 0;
      button3=type == SWT.MouseDown;
      break;
    }
}
org.eclipse.swt.internal.carbon.Point pt=new org.eclipse.swt.internal.carbon.Point();
OS.GetGlobalMouse(pt);
mouseCursorPosition.x=pt.h;
mouseCursorPosition.y=pt.v;
return OS.CGPostMouseEvent(mouseCursorPosition,true,3,button1,button3,button2) == 0;
}
}
}
return false;
}

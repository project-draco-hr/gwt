{
  new SwingWorker<LogEvent,Void>(){
    @Override protected LogEvent doInBackground() throws Exception {
      return logEvent;
    }
    @Override protected void done(){
      LogEvent event;
      try {
        event=get();
        SwingTreeLogger logger=event.childLogger;
        DefaultMutableTreeNode node;
        DefaultMutableTreeNode parent;
        int idx;
        if (event.isBranchCommit) {
          SwingTreeLogger parentLogger=(SwingTreeLogger)logger.getParentLogger();
          parent=parentLogger.treeNode;
          idx=logger.indexWithinMyParent;
          node=logger.treeNode;
        }
 else {
          parent=logger.treeNode;
          idx=event.index;
          node=new DefaultMutableTreeNode(event);
        }
        int insertIndex=findInsertionPoint(parent,idx);
        panel.treeModel.insertNodeInto(node,parent,insertIndex);
        if (parent == panel.treeModel.getRoot() && parent.getChildCount() == 1) {
          panel.treeModel.reload();
        }
        if (event.type.needsAttention()) {
          panel.tree.makeVisible(new TreePath(node.getPath()));
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
catch (      ExecutionException e) {
        e.printStackTrace();
      }
    }
    private int findInsertionPoint(    DefaultMutableTreeNode parent,    int index){
      int high=parent.getChildCount() - 1;
      if (high < 0) {
        return 0;
      }
      int low=0;
      while (low <= high) {
        final int mid=low + ((high - low) >> 1);
        DefaultMutableTreeNode midChild=(DefaultMutableTreeNode)parent.getChildAt(mid);
        final Object userObject=midChild.getUserObject();
        int compIdx=-1;
        if (userObject instanceof LogEvent) {
          LogEvent event=(LogEvent)userObject;
          compIdx=event.index;
        }
        if (compIdx < index) {
          low=mid + 1;
        }
 else         if (compIdx > index) {
          high=mid - 1;
        }
 else {
          return mid;
        }
      }
      return low;
    }
  }
.execute();
}

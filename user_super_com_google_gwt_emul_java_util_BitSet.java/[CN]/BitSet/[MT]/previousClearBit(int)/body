{
  if (fromIndex == -1) {
    return -1;
  }
  checkIndex(fromIndex);
  int index=wordIndex(fromIndex);
  if (index >= array.length) {
    return fromIndex;
  }
  int word=~wordAt(array,index) & WORD_MASK;
  word&=(WORD_MASK >>> (BITS_PER_WORD - bitOffset(fromIndex) - 1));
  while (word == 0) {
    if (--index < 0) {
      return -1;
    }
    word=~wordAt(array,index) & WORD_MASK;
  }
  return bitIndex(index) + (32 - Integer.numberOfLeadingZeros(word)) - 1;
}

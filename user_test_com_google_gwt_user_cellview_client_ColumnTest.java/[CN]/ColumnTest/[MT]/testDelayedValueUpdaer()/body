{
  final Element theElem=Document.get().createDivElement();
  final NativeEvent theEvent=Document.get().createClickEvent(0,0,0,0,0,false,false,false,false);
  final MockEditableCell cell=new MockEditableCell(){
    @Override public void onBrowserEvent(    Context context,    Element parent,    String value,    NativeEvent event,    final ValueUpdater<String> valueUpdater){
      setViewData("test","newViewData");
      new Timer(){
        @Override public void run(){
          valueUpdater.update("newValue");
        }
      }
.schedule(200);
    }
  }
;
  final Column<String,String> column=new IdentityColumn<String>(cell);
  final MockFieldUpdater<String,String> fieldUpdater=new MockFieldUpdater<String,String>(){
    @Override public void update(    int index,    String object,    String value){
      assertEquals("newViewData",cell.getViewData("test"));
      super.update(index,object,value);
      finishTest();
    }
  }
;
  column.setFieldUpdater(fieldUpdater);
  delayTestFinish(5000);
  cell.setViewData("test","oldViewData");
  Context context=new Context(3,0,null);
  column.onBrowserEvent(context,theElem,"test",theEvent);
}

{
  if (!peerMap.containsKey(tarFileSet)) {
    super.tarFile(file,tOut,vPath,tarFileSet);
    return;
  }
  IncludeTar includeTar=peerMap.get(tarFileSet);
  String prefix=tarFileSet.getPrefix();
  if (prefix.length() > 0 && !prefix.endsWith("/")) {
    prefix=prefix + "/";
  }
  TarInputStream tIn=null;
  try {
    tIn=new TarInputStream(includeTar.compression.decompress(file,new BufferedInputStream(new FileInputStream(file))));
    TarEntry te=null;
    while ((te=tIn.getNextEntry()) != null) {
      vPath=te.getName();
      if (vPath.length() <= 0) {
        continue;
      }
      if (te.isDirectory() && !vPath.endsWith("/")) {
        vPath+="/";
      }
      vPath=prefix + vPath;
      te.setName(vPath);
      tOut.putNextEntry(te);
      if (te.getSize() > 0) {
        byte[] buffer=new byte[8 * 1024];
        while (true) {
          int count=tIn.read(buffer,0,buffer.length);
          if (count < 0) {
            break;
          }
          tOut.write(buffer,0,count);
        }
      }
      tOut.closeEntry();
    }
  }
 catch (  IOException e) {
    throw new BuildException("Error while expanding " + file.getPath(),e,getLocation());
  }
 finally {
    if (tIn != null) {
      try {
        tIn.close();
      }
 catch (      IOException ignored) {
      }
    }
  }
}

{
  String resourceName=elem.consumeRequiredRawAttribute(FIELD_ATTRIBUTE);
  JClassType resourceType=consumeTypeAttribute(elem);
  if (elem.getAttributeCount() > 0) {
    writer.die(elem,"Should only find attributes \"field\" and \"type\"");
  }
  FieldWriter fieldWriter=fieldManager.registerField(FieldWriterType.IMPORTED,resourceType,resourceName);
  OwnerField ownerField=writer.getOwnerClass().getUiField(resourceName);
  if (ownerField != null) {
    if (!resourceType.getErasedType().equals(ownerField.getType().getRawType().getErasedType())) {
      writer.die(elem,"Type must match %s",ownerField);
    }
    if (ownerField.isProvided()) {
      String initializer;
      if (writer.getDesignTime().isDesignTime()) {
        String typeName=ownerField.getType().getRawType().getQualifiedSourceName();
        initializer=writer.getDesignTime().getProvidedField(typeName,ownerField.getName());
      }
 else {
        initializer="owner." + ownerField.getName();
      }
      fieldWriter.setInitializer(initializer);
      return;
    }
  }
  JMethod factoryMethod=writer.getOwnerClass().getUiFactoryMethod(resourceType);
  if (factoryMethod != null) {
    String initializer;
    if (writer.getDesignTime().isDesignTime()) {
      String typeName=factoryMethod.getReturnType().getQualifiedSourceName();
      initializer=writer.getDesignTime().getProvidedFactory(typeName,factoryMethod.getName(),"");
    }
 else {
      initializer=String.format("owner.%s()",factoryMethod.getName());
    }
    fieldWriter.setInitializer(initializer);
  }
}

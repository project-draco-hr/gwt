{
  String body=elem.consumeUnescapedInnerText();
  String[] source=elem.consumeRawArrayAttribute(SOURCE_ATTRIBUTE);
  if (0 == body.length() && 0 == source.length) {
    writer.die("%s must have either a src attribute or body text",elem);
  }
  String name=elem.consumeRawAttribute(FIELD_ATTRIBUTE,"style");
  JClassType publicType=consumeCssResourceType(elem);
  String[] importTypeNames=elem.consumeRawArrayAttribute(IMPORT_ATTRIBUTE);
  LinkedHashSet<JClassType> importTypes=new LinkedHashSet<JClassType>();
  for (  String type : importTypeNames) {
    importTypes.add(findCssResourceType(elem,type));
  }
  ImplicitCssResource cssMethod=bundleClass.createCssResource(name,source,publicType,body,importTypes);
  FieldWriter field=fieldManager.registerFieldForGeneratedCssResource(cssMethod);
  field.setInitializer(String.format("%s.%s()",bundleClass.getFieldName(),cssMethod.getName()));
}

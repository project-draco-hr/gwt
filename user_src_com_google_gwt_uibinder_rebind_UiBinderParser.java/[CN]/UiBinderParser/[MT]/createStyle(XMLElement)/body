{
  String body=elem.consumeInnerText(new NullInterpreter<String>());
  if (body.length() > 0 && elem.hasAttribute("source")) {
    writer.die("In %s, cannot use both a source attribute and inline css text.",elem);
  }
  String source=elem.consumeAttribute("source");
  String name=elem.consumeAttribute("field","style");
  JClassType publicType=consumeCssResourceType(elem);
  ImplicitCssResource cssMethod=bundleClass.createCssResource(name,source,publicType,body);
  FieldWriter field=fieldManager.registerFieldOfGeneratedType(cssMethod.getPackageName(),cssMethod.getClassName(),cssMethod.getName());
  field.setInitializer(String.format("%s.%s()",bundleClass.getFieldName(),cssMethod.getName()));
}

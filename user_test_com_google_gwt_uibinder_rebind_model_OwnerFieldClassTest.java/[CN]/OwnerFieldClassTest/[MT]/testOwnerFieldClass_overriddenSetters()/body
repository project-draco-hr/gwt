{
  JClassType settersType=gwtTypeAdapter.adaptJavaClass(OverriddenSettersTestClass.class);
  JClassType stringType=gwtTypeAdapter.adaptJavaClass(String.class);
  OwnerFieldClass settersClass=OwnerFieldClass.getFieldClass(settersType,MortalLogger.NULL,uiBinderCtx);
  assertEquals(settersType,settersClass.getRawType());
  JMethod blaBlaSetter=settersClass.getSetter("blaBla");
  assertMethod(blaBlaSetter,"setBlaBla",JPrimitiveType.INT);
  JMethod blaBleSetter=settersClass.getSetter("blaBle");
  assertMethod(blaBleSetter,"setBlaBle",stringType);
  JMethod blaBla2Setter=settersClass.getSetter("blaBla2");
  assertMethod(blaBla2Setter,"setBlaBla2",stringType);
  JMethod blaBle2Setter=settersClass.getSetter("blaBle2");
  assertMethod(blaBle2Setter,"setBlaBle2",stringType);
  JMethod bleSetter=settersClass.getSetter("ble");
  assertMethod(bleSetter,"setBle",stringType);
  JMethod bliSetter=settersClass.getSetter("bli");
  assertMethod(bliSetter,"setBli",stringType);
  try {
    settersClass.getSetter("bli2");
    fail("Expected exception not thrown");
  }
 catch (  UnableToCompleteException utce) {
  }
  try {
    settersClass.getSetter("blo");
    fail("Expected exception not thrown");
  }
 catch (  UnableToCompleteException utce) {
  }
  assertNull(settersClass.getSetter("nothing"));
  assertNull(settersClass.getSetter("nothing2"));
  assertNull(settersClass.getSetter("notASetter"));
  assertNull(settersClass.getSetter("aSetter"));
  assertNull(settersClass.getSetter("static"));
}

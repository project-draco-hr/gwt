{
  double diffScale=this.scale - subtrahend.scale;
  if (this.isZero()) {
    if (diffScale <= 0) {
      return subtrahend.negate();
    }
    if (subtrahend.isZero()) {
      return this;
    }
  }
 else   if (subtrahend.isZero()) {
    if (diffScale >= 0) {
      return this;
    }
  }
  if (diffScale == 0) {
    if (Math.max(this.bitLength,subtrahend.bitLength) + 1 < 54) {
      return valueOf(this.smallValue - subtrahend.smallValue,this.scale);
    }
    return new BigDecimal(this.getUnscaledValue().subtract(subtrahend.getUnscaledValue()),this.scale);
  }
 else   if (diffScale > 0) {
    if (diffScale < DOUBLE_TEN_POW.length && Math.max(this.bitLength,subtrahend.bitLength + DOUBLE_TEN_POW_BIT_LENGTH[(int)diffScale]) + 1 < 54) {
      return valueOf(this.smallValue - subtrahend.smallValue * DOUBLE_TEN_POW[(int)diffScale],this.scale);
    }
    return new BigDecimal(this.getUnscaledValue().subtract(Multiplication.multiplyByTenPow(subtrahend.getUnscaledValue(),(int)diffScale)),this.scale);
  }
 else {
    diffScale=-diffScale;
    if (diffScale < DOUBLE_TEN_POW.length && Math.max(this.bitLength + DOUBLE_TEN_POW_BIT_LENGTH[(int)diffScale],subtrahend.bitLength) + 1 < 54) {
      return valueOf(this.smallValue * DOUBLE_TEN_POW[(int)diffScale] - subtrahend.smallValue,subtrahend.scale);
    }
    return new BigDecimal(Multiplication.multiplyByTenPow(this.getUnscaledValue(),(int)diffScale).subtract(subtrahend.getUnscaledValue()),subtrahend.scale);
  }
}

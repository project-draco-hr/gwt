{
  delayTestFinish(DELAY_TEST_FINISH);
  final RuntimeException exception1=new RuntimeException("first exception");
  final RuntimeException exception2=new RuntimeException("second exception");
  final CountingReceiver count=new CountingReceiver();
  SimpleFooRequest context=req.simpleFooRequest();
  SimpleFooProxy newFoo=context.create(SimpleFooProxy.class);
  context.returnNullString().to(count);
  context.persist().using(newFoo).to(new ThrowingReceiver<Void>(exception1));
  context.returnNullString().to(count);
  final SimpleFooProxy mutableFoo=context.edit(newFoo);
  mutableFoo.setPleaseCrash(42);
  fireContextAndCatch(context,new ThrowingReceiver<Void>(exception2),new ExceptionVerifier(){
    @Override public void verify(    Throwable e){
      assertUmbrellaException(e,exception1,exception2);
      count.assertCounts(2,0,0);
      finishTestAndReset();
    }
  }
);
}

{
  String hostedFilename=getHostedFilename();
  if ("".equals(hostedFilename)) {
    return;
  }
  try {
    URL resource=SelectionScriptLinker.class.getResource(hostedFilename);
    if (resource == null) {
      logger.log(TreeLogger.ERROR,"Unable to find support resource: " + hostedFilename);
      throw new UnableToCompleteException();
    }
    final URLConnection connection=resource.openConnection();
    EmittedArtifact hostedFile=new EmittedArtifact(SelectionScriptLinker.class,hostedFilename){
      @Override public InputStream getContents(      TreeLogger logger) throws UnableToCompleteException {
        try {
          return connection.getInputStream();
        }
 catch (        IOException e) {
          logger.log(TreeLogger.ERROR,"Unable to copy support resource",e);
          throw new UnableToCompleteException();
        }
      }
      @Override public long getLastModified(){
        return connection.getLastModified();
      }
    }
;
    artifacts.add(hostedFile);
  }
 catch (  IOException e) {
    logger.log(TreeLogger.ERROR,"Unable to copy support resource",e);
    throw new UnableToCompleteException();
  }
}

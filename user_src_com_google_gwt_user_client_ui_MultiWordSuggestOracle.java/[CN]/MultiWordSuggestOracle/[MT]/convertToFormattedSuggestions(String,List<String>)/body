{
  List<MultiWordSuggestion> suggestions=new ArrayList<MultiWordSuggestion>();
  for (int i=0; i < candidates.size(); i++) {
    String candidate=candidates.get(i);
    int cursor=0;
    int index=0;
    String formattedSuggestion=toRealSuggestions.get(candidate);
    SafeHtmlBuilder accum=new SafeHtmlBuilder();
    String[] searchWords=query.split(WHITESPACE_STRING);
    while (true) {
      WordBounds wordBounds=findNextWord(candidate,searchWords,index);
      if (wordBounds == null) {
        break;
      }
      if (wordBounds.startIndex == 0 || WHITESPACE_CHAR == candidate.charAt(wordBounds.startIndex - 1)) {
        String part1=formattedSuggestion.substring(cursor,wordBounds.startIndex);
        String part2=formattedSuggestion.substring(wordBounds.startIndex,wordBounds.endIndex);
        cursor=wordBounds.endIndex;
        accum.appendEscaped(part1);
        accum.appendHtmlConstant("<strong>");
        accum.appendEscaped(part2);
        accum.appendHtmlConstant("</strong>");
      }
      index=wordBounds.endIndex;
    }
    if (cursor == 0) {
      continue;
    }
    accum.appendEscaped(formattedSuggestion.substring(cursor));
    MultiWordSuggestion suggestion=createSuggestion(formattedSuggestion,accum.toSafeHtml().asString());
    suggestions.add(suggestion);
  }
  return suggestions;
}

{
  if (arguments.size() != callee.getParameters().size()) {
    return false;
  }
  Set<JsName> parameterNames=new HashSet<JsName>();
  Set<String> parameterIdents=new HashSet<String>();
  for (  JsParameter param : callee.getParameters()) {
    parameterNames.add(param.getName());
    parameterIdents.add(param.getName().getIdent());
  }
  StableNameChecker detector=new StableNameChecker(caller.getScope(),callee.getScope(),parameterNames);
  detector.accept(toInline);
  if (!detector.isStable()) {
    return false;
  }
  if (hasCommonIdents(arguments,toInline,parameterIdents)) {
    return false;
  }
  SideEffectsVisitor sideEffects=new SideEffectsVisitor();
  sideEffects.acceptList(arguments);
  boolean maintainOrder=sideEffects.hasSideEffects();
  if (maintainOrder) {
    List<JsName> requiredOrder=new ArrayList<JsName>();
    for (int i=0; i < arguments.size(); i++) {
      JsExpression e=arguments.get(i);
      JsParameter p=callee.getParameters().get(i);
      if (!alwaysFlexible(e)) {
        requiredOrder.add(p.getName());
      }
    }
    if (requiredOrder.size() > 0) {
      EvaluationOrderVisitor orderVisitor=new EvaluationOrderVisitor(requiredOrder);
      orderVisitor.accept(toInline);
      if (!orderVisitor.maintainsOrder()) {
        return false;
      }
    }
  }
  ParameterUsageVisitor v=new ParameterUsageVisitor(parameterNames);
  v.accept(toInline);
  if (v.parameterAsLValue()) {
    return false;
  }
  return true;
}

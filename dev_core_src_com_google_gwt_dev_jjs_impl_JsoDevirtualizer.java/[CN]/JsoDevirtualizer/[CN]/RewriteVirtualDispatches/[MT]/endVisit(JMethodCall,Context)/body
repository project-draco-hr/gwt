{
  JMethod method=x.getTarget();
  if (!mightBeJsoMethod(method)) {
    return;
  }
  JType instanceType=x.getInstance().getType();
  if (instanceType != program.getTypeJavaLangObject() && !program.typeOracle.canBeJavaScriptObject(instanceType) && instanceType != program.getTypeJavaLangString() && !program.getTypeJavaLangString().getImplements().contains(instanceType)) {
    return;
  }
  ensureDevirtualVersionExists(method);
  JMethod devirtualMethod=devirtualMethodByMethod.get(method);
  ctx.replaceMe(converter.convertCall(x,devirtualMethod));
}

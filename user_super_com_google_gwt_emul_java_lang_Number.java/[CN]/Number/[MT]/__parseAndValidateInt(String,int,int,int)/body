{
  if (s == null) {
    throw NumberFormatException.forNullInputString();
  }
  if (radix < Character.MIN_RADIX || radix > Character.MAX_RADIX) {
    throw NumberFormatException.forRadix(radix);
  }
  int length=s.length();
  int startIndex=(length > 0) && (s.charAt(0) == '-' || s.charAt(0) == '+') ? 1 : 0;
  for (int i=startIndex; i < length; i++) {
    if (Character.digit(s.charAt(i),radix) == -1) {
      throw NumberFormatException.forInputString(s);
    }
  }
  int toReturn=JsUtils.parseInt(s,radix);
  boolean isTooLow=toReturn < lowerBound;
  if (Double.isNaN(toReturn)) {
    throw NumberFormatException.forInputString(s);
  }
 else   if (isTooLow || toReturn > upperBound) {
    throw NumberFormatException.forInputString(s);
  }
  return toReturn;
}

{
  if (s == null) {
    throw new NumberFormatException("Unable to parse null");
  }
  int length=s.length();
  int startIndex=(length > 0) && (s.charAt(0) == '-') ? 1 : 0;
  for (int i=startIndex; i < length; i++) {
    if (Character.digit(s.charAt(i),radix) == -1) {
      throw new NumberFormatException("Could not parse " + s + " in radix "+ radix);
    }
  }
  long toReturn=__parseInt(s,radix);
  if (__isLongNaN(toReturn)) {
    throw new NumberFormatException("Unable to parse " + s);
  }
 else   if (toReturn < lowerBound || toReturn > upperBound) {
    throw new NumberFormatException("The string " + s + " exceeds the range for the requested data type");
  }
  return toReturn;
}

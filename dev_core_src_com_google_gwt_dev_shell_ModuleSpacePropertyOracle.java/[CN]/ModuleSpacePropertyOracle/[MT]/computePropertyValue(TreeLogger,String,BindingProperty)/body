{
  String value=prop.getConstrainedValue();
  if (value != null) {
    return value;
  }
  Condition winner=computeActiveCondition(logger,prop);
  String[] values=prop.getGeneratedValues(winner);
  if (values.length == 1) {
    return values[0];
  }
  try {
    value=(String)space.invokeNativeObject("__gwt_getProperty",null,new Class[]{String.class},new Object[]{prop.getName()});
  }
 catch (  Throwable e) {
    String msg="Error while executing the JavaScript provider for property '" + propertyName + "'";
    logger.log(TreeLogger.ERROR,msg,e);
    throw new BadPropertyValueException(propertyName,"<failed to compute>");
  }
  if (Arrays.asList(values).contains(value)) {
    return value;
  }
 else {
    throw new BadPropertyValueException(propertyName,value);
  }
}

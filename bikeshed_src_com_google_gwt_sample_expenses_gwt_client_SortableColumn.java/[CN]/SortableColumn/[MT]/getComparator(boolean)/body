{
  if (!reverse && forwardComparator != null) {
    return forwardComparator;
  }
  if (reverse && reverseComparator != null) {
    return reverseComparator;
  }
  Comparator<T> comparator=new Comparator<T>(){
    @SuppressWarnings("unchecked") public int compare(    T o1,    T o2){
      C c1=getValue(o1);
      C c2=getValue(o2);
      int comparison=((Comparable<C>)c1).compareTo(c2);
      return reverse ? -comparison : comparison;
    }
  }
;
  if (reverse) {
    reverseComparator=comparator;
  }
 else {
    forwardComparator=comparator;
  }
  return comparator;
}

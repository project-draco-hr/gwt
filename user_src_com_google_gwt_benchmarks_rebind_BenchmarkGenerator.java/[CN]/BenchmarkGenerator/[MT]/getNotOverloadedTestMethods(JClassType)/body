{
  Map<String,List<JMethod>> methods=getAllMethods(requestedClass,new MethodFilter(){
    public boolean accept(    JMethod method){
      return isJUnitTestMethod(method,true);
    }
  }
);
  Map<String,JMethod> notOverloadedMethods=new HashMap<String,JMethod>();
  for (  Map.Entry<String,List<JMethod>> entry : methods.entrySet()) {
    List<JMethod> methodOverloads=entry.getValue();
    if (methodOverloads.size() == 1) {
      JMethod overload=methodOverloads.get(0);
      if (overload.getParameters().length == 0) {
        notOverloadedMethods.put(entry.getKey(),overload);
      }
    }
  }
  return notOverloadedMethods;
}

{
  List<String> values=new ArrayList<String>();
  values.add("b");
  values.add("a");
  values.add("c");
  ListHandler<String> handler=new ListHandler<String>(values);
  IdentityColumn<String> col0=new IdentityColumn<String>(new TextCell());
  Comparator<String> col0Comparator=new Comparator<String>(){
    public int compare(    String o1,    String o2){
      return o1.compareTo(o2);
    }
  }
;
  handler.setComparator(col0,col0Comparator);
  IdentityColumn<String> col1=new IdentityColumn<String>(new TextCell());
  handler.setComparator(col1,null);
  ColumnSortList sortList=new ColumnSortList();
  sortList.push(col0);
  handler.onColumnSort(new ColumnSortEvent(sortList));
  assertEquals("a",values.get(0));
  assertEquals("b",values.get(1));
  assertEquals("c",values.get(2));
  sortList.push(col0);
  handler.onColumnSort(new ColumnSortEvent(sortList));
  assertEquals("c",values.get(0));
  assertEquals("b",values.get(1));
  assertEquals("a",values.get(2));
  sortList.push(col1);
  assertEquals("c",values.get(0));
  assertEquals("b",values.get(1));
  assertEquals("a",values.get(2));
  assertEquals(col0Comparator,handler.getComparator(col0));
  assertNull(handler.getComparator(col1));
  assertNull(handler.getComparator(new IdentityColumn<String>(new TextCell())));
  List<String> newValues=new ArrayList<String>();
  newValues.add("e");
  newValues.add("d");
  newValues.add("f");
  handler.setList(newValues);
  sortList.push(col0);
  handler.onColumnSort(new ColumnSortEvent(sortList));
  assertEquals("d",newValues.get(0));
  assertEquals("e",newValues.get(1));
  assertEquals("f",newValues.get(2));
  assertEquals("c",values.get(0));
  assertEquals("b",values.get(1));
  assertEquals("a",values.get(2));
}

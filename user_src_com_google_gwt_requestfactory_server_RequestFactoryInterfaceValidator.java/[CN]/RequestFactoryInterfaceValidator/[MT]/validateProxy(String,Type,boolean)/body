{
  if (fastFail(binaryName)) {
    return;
  }
  Type proxyType=Type.getObjectType(BinaryName.toInternalName(binaryName));
  ErrorContext logger=parentLogger.setType(proxyType);
  if (!isAssignable(logger,expectedType,proxyType)) {
    parentLogger.poison("%s is not a %s",print(proxyType),print(expectedType));
    return;
  }
  Type domainType=getDomainType(logger,proxyType);
  if (domainType == errorType) {
    logger.poison("The type %s must be annotated with a @%s or @%s annotation",BinaryName.toSourceName(binaryName),ProxyFor.class.getSimpleName(),ProxyForName.class.getSimpleName());
    return;
  }
  if (requireId) {
    checkIdAndVersion(logger,domainType);
  }
  Set<RFMethod> clientPropertyMethods=getMethodsInHierarchy(logger,proxyType);
  for (  RFMethod clientPropertyMethod : clientPropertyMethods) {
    if ("stableId".equals(clientPropertyMethod.getName()) && clientPropertyMethod.getArgumentTypes().length == 0) {
      continue;
    }
    checkPropertyMethod(logger,clientPropertyMethod,domainType);
    maybeCheckReferredProxies(logger,clientPropertyMethod);
  }
}

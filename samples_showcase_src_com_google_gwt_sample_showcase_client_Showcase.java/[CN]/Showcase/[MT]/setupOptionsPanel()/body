{
  VerticalPanel vPanel=new VerticalPanel();
  vPanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_RIGHT);
  if (LocaleInfo.getCurrentLocale().isRTL()) {
    vPanel.getElement().setAttribute("align","left");
  }
 else {
    vPanel.getElement().setAttribute("align","right");
  }
  app.setOptionsWidget(vPanel);
  final ListBox localeBox=new ListBox();
  String currentLocale=LocaleInfo.getCurrentLocale().getLocaleName();
  if (currentLocale.equals("default")) {
    currentLocale="en";
  }
  String[] localeNames=LocaleInfo.getAvailableLocaleNames();
  for (  String localeName : localeNames) {
    if (!localeName.equals("default")) {
      String nativeName=LocaleInfo.getLocaleNativeDisplayName(localeName);
      localeBox.addItem(nativeName,localeName);
      if (localeName.equals(currentLocale)) {
        localeBox.setSelectedIndex(localeBox.getItemCount() - 1);
      }
    }
  }
  localeBox.addChangeListener(new ChangeListener(){
    public void onChange(    Widget sender){
      String localeName=localeBox.getValue(localeBox.getSelectedIndex());
      Window.open(getHostPageLocation() + "?locale=" + localeName,"_self","");
    }
  }
);
  HorizontalPanel localeWrapper=new HorizontalPanel();
  localeWrapper.add(images.locale().createImage());
  localeWrapper.add(localeBox);
  vPanel.add(localeWrapper);
  final HorizontalPanel styleWrapper=new HorizontalPanel();
  vPanel.add(styleWrapper);
  for (int i=0; i < ShowcaseConstants.STYLE_THEMES.length; i++) {
    final ThemeButton button=new ThemeButton(ShowcaseConstants.STYLE_THEMES[i]);
    styleWrapper.add(button);
    button.addClickListener(new ClickListener(){
      public void onClick(      Widget sender){
        CUR_THEME=button.getTheme();
        TabBar bar=((TabBar)app.getContentTitle());
        bar.selectTab(bar.getSelectedTab());
        updateStyleSheets();
      }
    }
);
  }
}

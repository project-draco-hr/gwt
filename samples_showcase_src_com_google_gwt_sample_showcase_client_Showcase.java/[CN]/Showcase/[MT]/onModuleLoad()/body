{
  GWT.create(GeneratorInfo.class);
  injectThemeStyleSheet();
  images.css().ensureInjected();
  ShowcaseConstants constants=GWT.create(ShowcaseConstants.class);
  final SingleSelectionModel<ContentWidget> selectionModel=new SingleSelectionModel<ContentWidget>();
  final MainMenuTreeViewModel treeModel=new MainMenuTreeViewModel(constants,selectionModel);
  Set<ContentWidget> contentWidgets=treeModel.getAllContentWidgets();
  shell=new ShowcaseShell(treeModel);
  RootLayoutPanel.get().add(shell);
  final List<Category> prefetched=new ArrayList<Category>();
  final CellTree mainMenu=shell.getMainMenu();
  mainMenu.addOpenHandler(new OpenHandler<TreeNode>(){
    public void onOpen(    OpenEvent<TreeNode> event){
      Object value=event.getTarget().getValue();
      if (!(value instanceof Category)) {
        return;
      }
      Category category=(Category)value;
      if (!prefetched.contains(category)) {
        prefetched.add(category);
        Prefetcher.prefetch(category.getSplitPoints());
      }
    }
  }
);
  Prefetcher.start();
  selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler(){
    public void onSelectionChange(    SelectionChangeEvent event){
      ContentWidget selected=selectionModel.getSelectedObject();
      if (selected != null) {
        History.newItem(getContentWidgetToken(selected),true);
      }
    }
  }
);
  final ValueChangeHandler<String> historyHandler=new ValueChangeHandler<String>(){
    public void onValueChange(    ValueChangeEvent<String> event){
      ContentWidget contentWidget=treeModel.getContentWidgetForToken(event.getValue());
      if (contentWidget == null) {
        return;
      }
      Category category=treeModel.getCategoryForContentWidget(contentWidget);
      TreeNode node=mainMenu.getRootTreeNode();
      int childCount=node.getChildCount();
      for (int i=0; i < childCount; i++) {
        if (node.getChildValue(i) == category) {
          node.setChildOpen(i,true,true);
          break;
        }
      }
      selectionModel.setSelected(contentWidget,true);
      displayContentWidget(contentWidget);
    }
  }
;
  History.addValueChangeHandler(historyHandler);
  if (History.getToken().length() > 0) {
    History.fireCurrentHistoryState();
  }
 else {
    TreeNode root=mainMenu.getRootTreeNode();
    TreeNode category=root.setChildOpen(0,true);
    ContentWidget content=(ContentWidget)category.getChildValue(0);
    selectionModel.setSelected(content,true);
  }
  createSiteMap(contentWidgets);
}

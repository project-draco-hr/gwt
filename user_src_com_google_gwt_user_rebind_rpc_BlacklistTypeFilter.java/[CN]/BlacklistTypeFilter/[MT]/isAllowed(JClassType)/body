{
  String name=getBaseTypeName(type);
  if (name == null) {
    return true;
  }
  int size=typePatterns.size();
  for (int idx=size - 1; idx >= 0; idx--) {
    logger.log(TreeLogger.DEBUG,"Considering RPC rule " + values.get(idx) + " for type "+ name);
    boolean include=includeType.get(idx);
    Pattern pattern=typePatterns.get(idx);
    if (pattern.matcher(name).matches()) {
      if (include) {
        logger.log(TreeLogger.DEBUG,"Whitelisting type " + name + " according to rule "+ values.get(idx));
        return true;
      }
 else {
        logger.log(TreeLogger.DEBUG,"Blacklisting type " + name + " according to rule "+ values.get(idx));
        return false;
      }
    }
  }
  return true;
}

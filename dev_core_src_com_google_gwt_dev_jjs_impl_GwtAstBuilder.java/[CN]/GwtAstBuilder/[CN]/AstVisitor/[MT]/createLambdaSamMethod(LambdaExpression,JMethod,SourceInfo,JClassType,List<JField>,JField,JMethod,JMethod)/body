{
  for (  JParameter origParam : interfaceMethod.getParams()) {
    samMethod.cloneParameter(origParam);
  }
  JMethodBody samMethodBody=new JMethodBody(info);
  JMethodCall samCall=new JMethodCall(info,x.shouldCaptureInstance ? new JFieldRef(info,new JThisRef(info,innerLambdaClass),outerField,innerLambdaClass) : null,lambdaMethod);
  for (  JField localField : locals) {
    samCall.addArg(new JFieldRef(info,new JThisRef(info,innerLambdaClass),localField,innerLambdaClass));
  }
  for (  JParameter param : samMethod.getParams()) {
    samCall.addArg(new JParameterRef(info,param));
  }
  samMethodBody.getBlock().addStmt(JjsUtils.makeMethodEndStatement(samMethod.getType(),samCall));
  samMethod.setBody(samMethodBody);
  innerLambdaClass.addMethod(samMethod);
}

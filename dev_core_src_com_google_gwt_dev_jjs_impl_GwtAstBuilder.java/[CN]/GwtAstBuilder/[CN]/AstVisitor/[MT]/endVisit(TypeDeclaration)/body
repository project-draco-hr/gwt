{
  JDeclaredType type=curClass.type;
  if (type.getSuperClass() != null) {
    JMethod myClinit=type.getClinitMethod();
    JMethod superClinit=type.getSuperClass().getClinitMethod();
    JMethodCall superClinitCall=new JMethodCall(myClinit.getSourceInfo(),null,superClinit);
    JMethodBody body=(JMethodBody)myClinit.getBody();
    body.getBlock().addStmt(0,superClinitCall.makeStatement());
  }
  if (isSyntheticGetClassNeeded(x,type) && !type.isAbstract()) {
    implementGetClass(type);
  }
  if (type instanceof JEnumType) {
    processEnumType((JEnumType)type);
  }
  if (type instanceof JClassType) {
    addBridgeMethods(x.binding);
  }
  curClass=classStack.pop();
}

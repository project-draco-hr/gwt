{
  CompilationUnitDeclaration cud=curCud.cud;
  if (cud.types == null) {
    return Collections.emptyList();
  }
  for (  TypeDeclaration typeDecl : cud.types) {
    createTypes(typeDecl);
  }
  javaLangObject=(JClassType)typeMap.get(cud.scope.getJavaLangObject());
  javaLangString=(JClassType)typeMap.get(cud.scope.getJavaLangString());
  javaLangClass=(JClassType)typeMap.get(cud.scope.getJavaLangClass());
  javaLangThrowable=(JClassType)typeMap.get(cud.scope.getJavaLangThrowable());
  for (  TypeDeclaration typeDecl : cud.types) {
    resolveTypeRefs(typeDecl);
  }
  for (  TypeDeclaration typeDecl : cud.types) {
    createMembers(typeDecl);
  }
  for (  TypeDeclaration typeDecl : cud.types) {
    typeDecl.traverse(astVisitor,cud.scope);
  }
  return newTypes;
}

{
  Field[] toReturn;
synchronized (operableFieldMap) {
    toReturn=operableFieldMap.get(clazz);
  }
  if (toReturn != null) {
    return toReturn;
  }
  ClassData data=getClassData(clazz.getName());
  toReturn=new Field[data.serializableFields.size()];
  for (int i=0; i < toReturn.length; i++) {
    String fieldName=data.serializableFields.get(i);
    try {
      toReturn[i]=clazz.getDeclaredField(fieldName);
    }
 catch (    SecurityException e) {
      throw new IncompatibleRemoteServiceException("Cannot access field " + fieldName,e);
    }
catch (    NoSuchFieldException e) {
      throw new IncompatibleRemoteServiceException("No field " + fieldName,e);
    }
  }
synchronized (operableFieldMap) {
    operableFieldMap.put(clazz,toReturn);
  }
  return toReturn;
}

{
  JClassType requestReturnType=method.getReturnType().isInterface();
  JClassType invocationReturnType;
  if (requestReturnType == null) {
    poison(badContextReturnType(method,requestInterface,instanceRequestInterface));
    return false;
  }
  if (instanceRequestInterface.isAssignableFrom(requestReturnType)) {
    JClassType[] params=ModelUtils.findParameterizationOf(instanceRequestInterface,requestReturnType);
    methodBuilder.setInstanceType(getEntityProxyType(params[0]));
    invocationReturnType=params[1];
  }
 else   if (requestInterface.isAssignableFrom(requestReturnType)) {
    JClassType[] params=ModelUtils.findParameterizationOf(requestInterface,requestReturnType);
    invocationReturnType=params[0];
  }
 else {
    poison(badContextReturnType(method,requestInterface,instanceRequestInterface));
    return false;
  }
  boolean paramsOk=true;
  for (  JParameter param : method.getParameters()) {
    paramsOk=validateTransportableType(new RequestMethod.Builder(),param.getType(),false) && paramsOk;
  }
  return validateTransportableType(methodBuilder,invocationReturnType,true) && paramsOk;
}

{
  return new Iterator<Widget>(){
    private int index=-1;
    public boolean hasNext(){
switch (index) {
case -1:
        if (header != null) {
          return true;
        }
case 0:
      if (content != null) {
        return true;
      }
case 1:
    if (footer != null) {
      return true;
    }
}
return false;
}
public Widget next(){
switch (index) {
case -1:
  index++;
if (header != null) {
  return header;
}
case 0:
index++;
if (content != null) {
return content;
}
case 1:
index++;
if (footer != null) {
return footer;
}
}
throw new NoSuchElementException();
}
public void remove(){
switch (index) {
case 0:
doRemove(header,"Header");
break;
case 1:
doRemove(content,"Content");
break;
case 2:
doRemove(footer,"Footer");
break;
default :
throw new IllegalStateException();
}
}
private void doRemove(Widget widget,String position){
if (widget == null) {
throw new IllegalStateException(position + " was already removed.");
}
HeaderPanel.this.remove(widget);
}
}
;
}

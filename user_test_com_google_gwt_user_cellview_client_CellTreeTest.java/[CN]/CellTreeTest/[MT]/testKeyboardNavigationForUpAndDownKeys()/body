{
  CellTree cellTree=(CellTree)tree;
  TreeNode root=cellTree.getRootTreeNode();
  TreeNode l1Node=root.setChildOpen(0,true);
  assertEquals(l1Node.getValue(),"a");
  TreeNode l2Node=l1Node.setChildOpen(9,true);
  assertEquals(l2Node.getValue(),"aj");
  assertEquals(l2Node.getChildCount(),10);
  List<String> expectedNavigationPath=Arrays.asList("a","aa","ab","ac","ad","ae","af","ag","ah","ai","aj","aja","ajb","ajc","ajd","aje","ajf","ajg","ajh","aji","ajj","b","c","d","e","f","g","h","i","j");
  assertEquals(cellTree.getKeyboardSelectedTreeNode().getValue(),"a");
  int steps=expectedNavigationPath.size() - 1;
  assertEquals(expectedNavigationPath,repeatKeyInTree(cellTree,KeyCodes.KEY_DOWN,steps));
  Collections.reverse(expectedNavigationPath);
  assertEquals(expectedNavigationPath,repeatKeyInTree(cellTree,KeyCodes.KEY_UP,steps));
}

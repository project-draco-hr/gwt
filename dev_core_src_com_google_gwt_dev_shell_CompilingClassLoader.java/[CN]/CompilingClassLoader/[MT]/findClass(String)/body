{
  if (className == null) {
    throw new ClassNotFoundException("null class name",new NullPointerException());
  }
  if (isInStandardJavaPackage(className)) {
    throw new ClassNotFoundException(className);
  }
  if (BRIDGE_CLASS_NAMES.containsKey(className)) {
    return BRIDGE_CLASS_NAMES.get(className);
  }
  byte[] classBytes;
  try {
    ++stackDepth;
    if (classRewriter != null && classRewriter.isJsoIntf(className)) {
      classBytes=classRewriter.writeJsoIntf(className);
    }
 else {
      String lookupClassName=className;
      if (classRewriter != null && classRewriter.isJsoImpl(className)) {
        lookupClassName=className.substring(0,className.length() - 1);
      }
      classBytes=compiler.getClassBytes(logger,lookupClassName);
      if (classRewriter != null) {
        classBytes=classRewriter.rewrite(className,classBytes);
      }
    }
    Class<?> newClass=defineClass(className,classBytes,0,classBytes.length);
    if (className.equals(JavaScriptHost.class.getName())) {
      javaScriptHostClass=newClass;
      updateJavaScriptHost();
    }
    return newClass;
  }
 catch (  UnableToCompleteException e) {
    throw new ClassNotFoundException(className);
  }
 finally {
    --stackDepth;
  }
}

{
  for (  JField serializableField : serializableFields) {
    JType fieldType=serializableField.getType();
    String readMethodName=Shared.getStreamReadMethodNameFor(fieldType);
    String streamReadExpression="streamReader." + readMethodName + "()";
    if (Shared.typeNeedsCast(fieldType)) {
      streamReadExpression="(" + fieldType.getQualifiedSourceName() + ") "+ streamReadExpression;
    }
    if (needsAccessorMethods(serializableField)) {
      sourceWriter.print("set");
      sourceWriter.print(Shared.capitalize(serializableField.getName()));
      sourceWriter.print("(instance, ");
      sourceWriter.print(streamReadExpression);
      sourceWriter.println(");");
    }
 else {
      sourceWriter.print("instance.");
      sourceWriter.print(serializableField.getName());
      sourceWriter.print(" = ");
      sourceWriter.print(streamReadExpression);
      sourceWriter.println(";");
    }
  }
  sourceWriter.println();
  JClassType superClass=serializableClass.getSuperclass();
  if (superClass != null && serializationOracle.isSerializable(superClass)) {
    String fieldSerializerName=serializationOracle.getFieldSerializerName(superClass);
    sourceWriter.print(fieldSerializerName);
    sourceWriter.println(".deserialize(streamReader, instance);");
  }
}

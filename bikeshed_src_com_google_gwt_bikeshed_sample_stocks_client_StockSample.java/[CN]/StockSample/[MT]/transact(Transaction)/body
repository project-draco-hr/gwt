{
  dataService.transact(t,new AsyncCallback<Transaction>(){
    public void onFailure(    Throwable caught){
      Window.alert("Error: " + caught.getMessage());
    }
    public void onSuccess(    Transaction result){
      recordTransaction(result);
      update();
    }
    /** 
 * Update transactions (list of all transactions),
 * transactionTickers (set of all tickers involved in
 * transactions), and transactionsByTicker (map from
 * ticker to lists of transactions for that ticker).
 */
    private void recordTransaction(    Transaction result){
      transactions.add(0,result);
      String ticker=result.getTicker();
      ListListModel<Transaction> t=transactionListListModelsByTicker.get(ticker);
      if (t == null) {
        t=new ListListModel<Transaction>();
        transactionListListModelsByTicker.put(ticker,t);
      }
      t.getList().add(result);
    }
  }
);
}

{
  searchListModel=new AsyncListModel<StockQuote>(new DataSource<StockQuote>(){
    public void requestData(    AsyncListModel<StockQuote> listModel){
      update();
    }
  }
);
  favoritesListModel=new AsyncListModel<StockQuote>(new DataSource<StockQuote>(){
    public void requestData(    AsyncListModel<StockQuote> listModel){
      update();
    }
  }
);
  treeModel=new TransactionTreeViewModel(this,favoritesListModel,transactionListListModelsByTicker);
  transactionListModel=new ListListModel<Transaction>();
  transactions=transactionListModel.getList();
  RootLayoutPanel.get().add(binder.createAndBindUi(this));
  Columns.favoriteColumn.setFieldUpdater(new FieldUpdater<StockQuote,Boolean>(){
    public void update(    StockQuote object,    Boolean value){
      setFavorite(object.getTicker(),value);
    }
  }
);
  Columns.buyColumn.setFieldUpdater(new FieldUpdater<StockQuote,String>(){
    public void update(    StockQuote quote,    String value){
      buy(quote);
    }
  }
);
  Columns.sellColumn.setFieldUpdater(new FieldUpdater<StockQuote,String>(){
    public void update(    StockQuote quote,    String value){
      sell(quote);
    }
  }
);
  buySellPopup.addCloseHandler(new CloseHandler<PopupPanel>(){
    public void onClose(    CloseEvent<PopupPanel> event){
      Transaction t=buySellPopup.getTransaction();
      if (t != null) {
        transact(t);
      }
    }
  }
);
  update();
}

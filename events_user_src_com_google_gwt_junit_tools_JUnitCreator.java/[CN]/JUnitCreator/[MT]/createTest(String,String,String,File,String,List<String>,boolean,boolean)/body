{
  String installPath=Utility.getInstallPath();
  String gwtUserPath=installPath + '/' + "gwt-user.jar";
  String gwtDevPath=installPath + '/' + Utility.getDevJarName();
  if (!CreatorUtilities.validatePathsAndModules(gwtUserPath,extraClassPaths,null)) {
    return;
  }
  boolean isWindows=gwtDevPath.substring(gwtDevPath.lastIndexOf('/') + 1).indexOf("windows") >= 0;
  boolean isMacOsX=gwtDevPath.substring(gwtDevPath.lastIndexOf('/') + 1).indexOf("mac") >= 0;
  String basePathEnv;
  if (!new File(installPath).isAbsolute()) {
    if (isWindows) {
      basePathEnv="%~dp0\\";
    }
 else {
      basePathEnv="$APPDIR/";
    }
  }
 else {
    basePathEnv="";
  }
  if (!new File(junitPath).isAbsolute() && junitPath.charAt(0) != File.separatorChar) {
    if (isWindows) {
      junitPath="%~dp0\\" + junitPath;
    }
 else {
      junitPath="$APPDIR/" + junitPath;
    }
  }
  int pos=fullClassName.lastIndexOf('.');
  String clientPackageName=fullClassName.substring(0,pos);
  String className=fullClassName.substring(pos + 1);
  pos=moduleName.lastIndexOf('.');
  if (pos >= 0) {
    String modulePackageName=moduleName.substring(0,pos);
    if (modulePackageName.length() == clientPackageName.length() || !clientPackageName.startsWith(modulePackageName + '.')) {
      System.err.println("Warning: '" + modulePackageName + "' is not a parent package of '"+ clientPackageName+ "'.  The source for '"+ className+ "' may be unavailable.");
    }
  }
  pos=clientPackageName.lastIndexOf('.');
  File clientDir=Utility.getDirectory(outDir,"test",true);
  if (pos >= 0) {
    String clientPackage=clientPackageName.replace('.','/');
    clientDir=Utility.getDirectory(clientDir,clientPackage,true);
  }
  Map<String,String> replacements=new HashMap<String,String>();
  replacements.put("@className",className);
  replacements.put("@moduleName",moduleName);
  replacements.put("@clientPackage",clientPackageName);
  replacements.put("@junitPath",junitPath);
  replacements.put("@gwtUserPath",basePathEnv + gwtUserPath);
  replacements.put("@gwtDevPath",basePathEnv + gwtDevPath);
  replacements.put("@vmargs",isMacOsX ? "-XstartOnFirstThread" : "");
  replacements.put("@eclipseExtraLaunchPaths",CreatorUtilities.createEclipseExtraLaunchPaths(extraClassPaths));
  replacements.put("@extraClassPathsColon",CreatorUtilities.appendPaths(":",extraClassPaths));
  replacements.put("@extraClassPathsSemicolon",CreatorUtilities.appendPaths(";",extraClassPaths));
{
    File javaClass=Utility.createNormalFile(clientDir,className + ".java",overwrite,ignore);
    if (javaClass != null) {
      String out=Utility.getFileFromClassPath(PACKAGE_PATH + "JUnitClassTemplate.javasrc");
      Utility.writeTemplateFile(javaClass,out,replacements);
    }
  }
  if (eclipse != null) {
    replacements.put("@projectName",eclipse);
    File hostedConfig=Utility.createNormalFile(outDir,className + "-hosted.launch",overwrite,ignore);
    if (hostedConfig != null) {
      String out=Utility.getFileFromClassPath(PACKAGE_PATH + "JUnit-hosted.launchsrc");
      Utility.writeTemplateFile(hostedConfig,out,replacements);
    }
    File webConfig=Utility.createNormalFile(outDir,className + "-web.launch",overwrite,ignore);
    if (webConfig != null) {
      String out=Utility.getFileFromClassPath(PACKAGE_PATH + "JUnit-web.launchsrc");
      Utility.writeTemplateFile(webConfig,out,replacements);
    }
  }
  String extension;
  if (isWindows) {
    extension=".cmd";
  }
 else {
    extension="";
  }
  File junitHosted=Utility.createNormalFile(outDir,className + "-hosted" + extension,overwrite,ignore);
  if (junitHosted != null) {
    String out=Utility.getFileFromClassPath(PACKAGE_PATH + "junit-hosted" + extension+ "src");
    Utility.writeTemplateFile(junitHosted,out,replacements);
    if (extension.length() == 0) {
      Runtime.getRuntime().exec("chmod u+x " + junitHosted.getAbsolutePath());
    }
  }
  File junitWeb=Utility.createNormalFile(outDir,className + "-web" + extension,overwrite,ignore);
  if (junitWeb != null) {
    String out=Utility.getFileFromClassPath(PACKAGE_PATH + "junit-web" + extension+ "src");
    Utility.writeTemplateFile(junitWeb,out,replacements);
    if (extension.length() == 0) {
      Runtime.getRuntime().exec("chmod u+x " + junitWeb.getAbsolutePath());
    }
  }
}

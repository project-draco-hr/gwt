{
  T result=null;
  Throwable caught=null;
  try {
    String encodedResponse=response.getText();
    int statusCode=response.getStatusCode();
    boolean toss=statsContext.isStatsAvailable() && statsContext.stats(statsContext.bytesStat(methodName,encodedResponse.length(),"responseReceived"));
    if (statusCode != Response.SC_OK) {
      caught=new StatusCodeException(statusCode,encodedResponse);
    }
 else     if (encodedResponse == null) {
      caught=new InvocationException("No response payload");
    }
 else     if (RemoteServiceProxy.isReturnValue(encodedResponse)) {
      result=(T)responseReader.read(streamFactory.createStreamReader(encodedResponse));
    }
 else     if (RemoteServiceProxy.isThrownException(encodedResponse)) {
      caught=(Throwable)streamFactory.createStreamReader(encodedResponse).readObject();
    }
 else {
      caught=new InvocationException(encodedResponse);
    }
  }
 catch (  com.google.gwt.user.client.rpc.SerializationException e) {
    caught=new IncompatibleRemoteServiceException("The response could not be deserialized",e);
  }
catch (  Throwable e) {
    caught=e;
  }
 finally {
    boolean toss=statsContext.isStatsAvailable() && statsContext.stats(statsContext.timeStat(methodName,"responseDeserialized"));
  }
  try {
    if (caught == null) {
      callback.onSuccess(result);
    }
 else     if (tokenExceptionHandler != null && caught instanceof RpcTokenException) {
      tokenExceptionHandler.onRpcTokenException((RpcTokenException)caught);
    }
 else {
      callback.onFailure(caught);
    }
  }
  finally {
    Object returned=(caught == null) ? result : caught;
    boolean toss=statsContext.isStatsAvailable() && statsContext.stats(statsContext.timeStat(methodName,returned,"end"));
  }
}

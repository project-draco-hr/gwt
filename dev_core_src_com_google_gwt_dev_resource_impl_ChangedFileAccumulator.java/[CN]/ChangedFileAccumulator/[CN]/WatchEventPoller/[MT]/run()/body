{
  try {
    while (true) {
      WatchKey watchKey;
      try {
        watchKey=watchService.take();
      }
 catch (      InterruptedException e) {
        return;
      }
catch (      ClosedWatchServiceException e) {
        return;
      }
synchronized (changedFiles) {
        Path containingDirectory=pathsByWatchKey.get(watchKey);
        for (        WatchEvent<?> watchEvent : watchKey.pollEvents()) {
          WatchEvent.Kind<?> eventKind=watchEvent.kind();
          if (eventKind == StandardWatchEventKinds.OVERFLOW) {
            setFailed(new RuntimeException("Changes occurred faster than they could be recorded."));
            return;
          }
          if (!(watchEvent.context() instanceof Path)) {
            continue;
          }
          Path changedFileName=(Path)watchEvent.context();
          Path changedPath=containingDirectory.resolve(changedFileName);
          if (eventKind == StandardWatchEventKinds.ENTRY_CREATE && Files.isDirectory(changedPath)) {
            try {
              recursivelyRegisterListeners(changedPath,true);
            }
 catch (            IOException e) {
              setFailed(e);
              return;
            }
          }
          changedFiles.add(changedPath.toFile().getAbsoluteFile());
        }
        if (!watchKey.reset()) {
          pathsByWatchKey.remove(watchKey);
        }
      }
    }
  }
 catch (  RuntimeException e) {
    setFailed(e);
  }
}

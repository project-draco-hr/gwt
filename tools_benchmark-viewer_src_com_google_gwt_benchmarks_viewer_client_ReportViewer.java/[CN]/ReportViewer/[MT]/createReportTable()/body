{
  FlexTable topTable=new FlexTable();
  FlexTable tempReportTable=new FlexTable();
  tempReportTable.setBorderWidth(1);
  tempReportTable.setCellPadding(5);
  tempReportTable.setWidget(0,0,new Label("Date Created"));
  tempReportTable.setWidget(0,1,new Label("GWT Version"));
  if (report == null) {
    tempReportTable.setWidget(1,0,new Label("No currently selected report."));
    tempReportTable.getFlexCellFormatter().setColSpan(1,0,3);
    return tempReportTable;
  }
  detailsLabel.setHTML("<h3>" + report.getId() + " details </h3>");
  tempReportTable.setWidget(1,0,new Label(report.getDateString()));
  tempReportTable.setWidget(1,1,new Label(report.getGwtVersion()));
  int currentRow=1;
  Collections.sort(report.getCategories(),new Comparator<Category>(){
    public int compare(    Category c1,    Category c2){
      return c1.getName().compareTo(c2.getName());
    }
  }
);
  for (int i=0; i < report.getCategories().size(); ++i) {
    Category c=report.getCategories().get(i);
    if (!c.getName().equals("")) {
      FlexTable categoryTable=new FlexTable();
      categoryTable.setBorderWidth(0);
      categoryTable.setCellPadding(5);
      categoryTable.setText(0,0,c.getName());
      categoryTable.getFlexCellFormatter().setStyleName(0,0,"benchmark-category");
      categoryTable.setWidget(0,1,new Label("Description"));
      categoryTable.setWidget(1,0,new Label(c.getName()));
      categoryTable.setWidget(1,1,new Label(c.getDescription()));
      topTable.setWidget(currentRow++,0,categoryTable);
    }
    Collections.sort(c.getBenchmarks(),new Comparator<Benchmark>(){
      public int compare(      Benchmark b1,      Benchmark b2){
        return b1.getName().compareTo(b2.getName());
      }
    }
);
    for (int j=0; j < c.getBenchmarks().size(); ++j) {
      Benchmark benchmark=c.getBenchmarks().get(j);
      FlexTable benchmarkTable=new FlexTable();
      benchmarkTable.setBorderWidth(0);
      benchmarkTable.setCellPadding(5);
      benchmarkTable.setText(0,0,benchmark.getName());
      String codeHtml;
      String sourceText=benchmark.getSourceCode();
      if (sourceText != null) {
        Element tempElem=DOM.createDiv();
        DOM.setInnerText(tempElem,sourceText);
        String escapedCodeHtml=DOM.getInnerHTML(tempElem);
        codeHtml="<pre>" + escapedCodeHtml + "</pre>";
      }
 else {
        codeHtml="<i>(source not available)</i>";
      }
      benchmarkTable.setWidget(1,0,new HTML(codeHtml));
      benchmarkTable.getFlexCellFormatter().setStyleName(0,0,"benchmark-name");
      benchmarkTable.getFlexCellFormatter().setStyleName(1,0,"benchmark-code");
      topTable.setWidget(currentRow++,0,benchmarkTable);
      FlexTable resultsTable=new FlexTable();
      resultsTable.setBorderWidth(0);
      resultsTable.setCellPadding(5);
      FlexTable.FlexCellFormatter resultsFormatter=resultsTable.getFlexCellFormatter();
      topTable.setWidget(currentRow++,0,resultsTable);
      Collections.sort(benchmark.getResults(),new Comparator<Result>(){
        public int compare(        Result r1,        Result r2){
          return r1.getAgent().compareTo(r2.getAgent());
        }
      }
);
      final List<FlexTable> trialsTables=new ArrayList<FlexTable>();
      int numVariables=0;
      List<String> variableNames=null;
      if (benchmark.getResults().size() > 0) {
        Result sampleResult=benchmark.getResults().get(0);
        if (sampleResult.getTrials().size() > 0) {
          Trial sampleTrial=sampleResult.getTrials().get(0);
          numVariables=sampleTrial.getVariables().size();
          Map<String,String> variables=sampleTrial.getVariables();
          variableNames=new ArrayList<String>(variables.keySet());
          Collections.sort(variableNames);
        }
      }
      final MutableBool isVisible=new MutableBool(numVariables > 2);
      String buttonName=isVisible.value ? "Hide Data" : "Show Data";
      Button visibilityButton=new Button(buttonName,new ClickListener(){
        public void onClick(        Widget sender){
          isVisible.value=!isVisible.value;
          for (int i=0; i < trialsTables.size(); ++i) {
            Widget w=trialsTables.get(i);
            w.setVisible(isVisible.value);
          }
          String name=isVisible.value ? "Hide Data" : "Show Data";
          ((Button)sender).setText(name);
        }
      }
);
      for (int k=0; k < benchmark.getResults().size(); ++k) {
        Result result=benchmark.getResults().get(k);
        if (numVariables <= 2) {
          resultsTable.setWidget(0,k,new Image(getImageUrl(report.getId(),c.getName(),benchmark.getClassName(),benchmark.getName(),result.getAgent())));
        }
 else {
          if (k == 0) {
            resultsTable.setHTML(0,k,"<b>" + BrowserInfo.getBrowser(result.getAgent()) + "</b><br><font size=\"-1\">(Graphs are not yet available "+ "for benchmarks with more than two parameters)</font>");
          }
        }
        resultsFormatter.setAlignment(2,k,HasHorizontalAlignment.ALIGN_LEFT,HasVerticalAlignment.ALIGN_TOP);
        FlexTable trialsTable=new FlexTable();
        trialsTable.setVisible(isVisible.value);
        trialsTables.add(trialsTable);
        trialsTable.setBorderWidth(1);
        trialsTable.setCellPadding(5);
        if (k == 0) {
          resultsTable.setWidget(1,k,visibilityButton);
          resultsFormatter.setColSpan(1,k,benchmark.getResults().size());
          resultsFormatter.setAlignment(1,k,HasHorizontalAlignment.ALIGN_LEFT,HasVerticalAlignment.ALIGN_MIDDLE);
        }
        resultsTable.setWidget(2,k,trialsTable);
        for (int varIndex=0; varIndex < numVariables; ++varIndex) {
          String varName=variableNames.get(varIndex);
          trialsTable.setHTML(0,varIndex,varName);
        }
        trialsTable.setHTML(0,numVariables,"Timing (ms)");
        int l=0;
        for (        Trial trial : result.getTrials()) {
          for (int varIndex=0; varIndex < numVariables; ++varIndex) {
            String varName=variableNames.get(varIndex);
            String varValue=trial.getVariables().get(varName);
            trialsTable.setHTML(l + 1,varIndex,varValue);
          }
          String data=trial.getRunTimeMillis() + "";
          trialsTable.setHTML(l + 1,numVariables,data);
          ++l;
        }
        if (result.getException() != null) {
          trialsTable.setHTML(l + 1,numVariables,result.getException());
        }
      }
    }
  }
  return topTable;
}

{
  JReferenceType argType=(JReferenceType)x.getExpr().getType();
  JReferenceType toType=x.getTestType();
  assert(toType == toType.getUnderlyingType());
  if (program.typeOracle.isArrayOfJso(toType)) {
    toType=program.getOrCreateArrayType(program.getJavaScriptObject(),((JArrayType)toType).getDims());
  }
  boolean isTrivialCast=program.typeOracle.canTriviallyCast(argType,toType) || (program.typeOracle.willCrossCastLikeJso(argType) && program.typeOracle.willCrossCastLikeJso(toType));
  if (pruneTrivialCasts && isTrivialCast) {
    JBinaryOperation eq=new JBinaryOperation(x.getSourceInfo(),program.getTypePrimitiveBoolean(),JBinaryOperator.NEQ,x.getExpr(),program.getLiteralNull());
    ctx.replaceMe(eq);
  }
 else {
    ctx.replaceMe(implementCastOrInstanceOfOperation(x.getSourceInfo(),x.getExpr(),toType,instanceOfMethodsByTargetTypeCategory,false));
  }
}

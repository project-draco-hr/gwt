{
  try {
    new Integer("05abcd");
    fail("Constructor should have thrown NumberFormatException");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.decode("05abcd");
    fail("Decode should have thrown NumberFormatException");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt("05abcd");
    fail("parseInt should have thrown NumberFormatException");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt(String.valueOf(Long.MAX_VALUE));
    fail("parseInt should reject numbers greater than the range of int");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt(String.valueOf(Long.MIN_VALUE));
    fail("parseInt should reject numbers less than the range of int");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt(String.valueOf((long)Integer.MAX_VALUE + 1));
    fail("parseInt should reject numbers greater than the range of int");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt(String.valueOf((long)Integer.MIN_VALUE - 1));
    fail("parseInt should reject numbers less than the range of int");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt("-");
    fail("parseInt should reject \"-\"");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt(" -12345");
    fail("parseInt should reject leading whitespace");
  }
 catch (  NumberFormatException e) {
  }
  try {
    Integer.parseInt("-12345 ");
    fail("parseInt should reject trailing whitespace");
  }
 catch (  NumberFormatException e) {
  }
}

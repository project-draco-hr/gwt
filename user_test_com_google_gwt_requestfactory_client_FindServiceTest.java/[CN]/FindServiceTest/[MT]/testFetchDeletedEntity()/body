{
  delayTestFinish(TEST_DELAY);
  SimpleBarRequest context=req.simpleBarRequest();
  SimpleBarProxy willDelete=context.create(SimpleBarProxy.class);
  context.persistAndReturnSelf().using(willDelete).fire(new Receiver<SimpleBarProxy>(){
    @Override public void onSuccess(    SimpleBarProxy response){
      final EntityProxyId<SimpleBarProxy> id=response.stableId();
      SimpleBarRequest context=req.simpleBarRequest();
      Request<Void> persist=context.persist().using(response);
      context.edit(response).setFindFails(true);
      persist.fire(new Receiver<Void>(){
        @Override public void onSuccess(        Void response){
          req.find(id).fire(new Receiver<SimpleBarProxy>(){
            @Override public void onSuccess(            SimpleBarProxy response){
              assertNull(response);
              finishTestAndReset();
            }
          }
);
        }
      }
);
    }
  }
);
}

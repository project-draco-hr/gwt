{
  try {
    int parentType=0;
    if (aAST.getParent() != null) {
      parentType=aAST.getParent().getType();
    }
switch (aAST.getType()) {
case TokenTypes.OBJBLOCK:
      classScopes.push(new ScopeState());
    previousMethodName=null;
  break;
case TokenTypes.CTOR_DEF:
if (parentType != TokenTypes.OBJBLOCK) {
  return;
}
checkState(aAST,State.CONSTRUCTORS,"Constructor");
break;
case TokenTypes.MODIFIERS:
if (parentType == TokenTypes.VARIABLE_DEF) {
checkVariable(aAST);
}
if (parentType == TokenTypes.METHOD_DEF) {
checkMethod(aAST);
}
break;
case TokenTypes.STATIC_INIT:
{
checkState(aAST,State.STATIC_INITS,"Static initializer");
break;
}
case TokenTypes.INSTANCE_INIT:
{
checkState(aAST,State.INSTANCE_INITS,"Instance initializer");
}
break;
default :
}
}
 catch (Throwable t) {
t.printStackTrace();
throw new RuntimeException("Exception/Error in OrderCheck",t);
}
}

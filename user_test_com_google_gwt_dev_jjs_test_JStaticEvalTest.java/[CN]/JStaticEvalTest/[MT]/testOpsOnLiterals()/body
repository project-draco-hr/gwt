{
  assertEquals(10,returnIntFive() + returnIntFive());
  assertEquals(0,returnIntFive() - returnIntFive());
  assertEquals(25,returnIntFive() * returnIntFive());
  assertEquals(1,returnIntFive() / returnIntFive());
  assertEquals(3,returnIntThree() % returnIntFive());
  assertEquals(96,returnIntThree() << returnIntFive());
  assertEquals(0,returnIntThree() >> returnIntFive());
  assertEquals(134217727,(-returnIntThree()) >>> returnIntFive());
  assertEquals(7,returnIntFive() | returnIntThree());
  assertEquals(1,returnIntFive() & returnIntThree());
  assertEquals(0,returnIntFive() ^ returnIntFive());
  assertEquals(1.0,returnDoubleOneHalf() + returnDoubleOneHalf());
  assertEquals(0.0,returnDoubleOneHalf() - returnDoubleOneHalf());
  assertEquals(0.25,returnDoubleOneHalf() * returnDoubleOneHalf());
  assertEquals(1.0,returnDoubleOneHalf() / returnDoubleOneHalf());
  assertEquals(0.5,returnDoubleOneHalf() % returnDoubleFive());
  assertTrue(returnIntFive() == returnIntFive());
  assertTrue(returnLongFive() == returnLongFive());
  assertTrue(returnFloatFive() == returnFloatFive());
  assertTrue(returnDoubleFive() == returnDoubleFive());
  assertTrue(returnCharFive() == returnCharFive());
  assertTrue(returnIntFive() == returnFloatFive());
  assertFalse(returnIntFive() != returnIntFive());
  assertFalse(returnLongFive() != returnLongFive());
  assertFalse(returnFloatFive() != returnFloatFive());
  assertFalse(returnDoubleFive() != returnDoubleFive());
  assertFalse(returnCharFive() != returnCharFive());
  assertFalse(returnIntFive() != returnFloatFive());
  assertTrue(returnTrue() || returnFalse());
  assertFalse(returnTrue() && returnFalse());
  assertFalse(returnTrue() ^ returnTrue());
  assertFalse(returnIntFive() < returnIntThree());
  assertFalse(returnIntFive() <= returnIntThree());
  assertTrue(returnIntFive() > returnIntThree());
  assertTrue(returnIntFive() >= returnIntThree());
  assertTrue(returnDoubleOneHalf() < returnDoubleFive());
  assertTrue(returnDoubleOneHalf() <= returnDoubleFive());
  assertFalse(returnDoubleOneHalf() > returnDoubleFive());
  assertFalse(returnDoubleOneHalf() >= returnDoubleFive());
  assertEquals(10,returnIntFive() + returnCharFive());
  assertTrue(returnIntThree() < returnCharFive());
  assertEquals(-5,-returnIntFive());
  assertEquals(-5L,-returnLongFive());
  assertEquals(-5.0,-returnFloatFive());
  assertEquals(-5.0,-returnDoubleFive());
  assertEquals(-10000000000000000000.0,-returnBigDouble());
  assertFalse(!returnTrue());
  assertTrue(!returnFalse());
  assertEquals(-6,~returnIntFive());
  assertEquals(-6L,~returnLongFive());
  assertEquals(65536,((char)returnIntNegOne()) + 1);
  assertEquals(10.0,((double)returnIntFive()) + ((double)returnIntFive()));
}

{
  assertEquals(5,fieldIntFive + returnIntZero());
  assertEquals(5L,fieldLongFive + returnIntZero());
  assertEquals(5.0,fieldFloatFive + returnIntZero());
  assertEquals(5.0,fieldDoubleFive + returnIntZero());
  assertEquals(5.0,fieldDoubleFive + returnCharZero());
  assertEquals(5,returnIntZero() + fieldIntFive);
  assertEquals(5L,returnIntZero() + fieldLongFive);
  assertEquals(5.0,returnIntZero() + fieldFloatFive);
  assertEquals(5.0,returnIntZero() + fieldDoubleFive);
  assertEquals(5.0,returnCharZero() + fieldDoubleFive);
  assertEquals(5,fieldIntFive - returnIntZero());
  assertEquals(5L,fieldLongFive - returnIntZero());
  assertEquals(5.0,fieldFloatFive - returnIntZero());
  assertEquals(5.0,fieldDoubleFive - returnIntZero());
  assertEquals(-5,returnIntZero() - fieldIntFive);
  assertEquals(-5L,returnIntZero() - fieldLongFive);
  assertEquals(-5.0,returnDoubleZero() - fieldLongFive);
  assertEquals(-5.0,returnIntZero() - fieldFloatFive);
  assertEquals(-5.0,returnIntZero() - fieldDoubleFive);
  assertEquals(5,fieldIntFive * returnIntOne());
  assertEquals(5L,fieldLongFive * returnLongOne());
  assertEquals(5.0,fieldFloatFive * returnFloatOne());
  assertEquals(5.0,fieldDoubleFive * returnDoubleOne());
  assertEquals(5,fieldIntFive / returnIntOne());
  assertEquals(5L,fieldLongFive / returnLongOne());
  assertEquals(5.0,fieldFloatFive / returnFloatOne());
  assertEquals(5.0,fieldDoubleFive / returnDoubleOne());
  assertEquals(-5,fieldIntFive * -returnIntOne());
  assertEquals(-5L,fieldLongFive * -returnLongOne());
  assertEquals(-5.0,fieldFloatFive * -returnFloatOne());
  assertEquals(-5.0,fieldDoubleFive * -returnDoubleOne());
  assertEquals(-327675,fieldIntFive * -returnCharNegOne());
  assertEquals(-5,fieldIntFive / -returnIntOne());
  assertEquals(-5L,fieldLongFive / -returnLongOne());
  assertEquals(-5.0,fieldFloatFive / -returnFloatOne());
  assertEquals(-5.0,fieldDoubleFive / -returnDoubleOne());
  assertEquals(5,-returnMinusFieldIntFive());
  assertEquals(5L,-returnMinusFieldLongFive());
  assertEquals(5.0,-returnMinusFieldFloatFive());
  assertEquals(5.0,-returnMinusFieldDoubleFive());
  assertEquals(5,fieldIntFive << returnIntZero());
  assertEquals(5L,fieldLongFive << returnIntZero());
  assertEquals(5,fieldIntFive >> returnIntZero());
  assertEquals(5L,fieldLongFive >> returnIntZero());
  assertEquals(5,fieldIntFive >>> returnIntZero());
  assertEquals(5L,fieldLongFive >>> returnIntZero());
  assertTrue(!returnNotFieldTrue());
  assertTrue(fieldTrue ^ returnFalse());
  assertFalse(fieldTrue ^ returnTrue());
  assertFalse(returnTrue() ^ fieldTrue);
  assertTrue(returnFalse() ^ fieldTrue);
  assertEquals(0.0,fieldIntFive * returnDoubleZero());
  try {
    assertEquals(0.0,throwError() * returnDoubleZero());
    fail("Expected an exception");
  }
 catch (  Error e) {
  }
  assertEquals(0.0,returnDoubleZero() * fieldIntFive);
  try {
    assertEquals(0.0,returnDoubleZero() * throwError());
    fail("Expected an exception");
  }
 catch (  Error e) {
  }
  assertTrue(fieldIntArray != null);
  assertFalse(fieldIntArray == null);
  if (fieldIntArray == null) {
    fail();
  }
  if (fieldIntArray != null) {
  }
 else {
    fail();
  }
  assertTrue(returnEmptyString() != null);
  assertFalse(returnEmptyString() == null);
  if (returnEmptyString() == null) {
    fail();
  }
  assertFalse(fieldObject == null);
  if (fieldObject == null) {
    fail();
  }
}

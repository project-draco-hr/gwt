{
  int resultSign=op1.compareTo(op2);
  if (op1.sign == 0) {
    System.arraycopy(op2.digits,0,op1.digits,0,op2.numberLength);
    op1.sign=-op2.sign;
  }
 else   if (op1.sign != op2.sign) {
    add(op1.digits,op1.digits,op1.numberLength,op2.digits,op2.numberLength);
    op1.sign=resultSign;
  }
 else {
    int sign=unsignedArraysCompare(op1.digits,op2.digits,op1.numberLength,op2.numberLength);
    if (sign > 0) {
      subtract(op1.digits,op1.digits,op1.numberLength,op2.digits,op2.numberLength);
    }
 else {
      inverseSubtract(op1.digits,op1.digits,op1.numberLength,op2.digits,op2.numberLength);
      op1.sign=-op1.sign;
    }
  }
  op1.numberLength=Math.max(op1.numberLength,op2.numberLength) + 1;
  op1.cutOffLeadingZeroes();
  op1.unCache();
}

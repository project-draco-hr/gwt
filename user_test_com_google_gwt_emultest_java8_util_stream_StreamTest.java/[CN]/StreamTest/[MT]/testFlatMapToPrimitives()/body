{
  assertEquals(0,Stream.<IntStream>empty().flatMapToInt(Function.identity()).count());
  assertEquals(0,Stream.of(IntStream.empty()).flatMapToInt(Function.identity()).count());
  assertEquals(0,Stream.of(IntStream.of()).flatMapToInt(Function.identity()).count());
  assertEquals(1,Stream.of(IntStream.of(0)).flatMapToInt(Function.identity()).count());
  Stream<IntStream> intStreams=Stream.of(IntStream.of(1,2),IntStream.empty(),IntStream.of(5));
  assertEquals(new int[]{1,2,5},intStreams.flatMapToInt(Function.identity()).toArray());
  Stream<LongStream> longStreams=Stream.of(LongStream.of(1,2),LongStream.empty(),LongStream.of(5));
  assertEquals(new long[]{1,2,5},longStreams.flatMapToLong(Function.identity()).toArray());
  Stream<DoubleStream> doubleStreams=Stream.of(DoubleStream.of(1,2),DoubleStream.empty(),DoubleStream.of(5));
  assertEquals(new double[]{1,2,5},doubleStreams.flatMapToDouble(Function.identity()).toArray());
}

{
  if (!enabled) {
    return;
  }
  long endTimeNanos=timeKeeper.normalizedTimeNanos();
  if (data.length % 2 == 1) {
    throw new IllegalArgumentException("Unmatched data argument");
  }
  Stack<Event> threadPendingEvents=pendingEvents.get();
  if (threadPendingEvents.isEmpty()) {
    throw new IllegalStateException("Tried to end an event that never started!");
  }
  Event currentEvent=threadPendingEvents.pop();
  assert(endTimeNanos >= currentEvent.startTimeNanos);
  currentEvent.durationNanos=endTimeNanos - currentEvent.startTimeNanos;
  while (currentEvent != event && !threadPendingEvents.isEmpty()) {
    currentEvent.addData("Missed","This event was closed without an explicit call to Event.end()");
    currentEvent=threadPendingEvents.pop();
    assert(endTimeNanos >= currentEvent.startTimeNanos);
    currentEvent.durationNanos=endTimeNanos - currentEvent.startTimeNanos;
  }
  if (threadPendingEvents.isEmpty() && currentEvent != event) {
    currentEvent.addData("Missed","Fell off the end of the threadPending events");
  }
  if (logGcTime) {
    addGcEvents(currentEvent);
  }
  currentEvent.addData(data);
  if (logOverheadTime) {
    addOverheadEvent(currentEvent);
  }
  if (threadPendingEvents.isEmpty()) {
    eventsToWrite.add(currentEvent);
  }
}

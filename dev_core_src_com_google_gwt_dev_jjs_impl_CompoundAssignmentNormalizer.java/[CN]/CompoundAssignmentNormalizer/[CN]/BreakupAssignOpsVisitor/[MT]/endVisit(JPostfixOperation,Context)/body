{
  JUnaryOperator op=x.getOp();
  if (!op.isModifying()) {
    return;
  }
  if (!shouldBreakUp(x)) {
    return;
  }
  JMultiExpression multi=new JMultiExpression(x.getSourceInfo());
  ReplaceSideEffectsInLvalue replacer=new ReplaceSideEffectsInLvalue(multi);
  JExpression newArg=replacer.accept(x.getArg());
  JExpression expressionReturn=expressionToReturn(newArg);
  JLocal tempLocal=createTempLocal(x.getSourceInfo(),expressionReturn.getType());
  JLocalRef tempRef=new JLocalRef(x.getSourceInfo(),tempLocal);
  JBinaryOperation asg=new JBinaryOperation(x.getSourceInfo(),x.getType(),JBinaryOperator.ASG,tempRef,expressionReturn);
  multi.addExpressions(asg);
  asg=createAsgOpFromUnary(newArg,op);
  multi.addExpressions(accept(asg));
  tempRef=new JLocalRef(x.getSourceInfo(),tempLocal);
  multi.addExpressions(tempRef);
  ctx.replaceMe(multi);
}

{
  JBinaryOperator newOp;
  if (op == JUnaryOperator.INC) {
    newOp=JBinaryOperator.ASG_ADD;
  }
 else   if (op == JUnaryOperator.DEC) {
    newOp=JBinaryOperator.ASG_SUB;
  }
 else {
    throw new InternalCompilerException("Unexpected modifying unary operator: " + String.valueOf(op.getSymbol()));
  }
  JExpression one;
  if (arg.getType() == program.getTypePrimitiveLong()) {
    one=program.getLiteralLong(1);
  }
 else {
    one=program.getLiteralInt(1);
  }
  JBinaryOperation asg=new JBinaryOperation(arg.getSourceInfo(),arg.getType(),newOp,cloner.cloneExpression(arg),one);
  return asg;
}

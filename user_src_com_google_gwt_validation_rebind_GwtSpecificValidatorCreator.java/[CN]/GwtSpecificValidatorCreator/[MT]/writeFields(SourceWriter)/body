{
  BeanInfo beanInfo;
  try {
    beanInfo=Introspector.getBeanInfo(beanHelper.getClazz());
  }
 catch (  IntrospectionException e) {
    throw error(logger,e);
  }
  sw.println("private static final java.util.List<String> ALL_PROPERTY_NAMES = ");
  sw.indent();
  sw.indent();
  sw.println("java.util.Collections.<String>unmodifiableList(");
  sw.indent();
  sw.indent();
  sw.print("java.util.Arrays.<String>asList(");
  sw.print(Joiner.on(",").join(Iterables.transform(ImmutableList.copyOf(beanInfo.getPropertyDescriptors()),Functions.compose(TO_LITERAL,PROPERTY_DESCRIPTOR_TO_NAME))));
  sw.println("));");
  sw.outdent();
  sw.outdent();
  sw.outdent();
  sw.outdent();
  writeBeanMetadata(sw);
  sw.println();
  for (  PropertyDescriptor p : beanHelper.getBeanDescriptor().getConstrainedProperties()) {
    int count=0;
    for (    ConstraintDescriptor<?> constraint : p.getConstraintDescriptors()) {
      org.hibernate.validator.metadata.ConstraintDescriptorImpl<?> constraintHibernate=(org.hibernate.validator.metadata.ConstraintDescriptorImpl<?>)constraint;
      writeConstraintDescriptor(sw,constraint,constraintHibernate.getElementType(),convertConstraintOriginEnum(constraintHibernate.getDefinedOn()),constraintDescriptorVar(p.getPropertyName(),count++));
    }
    writePropertyDescriptor(sw,p);
    if (p.isCascaded()) {
      beansToValidate.add(isIterableOrMap(p.getElementClass()) ? createBeanHelper(beanHelper.getAssociationType(p,true)) : createBeanHelper(p.getElementClass()));
    }
  }
  int count=0;
  for (  ConstraintDescriptor<?> constraint : beanHelper.getBeanDescriptor().getConstraintDescriptors()) {
    org.hibernate.validator.metadata.ConstraintDescriptorImpl<?> constraintHibernate=(org.hibernate.validator.metadata.ConstraintDescriptorImpl<?>)constraint;
    writeConstraintDescriptor(sw,constraint,ElementType.TYPE,convertConstraintOriginEnum(constraintHibernate.getDefinedOn()),constraintDescriptorVar("this",count++));
  }
  writeBeanDescriptor(sw);
  sw.println();
}

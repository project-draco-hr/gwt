{
  if (!isRemoveModifiable())   return;
  resetEmpty();
  Object[] keys=getSampleKeys();
  Object[] values=getSampleValues();
  Object[] newValues=getNewSampleValues();
  for (int i=0; i < keys.length; i++) {
    Object o=map.put(keys[i],values[i]);
    confirmed.put(keys[i],values[i]);
    verify();
    assertTrue("First map.put should return null",o == null);
    assertTrue("Map should contain key after put",map.containsKey(keys[i]));
    assertTrue("Map should contain value after put",map.containsValue(values[i]));
  }
  for (int i=0; i < keys.length; i++) {
    Object o=map.put(keys[i],newValues[i]);
    confirmed.put(keys[i],newValues[i]);
    verify();
    assertEquals("Second map.put should return previous value",values[i],o);
    assertTrue("Map should still contain key after put",map.containsKey(keys[i]));
    assertTrue("Map should contain new value after put",map.containsValue(newValues[i]));
    if (!useDuplicateValues()) {
      assertTrue("Map should not contain old value after second put",!map.containsValue(values[i]));
    }
  }
}

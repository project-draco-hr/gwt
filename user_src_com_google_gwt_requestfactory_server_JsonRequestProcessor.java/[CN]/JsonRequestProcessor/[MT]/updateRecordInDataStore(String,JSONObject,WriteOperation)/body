{
  try {
    Class<? extends Record> record=getRecordFromClassToken(recordToken);
    Class<?> entity=getEntityFromRecordAnnotation(record);
    Map<String,Class<?>> propertiesInRecord=getPropertiesFromRecord(record);
    validateKeys(recordObject,propertiesInRecord.keySet());
    updatePropertyTypes(propertiesInRecord,entity);
    Object entityInstance=getEntityInstance(writeOperation,entity,recordObject.get("id"),propertiesInRecord.get("id"));
    Set<ConstraintViolation<Object>> violations=Collections.emptySet();
    if (writeOperation == WriteOperation.DELETE) {
      entity.getMethod("remove").invoke(entityInstance);
    }
 else {
      Iterator<?> keys=recordObject.keys();
      while (keys.hasNext()) {
        String key=(String)keys.next();
        Class<?> propertyType=propertiesInRecord.get(key);
        if (writeOperation == WriteOperation.CREATE && ("id".equals(key))) {
          Long id=generateIdForCreate(key);
          if (id != null) {
            entity.getMethod(getMethodNameFromPropertyName(key,"set"),propertyType).invoke(entityInstance,id);
          }
        }
 else {
          Object propertyValue=getPropertyValueFromRequest(recordObject,key,propertyType);
          entity.getMethod(getMethodNameFromPropertyName(key,"set"),propertyType).invoke(entityInstance,propertyValue);
        }
      }
      Validator validator=null;
      try {
        ValidatorFactory validatorFactory=Validation.buildDefaultValidatorFactory();
        validator=validatorFactory.getValidator();
      }
 catch (      Exception e) {
        log.info(String.format("Ingnoring exception caught initializing bean validation framework. " + "It is probably unconfigured or misconfigured. [%s] %s ",e.getClass().getName(),e.getLocalizedMessage()));
      }
      if (validator != null) {
        violations=validator.validate(entityInstance);
      }
      if (violations.isEmpty()) {
        entity.getMethod("persist").invoke(entityInstance);
      }
    }
    return getReturnRecord(writeOperation,entityInstance,recordObject,violations);
  }
 catch (  Exception ex) {
    log.severe(String.format("Caught exception [%s] %s",ex.getClass().getName(),ex.getLocalizedMessage()));
    return getReturnRecordForException(writeOperation,recordObject,ex);
  }
}

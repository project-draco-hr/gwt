{
  JSONObject returnObject=new JSONObject();
  final boolean hasViolations=violations != null && !violations.isEmpty();
  if (hasViolations) {
    returnObject.put("violations",getViolationsAsJson(violations));
  }
switch (writeOperation) {
case CREATE:
    returnObject.put("futureId",recordObject.getString("id"));
  if (!hasViolations) {
    returnObject.put("id",encodePropertyValueFromDataStore(entityInstance,"id"));
    returnObject.put("version",encodePropertyValueFromDataStore(entityInstance,"version"));
  }
break;
case DELETE:
returnObject.put("id",recordObject.getString("id"));
break;
case UPDATE:
returnObject.put("id",recordObject.getString("id"));
if (!hasViolations) {
returnObject.put("version",encodePropertyValueFromDataStore(entityInstance,"version"));
}
break;
}
return returnObject;
}

{
  JSONObject sideEffects=new JSONObject();
  JSONArray createArray=new JSONArray();
  JSONArray deleteArray=new JSONArray();
  JSONArray updateArray=new JSONArray();
  for (  EntityKey entityKey : involvedKeys) {
    EntityData entityData=afterDvsDataMap.get(entityKey);
    if (entityData == null) {
      continue;
    }
    if (entityKey.isFuture) {
      JSONObject createRecord=getCreateReturnRecord(entityKey,entityData);
      if (createRecord != null) {
        createArray.put(createRecord);
      }
      continue;
    }
    WriteOperation writeOperation=detectDeleteOrUpdate(entityKey,entityData);
    if (writeOperation == WriteOperation.DELETE) {
      JSONObject deleteRecord=new JSONObject();
      deleteRecord.put(Constants.ENCODED_ID_PROPERTY,getSchemaAndId(entityKey.proxyType,entityKey.encodedId));
      deleteArray.put(deleteRecord);
    }
    if (writeOperation == WriteOperation.UPDATE) {
      JSONObject updateRecord=new JSONObject();
      updateRecord.put(Constants.ENCODED_ID_PROPERTY,getSchemaAndId(entityKey.proxyType,entityKey.encodedId));
      updateArray.put(updateRecord);
    }
  }
  if (createArray.length() > 0) {
    sideEffects.put(WriteOperation.PERSIST.name(),createArray);
  }
  if (deleteArray.length() > 0) {
    sideEffects.put(WriteOperation.DELETE.name(),deleteArray);
  }
  if (updateArray.length() > 0) {
    sideEffects.put(WriteOperation.UPDATE.name(),updateArray);
  }
  return sideEffects;
}

{
  SafeHtmlBuilder classes=new SafeHtmlBuilder();
  classes.appendEscaped(style.buttonCellBase());
  Decoration decoration=cell.getDecoration();
  if (decoration == Decoration.PRIMARY) {
    classes.appendEscaped(" " + style.buttonCellBasePrimary());
  }
 else   if (decoration == Decoration.NEGATIVE) {
    classes.appendEscaped(" " + style.buttonCellBaseNegative());
  }
 else {
    classes.appendEscaped(" " + style.buttonCellBaseDefault());
  }
  if (cell.isCollapseLeft()) {
    classes.appendEscaped(" " + style.buttonCellBaseCollapseLeft());
  }
  if (cell.isCollapseRight()) {
    classes.appendEscaped(" " + style.buttonCellBaseCollapseRight());
  }
  ImageResource icon=cell.getIcon();
  if (icon != lastIcon) {
    if (icon == null) {
      iconSafeHtml=SafeHtmlUtils.EMPTY_SAFE_HTML;
    }
 else {
      AbstractImagePrototype proto=AbstractImagePrototype.create(icon);
      SafeHtml iconOnly=proto.getSafeHtml();
      int halfHeight=(int)Math.round(icon.getHeight() / 2.0);
      SafeStylesBuilder styles=new SafeStylesBuilder();
      styles.marginTop(-halfHeight,Unit.PX);
      if (LocaleInfo.getCurrentLocale().isRTL()) {
        styles.right(0,Unit.PX);
      }
 else {
        styles.left(0,Unit.PX);
      }
      iconSafeHtml=template.iconWrapper(styles.toSafeStyles(),iconOnly);
    }
  }
  char accessKey=cell.getAccessKey();
  StringBuilder attributes=new StringBuilder();
  if (!cell.isEnabled()) {
    attributes.append("disabled=disabled ");
  }
  if (accessKey != 0) {
    attributes.append("accessKey=\"").append(SafeHtmlUtils.htmlEscape("" + accessKey));
    attributes.append("\" ");
  }
  SafeStylesBuilder styles=new SafeStylesBuilder();
  int iconWidth=(icon == null) ? 0 : icon.getWidth();
  int iconPadding=iconWidth + DEFAULT_ICON_PADDING;
  if (LocaleInfo.getCurrentLocale().isRTL()) {
    styles.paddingRight(iconPadding,Unit.PX);
  }
 else {
    styles.paddingLeft(iconPadding,Unit.PX);
  }
  SafeHtml safeValue=renderer.render(value);
  SafeHtml content=template.iconContentLayout(CommonResources.getInlineBlockStyle(),styles.toSafeStyles(),iconSafeHtml,safeValue);
  int tabIndex=cell.getTabIndex();
  StringBuilder openTag=new StringBuilder();
  openTag.append("<button type=\"button\"");
  openTag.append(" class=\"" + classes.toSafeHtml().asString() + "\"");
  openTag.append(" tabindex=\"" + tabIndex + "\" ");
  openTag.append(attributes.toString()).append(">");
  sb.append(SafeHtmlUtils.fromTrustedString(openTag.toString()));
  sb.append(content);
  sb.appendHtmlConstant("</button>");
}

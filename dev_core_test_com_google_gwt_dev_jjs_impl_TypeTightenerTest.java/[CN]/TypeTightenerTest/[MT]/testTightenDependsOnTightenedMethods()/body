{
  addSnippetClassDecl("abstract static class A {}");
  addSnippetClassDecl("static class B extends A {}");
  addSnippetClassDecl("static A test() { return new B(); }");
  addSnippetClassDecl("static class C {A a;}");
  addSnippetClassDecl("static void fun1(A a) {if (a == null) return;}");
  addSnippetClassDecl("static A fun2() { return test(); }");
  Result result=optimize("void","A a = test();" + "C c = new C(); c.a = test();" + "fun1(test());");
  assertReturnType(result,"fun2()Ltest/EntryPoint$A;","EntryPoint$B");
  assertParameterTypes(result,"fun1","EntryPoint$B");
  ;
  assertEquals("EntryPoint$B a",OptimizerTestBase.findLocal(result.findMethod(MAIN_METHOD_NAME),"a").toString());
  assertEquals("EntryPoint$B a",OptimizerTestBase.findField(result.findClass("EntryPoint$C"),"a").toString());
}

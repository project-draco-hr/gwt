{
  File rootDirectory=Files.createTempDir();
  File parentDirectory=createDirectoryIn("original_dir",rootDirectory);
  File subDirectory=createDirectoryIn("subdir",parentDirectory);
  createFileIn("Name1.java",subDirectory);
  createFileIn("Name2.java",subDirectory);
  File renamedParentDirectory=new File(rootDirectory,"new_dir");
  ChangedFileAccumulator changedFileAccumulator=new ChangedFileAccumulator(rootDirectory.toPath());
  assertTrue(changedFileAccumulator.getAndClearChangedFiles().isEmpty());
  parentDirectory.renameTo(renamedParentDirectory);
  waitForFileEvents();
  List<File> modifiedFiles=changedFileAccumulator.getAndClearChangedFiles();
  assertEquals(8,modifiedFiles.size());
  assertTrue(modifiedFiles.get(0).getPath().endsWith("new_dir"));
  assertTrue(modifiedFiles.get(1).getPath().endsWith("new_dir/subdir"));
  assertTrue(modifiedFiles.get(2).getPath().endsWith("new_dir/subdir/Name1.java"));
  assertTrue(modifiedFiles.get(3).getPath().endsWith("new_dir/subdir/Name2.java"));
  assertTrue(modifiedFiles.get(4).getPath().endsWith("original_dir"));
  assertTrue(modifiedFiles.get(5).getPath().endsWith("original_dir/subdir"));
  assertTrue(modifiedFiles.get(6).getPath().endsWith("original_dir/subdir/Name1.java"));
  assertTrue(modifiedFiles.get(7).getPath().endsWith("original_dir/subdir/Name2.java"));
  changedFileAccumulator.shutdown();
}

{
  this.cell=cell;
  Element childContainer=Document.get().createDivElement();
  Element showMoreElem=Document.get().createPushButtonElement();
  showMoreElem.setInnerText("Show more");
  Element showFewerElem=Document.get().createPushButtonElement();
  showFewerElem.setInnerText("Show fewer");
  Element emptyMessageElem=Document.get().createDivElement();
  emptyMessageElem.setInnerHTML("<i>no data</i>");
  DivElement outerDiv=Document.get().createDivElement();
  outerDiv.appendChild(childContainer);
  outerDiv.appendChild(emptyMessageElem);
  outerDiv.appendChild(showFewerElem);
  outerDiv.appendChild(showMoreElem);
  setElement(outerDiv);
  sinkEvents(Event.ONCLICK | Event.ONCHANGE | Event.MOUSEEVENTS);
  impl=new SimpleCellListImpl<T>(this,cell,maxSize,increment,childContainer,emptyMessageElem,showMoreElem,showFewerElem){
    @Override protected void emitHtml(    StringBuilder sb,    List<T> values,    int start,    Cell<T,Void> cell,    SelectionModel<? super T> selectionModel){
      int length=values.size();
      int end=start + length;
      for (int i=start; i < end; i++) {
        T value=values.get(i - start);
        boolean isSelected=selectionModel == null ? false : selectionModel.isSelected(value);
        sb.append("<div __idx='").append(i).append("'");
        sb.append(" class='");
        sb.append(i % 2 == 0 ? STYLENNAME_EVEN : STYLENNAME_ODD);
        if (isSelected) {
          sb.append(" ").append(STYLENNAME_SELECTED);
        }
        sb.append("'>");
        cell.render(value,null,sb);
        sb.append("</div>");
      }
    }
    @Override protected void setSelected(    Element elem,    boolean selected){
      setStyleName(elem,STYLENNAME_SELECTED,selected);
    }
  }
;
}

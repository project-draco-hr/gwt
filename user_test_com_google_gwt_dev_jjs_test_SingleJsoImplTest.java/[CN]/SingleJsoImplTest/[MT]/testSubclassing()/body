{
{
    JsoDivider d=makeDivider(1);
    assertTrue(d instanceof Divider);
    assertTrue(d instanceof Multiplier);
    assertTrue(d instanceof Tag);
    assertEquals(5,d.divide(10,2));
    assertEquals(10,d.multiply(5,2));
    assertEquals(10,((JsoMultiplier)d).multiply(5,2));
  }
{
    Object d=makeDivider(1);
    assertTrue(d instanceof Divider);
    assertTrue(d instanceof Multiplier);
    assertTrue(d instanceof JsoDivider);
    assertTrue(d instanceof JsoMultiplier);
    assertFalse(d instanceof JavaDivider);
    assertFalse(d instanceof JavaMultiplier);
    assertTrue(d instanceof Tag);
    assertEquals(5,((Divider)d).divide(10,2));
    assertEquals(10,((Divider)d).multiply(5,2));
    assertEquals(10,((Multiplier)d).multiply(5,2));
    assertEquals(5,((JsoDivider)d).divide(10,2));
    assertEquals(10,((JsoMultiplier)d).multiply(5,2));
    d=new JavaDivider();
    assertTrue(d instanceof Divider);
    assertTrue(d instanceof Multiplier);
    assertTrue(d instanceof JavaDivider);
    assertTrue(d instanceof JavaMultiplier);
    assertFalse(d instanceof JsoDivider);
    assertFalse(d instanceof JsoMultiplier);
    assertTrue(d instanceof Tag);
    assertEquals(5,((Divider)d).divide(10,2));
    assertEquals(10,((Divider)d).multiply(5,2));
    assertEquals(10,((Multiplier)d).multiply(5,2));
    assertEquals(5,((JavaDivider)d).divide(10,2));
    assertEquals(10,((JavaMultiplier)d).multiply(5,2));
  }
{
    Object m=makeMultiplier(1);
    assertTrue(m instanceof Divider);
    assertEquals(2,((Divider)m).divide(10,5));
    m=new JavaMultiplier();
    assertFalse(m instanceof Divider);
    try {
      assertEquals(2,((Divider)m).divide(10,5));
      fail("Should have thrown CCE");
    }
 catch (    ClassCastException e) {
    }
  }
{
    Object l2="Prevent type-tightening";
    assertTrue(l2 instanceof String);
    l2=new JavaLog2();
    assertTrue(l2 instanceof Log2);
    assertTrue(l2 instanceof Multiplier);
    assertTrue(l2 instanceof Divider);
    assertEquals(4.0,((Log2)l2).log2(16));
  }
}

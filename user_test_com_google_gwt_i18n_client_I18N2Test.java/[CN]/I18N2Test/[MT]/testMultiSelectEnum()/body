{
  TestAnnotatedMessages m=GWT.create(TestAnnotatedMessages.class);
  List<String> names=new ArrayList<String>();
  assertEquals("Nobody liked his message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.MALE).asString());
  assertEquals("Nobody liked his 2 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,2,Gender.MALE).asString());
  assertEquals("Nobody liked her message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.FEMALE).asString());
  assertEquals("Nobody liked her 3 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,3,Gender.FEMALE).asString());
  assertEquals("Nobody liked their message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,null).asString());
  assertEquals("Nobody liked their 4 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,4,Gender.UNKNOWN).asString());
  names.add("John");
  assertEquals("John liked his message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.MALE).asString());
  assertEquals("John liked his 2 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,2,Gender.MALE).asString());
  assertEquals("John liked her message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.FEMALE).asString());
  assertEquals("John liked her 3 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,3,Gender.FEMALE).asString());
  assertEquals("John liked their message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.UNKNOWN).asString());
  assertEquals("John liked their 4 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,4,null).asString());
  names.add("Bob");
  assertEquals("John and Bob liked his message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.MALE).asString());
  assertEquals("John and Bob liked his 2 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,2,Gender.MALE).asString());
  assertEquals("John and Bob liked her message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.FEMALE).asString());
  assertEquals("John and Bob liked her 3 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,3,Gender.FEMALE).asString());
  assertEquals("John and Bob liked their message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,null).asString());
  assertEquals("John and Bob liked their 4 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,4,Gender.UNKNOWN).asString());
  names.add("Alice");
  assertEquals("John, Bob, and one other liked his message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.MALE).asString());
  assertEquals("John, Bob, and one other liked his 2 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,2,Gender.MALE).asString());
  assertEquals("John, Bob, and one other liked her message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.FEMALE).asString());
  assertEquals("John, Bob, and one other liked her 3 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,3,Gender.FEMALE).asString());
  assertEquals("John, Bob, and one other liked their message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.UNKNOWN).asString());
  assertEquals("John, Bob, and one other liked their 4 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,4,null).asString());
  names.add("Carol");
  assertEquals("John, Bob, and 2 others liked his message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.MALE).asString());
  assertEquals("John, Bob, and 2 others liked his 2 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,2,Gender.MALE).asString());
  assertEquals("John, Bob, and 2 others liked her message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.FEMALE).asString());
  assertEquals("John, Bob, and 2 others liked her 3 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,3,Gender.FEMALE).asString());
  assertEquals("John, Bob, and 2 others liked their message",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,1,Gender.UNKNOWN).asString());
  assertEquals("John, Bob, and 2 others liked their 4 messages",m.multiSelectEnum(names,names.size() > 0 ? names.get(0) : null,names.size() > 1 ? names.get(1) : null,4,null).asString());
}

{
  super(api,mv);
  this.owner=owner;
  locals=new ArrayList<Object>();
  stack=new ArrayList<Object>();
  uninitializedTypes=new HashMap<Object,Object>();
  if ((access & Opcodes.ACC_STATIC) == 0) {
    if ("<init>".equals(name)) {
      locals.add(Opcodes.UNINITIALIZED_THIS);
    }
 else {
      locals.add(owner);
    }
  }
  Type[] types=Type.getArgumentTypes(desc);
  for (int i=0; i < types.length; ++i) {
    Type type=types[i];
switch (type.getSort()) {
case Type.BOOLEAN:
case Type.CHAR:
case Type.BYTE:
case Type.SHORT:
case Type.INT:
      locals.add(Opcodes.INTEGER);
    break;
case Type.FLOAT:
  locals.add(Opcodes.FLOAT);
break;
case Type.LONG:
locals.add(Opcodes.LONG);
locals.add(Opcodes.TOP);
break;
case Type.DOUBLE:
locals.add(Opcodes.DOUBLE);
locals.add(Opcodes.TOP);
break;
case Type.ARRAY:
locals.add(types[i].getDescriptor());
break;
default :
locals.add(types[i].getInternalName());
}
}
}

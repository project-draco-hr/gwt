{
  PerfLogger.start("ModuleDef.normalize");
  for (Iterator<Property> iter=getProperties().iterator(); iter.hasNext(); ) {
    Property prop=iter.next();
    if (prop.getActiveValue() == null) {
      String[] knownValues=prop.getKnownValues();
      assert(knownValues.length > 0);
      if (knownValues.length > 1) {
        if (prop.getProvider() == null) {
          prop.setProvider(new DefaultPropertyProvider(this,prop));
        }
      }
 else {
        prop.setActiveValue(knownValues[0]);
      }
    }
  }
  TreeLogger branch=Messages.PUBLIC_PATH_LOCATIONS.branch(logger,null);
  if (lazyPublicOracle == null) {
    lazyPublicOracle=new ResourceOracleImpl(branch);
    lazyPublicOracle.setPathPrefixes(publicPrefixSet);
  }
  lazyPublicOracle.refresh(branch);
  branch=Messages.SOURCE_PATH_LOCATIONS.branch(logger,null);
  lazySourceOracle=new ResourceOracleImpl(branch);
  lazySourceOracle.setPathPrefixes(sourcePrefixSet);
  lazySourceOracle.refresh(branch);
  if (lazySourceOracle.getResources().isEmpty()) {
    branch.log(TreeLogger.WARN,"No source path entries; expect subsequent failures",null);
  }
  lazyJavaSourceOracle=new JavaSourceOracleImpl(lazySourceOracle);
  compilationState=new CompilationState(lazyJavaSourceOracle);
  PerfLogger.end();
}

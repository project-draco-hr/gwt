{
  final PrefixTree tree=new PrefixTree();
  assertTrue(tree.add("onetwothree"));
  assertTrue(tree.add("onetwothree1"));
  assertTrue(tree.add("onetwothree2"));
  assertTrue(tree.add("onetwothree3"));
  assertTrue(tree.add("fourfivesix"));
  assertTrue(tree.add("fourfivesix1"));
  assertTrue(tree.add("fourfivesix2"));
  assertTrue(tree.add("fourfivesix3"));
  assertTrue(tree.add("seveneightnine"));
  assertTrue(tree.add("seveneightnine1"));
  assertTrue(tree.add("seveneightnine2"));
  assertTrue(tree.add("seveneightnine3"));
  assertTrue(tree.add("somethingdifferent"));
  assertTrue(tree.size() == 13);
  testSizeByIterator(tree);
  assertTrue(tree.iterator().hasNext());
  List<String> l;
  l=tree.getSuggestions("",13);
  assertTrue("Expected size of 13, got " + l.size(),l.size() == 13);
  assertAllStartWith(l,"");
  l=tree.getSuggestions("one",10);
  assertTrue("Expected size of 4, got " + l.size(),l.size() == 4);
  assertAllStartWith(l,"one");
  l=tree.getSuggestions("onetwothree",10);
  assertTrue("Expected size of 4, got " + l.size(),l.size() == 4);
  assertAllStartWith(l,"onetwothree");
  l=tree.getSuggestions("onetwothree1",10);
  assertTrue("Expected size of 1, got " + l.size(),l.size() == 1);
  assertAllStartWith(l,"onetwothree1");
  l=tree.getSuggestions("o",1);
  assertTrue("Expected size of 1, got " + l.size(),l.size() == 1);
  assertTrue(l.get(0).endsWith("..."));
  assertAllStartWith(l,"o");
  l=tree.getSuggestions("something",1);
  assertTrue("Expected size of 1, got " + l.size(),l.size() == 1);
  assertEquals("somethingdifferent",l.get(0));
  assertAllStartWith(l,"somethingdifferent");
}

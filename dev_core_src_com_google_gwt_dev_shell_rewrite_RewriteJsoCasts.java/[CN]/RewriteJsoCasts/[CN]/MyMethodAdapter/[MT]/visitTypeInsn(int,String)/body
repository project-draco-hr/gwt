{
  Type parsed=Type.getObjectType(type);
switch (opcode) {
case Opcodes.CHECKCAST:
    if (rewriterOracle.couldContainJso(type)) {
      if (generateCast(type)) {
        return;
      }
    }
 else     if (parsed.getSort() == Type.ARRAY) {
      Type t=upcastJsoType(parsed);
      if (t != null) {
        recordDebugData("Upcast JSO array checkcast from " + parsed.getInternalName());
        type=t.getInternalName();
      }
    }
  break;
case Opcodes.INSTANCEOF:
{
  String internalName=parsed.getInternalName();
  if (rewriterOracle.isInterface(internalName) && rewriterOracle.couldContainJso(internalName)) {
    recordDebugData("SingleJsoImpl instanceof check for " + internalName);
    super.visitMethodInsn(Opcodes.INVOKESTATIC,type + SINGLE_JSO_IMPL_ADJUNCT_SUFFIX,SINGLE_JSO_IMPL_INSTANCEOF_METHOD,"(Ljava/lang/Object;)Z");
    return;
  }
  recordDebugData("Upcast instanceof from " + internalName);
  Type t=upcastJsoType(parsed);
  if (t != null) {
    type=t.getInternalName();
  }
  break;
}
}
super.visitTypeInsn(opcode,type);
}

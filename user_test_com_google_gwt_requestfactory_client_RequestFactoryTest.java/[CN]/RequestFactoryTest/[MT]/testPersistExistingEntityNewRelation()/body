{
  delayTestFinish(DELAY_TEST_FINISH);
  SimpleBarRequest context=simpleBarRequest();
  SimpleBarProxy makeABar=context.create(SimpleBarProxy.class);
  Request<SimpleBarProxy> persistRequest=context.persistAndReturnSelf().using(makeABar);
  makeABar=context.edit(makeABar);
  makeABar.setUserName("Amit");
  persistRequest.fire(new Receiver<SimpleBarProxy>(){
    @Override public void onSuccess(    SimpleBarProxy response){
      final SimpleBarProxy persistedBar=checkSerialization(response);
      simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
        @Override public void onSuccess(        SimpleFooProxy response){
          response=checkSerialization(response);
          SimpleFooRequest context=simpleFooRequest();
          Request<Void> fooReq=context.persist().using(response);
          response=context.edit(response);
          response.setBarField(persistedBar);
          fooReq.fire(new Receiver<Void>(){
            @Override public void onSuccess(            Void response){
              simpleFooRequest().findSimpleFooById(999L).with("barField.userName").fire(new Receiver<SimpleFooProxy>(){
                @Override public void onSuccess(                SimpleFooProxy finalFooProxy){
                  finalFooProxy=checkSerialization(finalFooProxy);
                  assertEquals("Amit",finalFooProxy.getBarField().getUserName());
                  finishTestAndReset();
                }
              }
);
            }
          }
);
        }
      }
);
    }
  }
);
}

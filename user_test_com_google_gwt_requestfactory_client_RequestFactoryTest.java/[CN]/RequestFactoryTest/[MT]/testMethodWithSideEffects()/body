{
  delayTestFinish(5000);
  req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy newFoo){
      final RequestObject<Long> fooReq=req.simpleFooRequest().countSimpleFooWithUserNameSideEffect(newFoo);
      newFoo=fooReq.edit(newFoo);
      newFoo.setUserName("Ray");
      fooReq.fire(new Receiver<Long>(){
        @Override public void onSuccess(        Long response){
          assertEquals(new Long(1L),response);
          req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
            @Override public void onSuccess(            SimpleFooProxy finalFoo){
              assertEquals("Ray",finalFoo.getUserName());
              finishTestAndReset();
            }
          }
);
        }
      }
);
      newFoo.setUserName("Barney");
      newFoo.setUserName("Ray");
      fooReq.fire(new Receiver<Long>(){
        @Override public void onSuccess(        Long response){
          req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
            @Override public void onSuccess(            SimpleFooProxy finalFoo){
              assertEquals("Ray",finalFoo.getUserName());
              finishTestAndReset();
            }
          }
);
        }
      }
);
    }
  }
);
}

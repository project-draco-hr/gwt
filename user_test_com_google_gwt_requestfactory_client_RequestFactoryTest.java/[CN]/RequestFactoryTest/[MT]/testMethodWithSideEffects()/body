{
  delayTestFinish(5000);
  req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy newFoo){
      final Request<Long> mutateRequest=req.simpleFooRequest().countSimpleFooWithUserNameSideEffect(newFoo);
      newFoo=mutateRequest.edit(newFoo);
      newFoo.setUserName("Ray");
      mutateRequest.fire(new Receiver<Long>(){
        @Override public void onSuccess(        Long response){
          assertCannotFire(mutateRequest);
          assertEquals(new Long(1L),response);
          req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
            @Override public void onSuccess(            SimpleFooProxy finalFoo){
              assertEquals("Ray",finalFoo.getUserName());
              finishTestAndReset();
            }
          }
);
        }
      }
);
      try {
        newFoo.setUserName("Barney");
        fail();
      }
 catch (      IllegalStateException e) {
      }
    }
  }
);
}

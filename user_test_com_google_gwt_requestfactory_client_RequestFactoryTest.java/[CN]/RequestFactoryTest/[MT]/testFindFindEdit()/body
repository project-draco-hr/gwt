{
  delayTestFinish(DELAY_TEST_FINISH);
  final SimpleFooEventHandler<SimpleFooProxy> handler=new SimpleFooEventHandler<SimpleFooProxy>();
  EntityProxyChange.registerForProxyType(req.getEventBus(),SimpleFooProxy.class,handler);
  req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy newFoo){
      newFoo=checkSerialization(newFoo);
      assertEquals(1,handler.updateEventCount);
      assertEquals(1,handler.totalEventCount);
      req.simpleFooRequest().findSimpleFooById(999L).fire(new Receiver<SimpleFooProxy>(){
        @Override public void onSuccess(        SimpleFooProxy newFoo){
          newFoo=checkSerialization(newFoo);
          assertEquals(1,handler.updateEventCount);
          assertEquals(1,handler.totalEventCount);
          SimpleFooRequest context=req.simpleFooRequest();
          final Request<Void> mutateRequest=context.persist().using(newFoo);
          newFoo=context.edit(newFoo);
          newFoo.setUserName("Ray");
          mutateRequest.fire(new Receiver<Void>(){
            @Override public void onSuccess(            Void response){
              assertEquals(2,handler.updateEventCount);
              assertEquals(2,handler.totalEventCount);
              finishTestAndReset();
            }
          }
);
        }
      }
);
    }
  }
);
}

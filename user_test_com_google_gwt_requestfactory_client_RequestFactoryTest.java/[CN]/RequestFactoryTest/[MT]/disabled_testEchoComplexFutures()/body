{
  delayTestFinish(5000);
  final SimpleFooEventHandler<SimpleFooProxy> handler=new SimpleFooEventHandler<SimpleFooProxy>();
  EntityProxyChange.registerForProxyType(req.getEventBus(),SimpleFooProxy.class,handler);
  final SimpleFooProxy simpleFoo=req.create(SimpleFooProxy.class);
  final SimpleBarProxy simpleBar=req.create(SimpleBarProxy.class);
  req.simpleFooRequest().echoComplex(simpleFoo,simpleBar).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy response){
      assertEquals(0,handler.totalEventCount);
      checkStableIdEquals(simpleFoo,response);
      SimpleBarProxy responseBar=response.getBarField();
      assertNotNull(responseBar);
      checkStableIdEquals(simpleBar,responseBar);
      finishTestAndReset();
    }
  }
);
}

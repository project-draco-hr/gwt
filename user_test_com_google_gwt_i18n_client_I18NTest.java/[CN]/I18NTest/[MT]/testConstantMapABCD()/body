{
  TestConstants types=(TestConstants)GWT.create(TestConstants.class);
  Map<String,String> map=types.mapABCD();
  Map<String,String> expectedMap=getMapFromArrayUsingASimpleRule(new String[]{"A","B","C","D"});
  assertNull(map.get("bogus"));
  compareMapsComprehensively(map,expectedMap);
  String failureMessage="Should have thrown UnsupportedOperationException";
  try {
    map.remove("keyA");
    fail(failureMessage + " on map.remove");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.put("keyA","allA");
    fail(failureMessage + "on map.put of existing key");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.put("keyZ","allZ");
    fail(failureMessage + "on map.put of new key");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.clear();
    fail(failureMessage + " on map.clear");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.keySet().add("keyZ");
    fail(failureMessage + " on map.keySet().add");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.keySet().remove("keyA");
    fail(failureMessage + " on map.keySet().remove");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.keySet().clear();
    fail(failureMessage + " on map.keySet().clear");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.values().add("valueZ");
    fail(failureMessage + " on map.values().add");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.values().remove("valueA");
    fail(failureMessage + " on map.values().clear()");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.values().clear();
    fail(failureMessage + " on map.values().clear()");
  }
 catch (  UnsupportedOperationException e) {
  }
  Map.Entry<String,String> firstEntry=map.entrySet().iterator().next();
  try {
    map.entrySet().clear();
    fail(failureMessage + "on map.entrySet().clear");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.entrySet().remove(firstEntry);
    fail(failureMessage + " on map.entrySet().remove");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.entrySet().add(firstEntry);
    fail(failureMessage + "on map.entrySet().add");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    firstEntry.setValue("allZ");
    fail(failureMessage + "on firstEntry.setValue");
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    map.clear();
    fail(failureMessage + " on map.clear");
  }
 catch (  UnsupportedOperationException e) {
  }
}

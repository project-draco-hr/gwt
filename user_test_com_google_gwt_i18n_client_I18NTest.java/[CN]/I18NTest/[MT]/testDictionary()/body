{
  createDummyDictionaries();
  Dictionary d=Dictionary.getDictionary("testDic");
  assertEquals("3 {2},{2},{2}, one {0}, two {1} {1}",d.get("formattedMessage"));
  assertEquals("4",d.get("d"));
  Set<String> s=d.keySet();
  assertTrue(s.contains("a"));
  assertTrue(s.contains("b"));
  assertFalse(s.contains("c"));
  String nonExistentKey="nonExistentKey";
  try {
    d.get(nonExistentKey);
    fail("should have thrown a MissingResourceException");
  }
 catch (  MissingResourceException ex) {
    assertTrue(ex.getMessage(),ex.getMessage().indexOf("accessed keys: " + nonExistentKey + ",d,formattedMessage") != -1);
  }
  StringBuffer expectedKeys=new StringBuffer();
  expectedKeys.append(nonExistentKey);
  for (  String key : new String[]{"a","b","d"}) {
    for (int i=0; i < 9; i++) {
      expectedKeys.append(",");
      expectedKeys.append(key);
    }
  }
  expectedKeys.append(",formattedMessage,formattedMessage");
  for (int i=0; i < 10; i++) {
    for (    String key : new String[]{"formattedMessage","d","b","a"}) {
      for (int j=0; j < 9; j++) {
        d.get(key);
      }
    }
  }
  try {
    d.get(nonExistentKey);
    fail("should have thrown a MissingResourceException");
  }
 catch (  MissingResourceException ex) {
    assertTrue(ex.getMessage(),ex.getMessage().indexOf("accessed keys: " + expectedKeys.toString()) != -1);
  }
  Collection<String> s2=d.values();
  assertTrue(s2.contains("A"));
  assertTrue(s2.contains("B"));
  Iterator<String> iter=s2.iterator();
  assertEquals("3 {2},{2},{2}, one {0}, two {1} {1}",iter.next());
  assertEquals(4,s2.size());
  Dictionary empty=Dictionary.getDictionary("emptyDic");
  assertEquals(0,empty.keySet().size());
  boolean threwError=false;
  try {
    Dictionary.getDictionary("malformedDic");
  }
 catch (  MissingResourceException e) {
    threwError=true;
  }
  assertTrue(threwError);
}

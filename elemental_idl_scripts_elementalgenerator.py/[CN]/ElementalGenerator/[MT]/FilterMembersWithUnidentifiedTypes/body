def FilterMembersWithUnidentifiedTypes(self, database):
    'Removes unidentified types.\n\n    Removes constants, attributes, operations and parents with unidentified\n    types.\n    '
    for interface in database.GetInterfaces():

        def IsIdentified(idl_node):
            node_name = (idl_node.id if idl_node.id else 'parent')
            for idl_type in idl_node.all(idlnode.IDLType):
                type_name = idl_type.id
                if ((type_name is not None) and self._IsCompoundType(database, type_name)):
                    continue
                _logger.warn(('removing %s in %s which has unidentified type %s' % (node_name, interface.id, type_name)))
                return False
            return True
        interface.constants = filter(IsIdentified, interface.constants)
        interface.attributes = filter(IsIdentified, interface.attributes)
        interface.operations = filter(IsIdentified, interface.operations)
        interface.parents = filter(IsIdentified, interface.parents)

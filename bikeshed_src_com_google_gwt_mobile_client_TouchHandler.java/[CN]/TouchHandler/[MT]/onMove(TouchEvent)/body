{
  if (!tracking || dragDelegate == null) {
    return;
  }
  e.preventDefault();
  Touch touch=getTouchFromEvent(e);
  Point touchCoordinate=new Point(touch.getPageX(),touch.getPageY());
  double moveX=lastTouchPosition.x - touchCoordinate.x;
  double moveY=lastTouchPosition.y - touchCoordinate.y;
  totalMoveX+=Math.abs(moveX);
  totalMoveY+=Math.abs(moveY);
  lastTouchPosition.x=touchCoordinate.x;
  lastTouchPosition.y=touchCoordinate.y;
  if (scrollOffTimer != null) {
    scrollOffTimer.cancel();
  }
  if ((Window.getClientHeight() - touchCoordinate.y) < TOUCH_END_WORKAROUND_THRESHOLD || (Window.getClientWidth() - touchCoordinate.x) < TOUCH_END_WORKAROUND_THRESHOLD) {
    scrollOffTimer=new Timer(){
      @Override public void run(){
        e.setTimeStamp(Duration.currentTimeMillis());
        onEnd(e);
      }
    }
;
    scrollOffTimer.schedule(100);
  }
  boolean firstDrag;
  if (!dragging) {
    if (totalMoveY > MIN_TRACKING_FOR_DRAG || totalMoveX > MIN_TRACKING_FOR_DRAG) {
      dragging=true;
      firstDrag=true;
      dragDelegate.onDragStart(e);
    }
  }
  if (dragging) {
    dragDelegate.onDragMove(e);
    lastEvent=e;
    if (e.getTimeStamp() - recentTime > MAX_TRACKING_TIME) {
      recentTime=e.getTimeStamp();
      recentTouchPosition=touchCoordinate;
    }
  }
}

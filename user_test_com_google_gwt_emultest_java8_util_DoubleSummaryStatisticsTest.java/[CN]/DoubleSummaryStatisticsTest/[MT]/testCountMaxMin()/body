{
  assertEquals(0,stats.getCount());
  assertEquals(NEGATIVE_INFINITY,stats.getMax());
  assertEquals(POSITIVE_INFINITY,stats.getMin());
  double[][] testData={{1.0,1.0,1.0},{-1.0,1.0,-1.0},{2.5,2.5,-1.0},{-2.5,2.5,-2.5},{MAX_VALUE,MAX_VALUE,-2.5},{MIN_VALUE,MAX_VALUE,-2.5},{POSITIVE_INFINITY,POSITIVE_INFINITY,-2.5},{NEGATIVE_INFINITY,POSITIVE_INFINITY,NEGATIVE_INFINITY}};
  for (int i=0; i < testData.length; ++i) {
    long expectedCount=i + 1;
    double aDouble=testData[i][0];
    double expectedMax=testData[i][1];
    double expectedMin=testData[i][2];
    stats.accept(aDouble);
    assertEquals(expectedCount,stats.getCount());
    assertEquals(expectedMax,stats.getMax());
    assertEquals(expectedMin,stats.getMin());
  }
}

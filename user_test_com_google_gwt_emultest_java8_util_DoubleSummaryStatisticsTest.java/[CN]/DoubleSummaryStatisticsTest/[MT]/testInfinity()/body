{
  stats.accept(NEGATIVE_INFINITY);
  stats.accept(NEGATIVE_INFINITY);
  assertEquals(NEGATIVE_INFINITY,stats.getAverage());
  assertEquals(NEGATIVE_INFINITY,stats.getMax());
  assertEquals(NEGATIVE_INFINITY,stats.getMin());
  assertEquals(NEGATIVE_INFINITY,stats.getSum());
  stats.accept(POSITIVE_INFINITY);
  assertTrue(Double.isNaN(stats.getAverage()));
  assertEquals(POSITIVE_INFINITY,stats.getMax());
  assertEquals(NEGATIVE_INFINITY,stats.getMin());
  assertTrue(Double.isNaN(stats.getSum()));
  stats=new DoubleSummaryStatistics();
  stats.accept(POSITIVE_INFINITY);
  stats.accept(POSITIVE_INFINITY);
  assertEquals(POSITIVE_INFINITY,stats.getAverage());
  assertEquals(POSITIVE_INFINITY,stats.getMax());
  assertEquals(POSITIVE_INFINITY,stats.getMin());
  assertEquals(POSITIVE_INFINITY,stats.getSum());
  stats.accept(NEGATIVE_INFINITY);
  assertTrue(Double.isNaN(stats.getAverage()));
  assertEquals(POSITIVE_INFINITY,stats.getMax());
  assertEquals(NEGATIVE_INFINITY,stats.getMin());
  assertTrue(Double.isNaN(stats.getSum()));
}

{
  this.resources=resources;
  this.fastForwardRows=fastForwardRows;
  this.style=resources.simplePagerStyle();
  this.style.ensureInjected();
  String disabledStyle=style.disabledButton();
  firstPage=new ImageButton(resources.simplePagerFirstPage(),resources.simplePagerFirstPageDisabled(),disabledStyle,imageButtonConstants.firstPage());
  firstPage.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      firstPage();
    }
  }
);
  nextPage=new ImageButton(resources.simplePagerNextPage(),resources.simplePagerNextPageDisabled(),disabledStyle,imageButtonConstants.nextPage());
  nextPage.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      nextPage();
    }
  }
);
  prevPage=new ImageButton(resources.simplePagerPreviousPage(),resources.simplePagerPreviousPageDisabled(),disabledStyle,imageButtonConstants.prevPage());
  prevPage.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      previousPage();
    }
  }
);
  if (showLastPageButton) {
    lastPage=new ImageButton(resources.simplePagerLastPage(),resources.simplePagerLastPageDisabled(),disabledStyle,imageButtonConstants.lastPage());
    lastPage.addClickHandler(new ClickHandler(){
      public void onClick(      ClickEvent event){
        lastPage();
      }
    }
);
  }
 else {
    lastPage=null;
  }
  if (showFastForwardButton) {
    fastForward=new ImageButton(resources.simplePagerFastForward(),resources.simplePagerFastForwardDisabled(),disabledStyle,imageButtonConstants.fastForward());
    fastForward.addClickHandler(new ClickHandler(){
      public void onClick(      ClickEvent event){
        setPage(getPage() + getFastForwardPages());
      }
    }
);
  }
 else {
    fastForward=null;
  }
  HorizontalPanel layout=new HorizontalPanel();
  layout.setVerticalAlignment(HasVerticalAlignment.ALIGN_MIDDLE);
  initWidget(layout);
  if (location == TextLocation.RIGHT) {
    layout.add(label);
  }
  layout.add(firstPage);
  layout.add(prevPage);
  if (location == TextLocation.CENTER) {
    layout.add(label);
  }
  layout.add(nextPage);
  if (showFastForwardButton) {
    layout.add(fastForward);
  }
  if (showLastPageButton) {
    layout.add(lastPage);
  }
  if (location == TextLocation.LEFT) {
    layout.add(label);
  }
  firstPage.getElement().getParentElement().addClassName(style.button());
  prevPage.getElement().getParentElement().addClassName(style.button());
  label.getElement().getParentElement().addClassName(style.pageDetails());
  nextPage.getElement().getParentElement().addClassName(style.button());
  if (showFastForwardButton) {
    fastForward.getElement().getParentElement().addClassName(style.button());
  }
  if (showLastPageButton) {
    lastPage.getElement().getParentElement().addClassName(style.button());
  }
  setDisplay(null);
}

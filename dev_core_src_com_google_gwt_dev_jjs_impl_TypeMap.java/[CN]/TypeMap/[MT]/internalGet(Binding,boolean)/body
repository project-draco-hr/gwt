{
  JNode cached=crossRefMap.get(binding);
  if (cached != null) {
    return cached;
  }
 else   if (binding instanceof BaseTypeBinding) {
    BaseTypeBinding baseTypeBinding=(BaseTypeBinding)binding;
switch (baseTypeBinding.id) {
case TypeIds.T_JavaLangObject:
      return program.getTypeJavaLangObject();
case TypeIds.T_char:
    return program.getTypePrimitiveChar();
case TypeIds.T_byte:
  return program.getTypePrimitiveByte();
case TypeIds.T_short:
return program.getTypePrimitiveShort();
case TypeIds.T_boolean:
return program.getTypePrimitiveBoolean();
case TypeIds.T_void:
return program.getTypeVoid();
case TypeIds.T_long:
return program.getTypePrimitiveLong();
case TypeIds.T_double:
return program.getTypePrimitiveDouble();
case TypeIds.T_float:
return program.getTypePrimitiveFloat();
case TypeIds.T_int:
return program.getTypePrimitiveInt();
case TypeIds.T_JavaLangString:
return program.getTypeJavaLangString();
case TypeIds.T_null:
return program.getTypeNull();
case TypeIds.T_undefined:
default :
return null;
}
}
 else if (binding instanceof ArrayBinding) {
ArrayBinding arrayBinding=(ArrayBinding)binding;
JType leafType=(JType)get(arrayBinding.leafComponentType,failOnNull);
if (leafType == null) {
return null;
}
JArrayType arrayType=program.getTypeArray(leafType,arrayBinding.dimensions);
return arrayType;
}
 else if (binding instanceof BinaryTypeBinding) {
BinaryTypeBinding binaryBinding=(BinaryTypeBinding)binding;
String name=BuildTypeMap.dotify(binaryBinding.compoundName);
JDeclaredType type=externalTypesByName.get(name);
if (type != null) {
put(binding,type);
}
return type;
}
 else if (binding instanceof MethodBinding) {
MethodBinding b=(MethodBinding)binding;
JMethod cachedMethod=(JMethod)crossRefMap.get(b);
if (cachedMethod == null) {
JDeclaredType type=(JDeclaredType)get(b.declaringClass,failOnNull);
if (type == null) {
return type;
}
cachedMethod=getMethodForBinding(type,b);
if (cachedMethod != null) {
put(b,cachedMethod);
}
}
 else {
}
return cachedMethod;
}
 else if (binding instanceof FieldBinding) {
FieldBinding b=(FieldBinding)binding;
JField cachedField=(JField)crossRefMap.get(b);
if (cachedField == null) {
JDeclaredType type=(JDeclaredType)get(b.declaringClass,failOnNull);
if (type == null) {
return null;
}
cachedField=getFieldForBinding(type,b);
if (cachedField != null) {
put(b,cachedField);
}
}
 else {
}
return cachedField;
}
return null;
}

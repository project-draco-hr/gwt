{
  addTestResource(CU_Object);
  addTestResource(CU_String);
  addTestResource(CU_CircularA);
  addTestResource(CU_CircularB);
  buildTypeOracle();
  typeOracle.findType(CU_String.getTypeName());
  Set<JClassType> objectSubtypes=Sets.newHashSet(typeOracle.findType(CU_Object.getTypeName()).getSubtypes());
  assertTrue(objectSubtypes.contains(typeOracle.findType(CU_String.getTypeName())));
  typeOracle.findType(CU_CircularA.getTypeName());
  typeOracle.findType(CU_CircularB.getTypeName());
  objectSubtypes=Sets.newHashSet(typeOracle.findType(CU_Object.getTypeName()).getSubtypes());
  assertTrue(objectSubtypes.contains(typeOracle.findType(CU_String.getTypeName())));
  assertTrue(objectSubtypes.contains(typeOracle.findType(CU_CircularA.getTypeName())));
  assertTrue(objectSubtypes.contains(typeOracle.findType(CU_CircularB.getTypeName())));
}

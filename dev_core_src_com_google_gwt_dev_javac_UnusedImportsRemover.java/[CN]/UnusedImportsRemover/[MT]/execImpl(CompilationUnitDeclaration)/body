{
  if (cud.imports == null) {
    return;
  }
  AccumulateNamesVisitor astVisitor=new AccumulateNamesVisitor();
  for (  TypeDeclaration typeDecl : cud.types) {
    typeDecl.traverse(astVisitor,cud.scope);
  }
  if (cud.currentPackage != null && cud.currentPackage.annotations != null) {
    for (    Annotation annotation : cud.currentPackage.annotations) {
      if (annotation.type instanceof SingleTypeReference) {
        astVisitor.addName((SingleTypeReference)annotation.type);
      }
 else       if (annotation.type instanceof QualifiedTypeReference) {
        astVisitor.addName((QualifiedTypeReference)annotation.type);
      }
    }
  }
  List<ImportReference> newImports=new ArrayList<ImportReference>();
  for (  ImportReference importRef : cud.imports) {
    String importName=new String(importRef.getImportName()[importRef.getImportName().length - 1]);
    if (importName.equals("*") || importRef.trailingStarPosition > 0 || usedNames.contains(importName)) {
      newImports.add(importRef);
    }
  }
  if (newImports.size() != cud.imports.length) {
    cud.imports=newImports.toArray(new ImportReference[newImports.size()]);
  }
}

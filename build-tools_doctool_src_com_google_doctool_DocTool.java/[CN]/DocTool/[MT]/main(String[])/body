{
  DocToolFactory factory=new DocToolFactory();
  String arg;
  String pathSep=System.getProperty("path.separator");
  for (int i=0, n=args.length; i < n; ++i) {
    if (tryParseFlag(args,i,"-help")) {
      printHelp();
      return;
    }
 else     if (null != (arg=tryParseArg(args,i,"-out"))) {
      ++i;
      factory.setOutDir(arg);
    }
 else     if (null != (arg=tryParseArg(args,i,"-html"))) {
      ++i;
      factory.setGenerateHtml(true);
      factory.setTitle(arg);
      for (; i + 1 < n && !args[i + 1].startsWith("-"); ++i) {
        factory.addHtmlFileBase(args[i + 1]);
      }
    }
 else     if (null != (arg=tryParseArg(args,i,"-overview"))) {
      ++i;
      factory.setOverviewFile(arg);
    }
 else     if (null != (arg=tryParseArg(args,i,"-sourcepath"))) {
      ++i;
      String[] entries=arg.split("\\" + pathSep);
      for (int entryIndex=0; entryIndex < entries.length; entryIndex++) {
        factory.addToSourcePath(entries[entryIndex]);
      }
    }
 else     if (null != (arg=tryParseArg(args,i,"-classpath"))) {
      ++i;
      String[] entries=arg.split("\\" + pathSep);
      for (int entryIndex=0; entryIndex < entries.length; entryIndex++) {
        factory.addToClassPath(entries[entryIndex]);
      }
    }
 else     if (null != (arg=tryParseArg(args,i,"-packages"))) {
      ++i;
      String[] entries=arg.split("\\" + pathSep);
      for (int entryIndex=0; entryIndex < entries.length; entryIndex++) {
        factory.addToPackages(entries[entryIndex]);
      }
    }
 else     if (null != (arg=tryParseArg(args,i,"-imagepath"))) {
      ++i;
      String[] entries=arg.split("\\" + pathSep);
      for (int entryIndex=0; entryIndex < entries.length; entryIndex++) {
        factory.addToImagePath(entries[entryIndex]);
      }
    }
 else {
      if (factory.getFileType() == null)       factory.setFileType(args[i]);
 else       factory.setFileBase(args[i]);
    }
  }
  DocTool docTool=factory.create(System.out,System.err);
  if (docTool != null)   docTool.process();
}

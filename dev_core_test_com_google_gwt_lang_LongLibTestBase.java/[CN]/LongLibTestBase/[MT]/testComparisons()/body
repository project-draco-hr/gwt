{
  assertTrue(LongLib.lt(LongLib.fromInt(10),LongLib.fromInt(11)));
  assertTrue(LongLib.lte(LongLib.fromInt(10),LongLib.fromInt(11)));
  assertTrue(!LongLib.eq(LongLib.fromInt(10),LongLib.fromInt(11)));
  assertTrue(!LongLib.gte(LongLib.fromInt(10),LongLib.fromInt(11)));
  assertTrue(!LongLib.gt(LongLib.fromInt(10),LongLib.fromInt(11)));
  assertTrue(!LongLib.lt(LongLib.fromInt(10),LongLib.fromInt(10)));
  assertTrue(LongLib.lte(LongLib.fromInt(10),LongLib.fromInt(10)));
  assertTrue(LongLib.eq(LongLib.fromInt(10),LongLib.fromInt(10)));
  assertTrue(LongLib.gte(LongLib.fromInt(10),LongLib.fromInt(10)));
  assertTrue(!LongLib.gt(LongLib.fromInt(10),LongLib.fromInt(10)));
  assertTrue(!LongLib.lt(LongLib.fromInt(12),LongLib.fromInt(11)));
  assertTrue(!LongLib.lte(LongLib.fromInt(12),LongLib.fromInt(11)));
  assertTrue(!LongLib.eq(LongLib.fromInt(12),LongLib.fromInt(11)));
  assertTrue(LongLib.gte(LongLib.fromInt(12),LongLib.fromInt(11)));
  assertTrue(LongLib.gt(LongLib.fromInt(12),LongLib.fromInt(11)));
  final double[] largeNeg=longFromBits(0x82341234,0x0);
  final double[] largePos=longFromBits(0x12341234,0x0);
  assertTrue(LongLib.lt(largeNeg,largePos));
  assertTrue(LongLib.lt(Const.MIN_VALUE,LongLib.fromInt(0)));
  assertTrue(LongLib.gt(LongLib.fromInt(0),Const.MIN_VALUE));
  final double[] largePosPlusOne=LongLib.add(largePos,LongLib.fromInt(1));
  assertTrue(LongLib.lt(largePos,largePosPlusOne));
  assertTrue(LongLib.lte(largePos,largePosPlusOne));
  assertTrue(!LongLib.eq(largePos,largePosPlusOne));
  assertTrue(!LongLib.gte(largePos,largePosPlusOne));
  assertTrue(!LongLib.gt(largePos,largePosPlusOne));
  assertTrue(!LongLib.lt(largePos,largePos));
  assertTrue(LongLib.lte(largePos,largePos));
  assertTrue(LongLib.eq(largePos,largePos));
  assertTrue(LongLib.gte(largePos,largePos));
  assertTrue(!LongLib.gt(largePos,largePos));
  assertTrue(!LongLib.lt(largePosPlusOne,largePos));
  assertTrue(!LongLib.lte(largePosPlusOne,largePos));
  assertTrue(!LongLib.eq(largePosPlusOne,largePos));
  assertTrue(LongLib.gte(largePosPlusOne,largePos));
  assertTrue(LongLib.gt(largePosPlusOne,largePos));
}

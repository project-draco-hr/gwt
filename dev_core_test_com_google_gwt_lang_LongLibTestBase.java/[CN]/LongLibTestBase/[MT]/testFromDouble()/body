{
  assertEquals("4611686018427387904",LongLib.toString(LongLib.fromDouble(Math.pow(2,62))));
  assertEquals("35184372088832",LongLib.toString(LongLib.fromDouble(Math.pow(2,45))));
  assertEquals("35184372088832",LongLib.toString(LongLib.fromDouble(Math.pow(2,45))));
  assertEquals("17592186044417",LongLib.toString(LongLib.fromDouble(Math.pow(2,44) + 1)));
  assertEquals("17592186044416",LongLib.toString(LongLib.fromDouble(Math.pow(2,44))));
  assertEquals("17592186044415",LongLib.toString(LongLib.fromDouble(Math.pow(2,44) - 1)));
  assertEquals("8796093022208",LongLib.toString(LongLib.fromDouble(Math.pow(2,43))));
  assertEquals(LongLib.fromInt(8388608),LongLib.fromDouble(Math.pow(2,23)));
  assertEquals(LongLib.fromInt(4194305),LongLib.fromDouble(Math.pow(2,22) + 1));
  assertEquals(LongLib.fromInt(4194304),LongLib.fromDouble(Math.pow(2,22)));
  assertEquals(LongLib.fromInt(4194303),LongLib.fromDouble(Math.pow(2,22) - 1));
  assertEquals(LongLib.fromInt(2097152),LongLib.fromDouble(Math.pow(2,21)));
  assertEquals(LongLib.fromInt(1048576),LongLib.fromDouble(Math.pow(2,20)));
  assertEquals(LongLib.fromInt(10),LongLib.fromDouble(10.5));
  assertEquals(LongLib.fromInt(-10),LongLib.fromDouble(-10.5));
  assertEquals(LongLib.shl(LongLib.fromInt(1),55),LongLib.fromDouble(Math.pow(2.0,55) + 0.5));
  assertEquals(LongLib.neg(LongLib.shl(LongLib.fromInt(1),55)),LongLib.fromDouble(-Math.pow(2.0,55) - 0.5));
  assertEquals(LongLib.fromInt(0),LongLib.fromDouble(Double.NaN));
  assertEquals(Const.MAX_VALUE,LongLib.fromDouble(Math.pow(2.0,100)));
  assertEquals(Const.MAX_VALUE,LongLib.fromDouble(Double.POSITIVE_INFINITY));
  assertEquals(Const.MIN_VALUE,LongLib.fromDouble(-Math.pow(2.0,100)));
  assertEquals(Const.MIN_VALUE,LongLib.fromDouble(Double.NEGATIVE_INFINITY));
}

{
  assertEquals(longFromBits(0xd048d115,0x9d159c00),LongLib.shl(longFromBits(0x12341234,0x45674567),10));
  assertEquals(longFromBits(0x48d04,0x8d1159d1),LongLib.shr(longFromBits(0x12341234,0x45674567),10));
  assertEquals(longFromBits(0x48d04,0x8d1159d1),LongLib.shru(longFromBits(0x12341234,0x45674567),10));
  assertEquals(longFromBits(0xd048d115,0x9d159c00),LongLib.shl(longFromBits(0x92341234,0x45674567),10));
  assertEquals(longFromBits(0xffe48d04,0x8d1159d1),LongLib.shr(longFromBits(0x92341234,0x45674567),10));
  assertEquals(LongLib.fromInt(67108863),LongLib.shr(longFromBits(0xFFFFFFF,0xFFFFFFFF),34));
  assertEquals(longFromBits(0x248d04,0x8d1159d1),LongLib.shru(longFromBits(0x92341234,0x45674567),10));
  assertEquals(LongLib.fromInt(-1),LongLib.shr(LongLib.fromInt(-1),10));
  assertEquals(LongLib.fromInt(-1),LongLib.shr(LongLib.fromInt(-1),63));
  assertEquals(LongLib.fromInt(-1 << 5),LongLib.shl(LongLib.fromInt(-1),5));
  assertEquals(LongLib.fromInt(-1),LongLib.shl(LongLib.fromInt(-1),0));
  assertEquals(LongLib.neg(LongLib.typeChange(0x4000000000000000L)),LongLib.shr(LongLib.shl(LongLib.fromInt(1),63),1));
  assertEquals(LongLib.fromInt(0),LongLib.shl(LongLib.shl(LongLib.fromInt(-1),32),32));
  assertEquals(Const.MIN_VALUE,LongLib.shl(Const.MIN_VALUE,0));
  assertEquals(LongLib.fromInt(0),LongLib.shl(Const.MIN_VALUE,1));
  assertEquals(longFromBits(0xfffffffc,0x00000000),LongLib.shr(LongLib.neg(longFromBits(8,0)),1));
  assertEquals(longFromBits(0x7ffffffc,0x0),LongLib.shru(LongLib.neg(longFromBits(8,0)),1));
}

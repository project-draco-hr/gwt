{
  List<PropertyPermutations> collapsedPermutations=Precompile.getCollapsedPermutations(module);
  PropertyPermutations onePerm=collapsedPermutations.get(permId);
  Precompilation precompilation=Precompile.precompile(branch,compilerContext,permId,onePerm);
  if (precompilation == null) {
    branch.log(TreeLogger.ERROR,"Precompilation failed");
    return false;
  }
  if (!options.shouldSaveSource()) {
    precompilation.removeSourceArtifacts(logger);
  }
  File precompilationFile=new File(compilerWorkDir,getPrecompileFilename(permId));
  Util.writeObjectAsFile(logger,precompilationFile,precompilation);
  if (branch.isLoggable(TreeLogger.INFO)) {
    branch.log(TreeLogger.INFO,"Precompilation succeeded for permutation " + permId);
  }
  return true;
}

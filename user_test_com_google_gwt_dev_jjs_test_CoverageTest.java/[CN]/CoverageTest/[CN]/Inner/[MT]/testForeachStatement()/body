{
  ia=new int[]{i,j};
  for (  int q : ia) {
    i=q;
  }
  for (  Integer q : ia) {
    i=q;
  }
  for (  String str : sa) {
    s=str;
  }
  for (  Object obj : Arrays.asList(new Object(),new Object())) {
    o=obj;
  }
  for (  int q : Arrays.asList(1,2,3)) {
    i=q;
  }
  for (  String str : Arrays.asList(sa)) {
    s=str;
  }
  for (  String[] stra : Arrays.asList(sa,sa,sa)) {
    s=sa[0];
  }
class SubIterator<T> implements Iterator<T> {
    private final Iterator<T> it;
    public SubIterator(    Iterator<T> it){
      this.it=it;
    }
    @Override public boolean hasNext(){
      return it.hasNext();
    }
    @Override public T next(){
      return it.next();
    }
    @Override public void remove(){
      it.remove();
    }
  }
class SubIterableString implements Iterable<String> {
    @Override public SubIterator<String> iterator(){
      return new SubIterator<String>(Arrays.asList(sa).iterator());
    }
  }
  for (  String str : new SubIterableString()) {
    s=str;
  }
}

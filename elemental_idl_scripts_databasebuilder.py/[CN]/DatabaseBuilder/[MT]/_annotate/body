def _annotate(self, interface, module_name, import_options):
    'Adds @ annotations based on the source and source_attributes\n    members of import_options.'
    source = import_options.source
    if (not source):
        return

    def add_source_annotation(idl_node):
        annotation = IDLAnnotation(copy.deepcopy(import_options.source_attributes))
        idl_node.annotations[source] = annotation
        if ((isinstance(idl_node, IDLInterface) or isinstance(idl_node, IDLMember)) and idl_node.is_fc_suppressed):
            annotation['suppressed'] = None
    add_source_annotation(interface)
    interface.annotations[source][_MODULE_ANNOTATION_ATTR_NAME] = module_name
    map(add_source_annotation, interface.parents)
    map(add_source_annotation, interface.constants)
    map(add_source_annotation, interface.attributes)
    map(add_source_annotation, interface.operations)

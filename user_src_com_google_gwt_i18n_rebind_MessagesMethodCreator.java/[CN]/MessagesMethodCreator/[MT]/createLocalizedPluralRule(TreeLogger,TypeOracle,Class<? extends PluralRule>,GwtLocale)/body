{
  String baseName=ruleClass.getCanonicalName();
  JClassType ruleJClassType=oracle.findType(baseName);
  Map<String,JClassType> matchingClasses=LocalizableLinkageCreator.findDerivedClasses(logger,ruleJClassType);
  for (  GwtLocale search : locale.getCompleteSearchList()) {
    JClassType localizedType=matchingClasses.get(search.toString());
    if (localizedType != null) {
      try {
        Class<?> testClass=Class.forName(localizedType.getQualifiedSourceName(),false,PluralRule.class.getClassLoader());
        if (PluralRule.class.isAssignableFrom(testClass)) {
          return (PluralRule)testClass.newInstance();
        }
      }
 catch (      ClassCastException e) {
      }
catch (      ClassNotFoundException e) {
      }
catch (      InstantiationException e) {
      }
catch (      IllegalAccessException e) {
      }
    }
  }
  return new DefaultRule();
}

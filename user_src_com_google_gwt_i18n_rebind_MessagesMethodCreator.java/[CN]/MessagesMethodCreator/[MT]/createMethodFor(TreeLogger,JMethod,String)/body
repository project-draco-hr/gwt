{
  int numParams=m.getParameters().length;
  Object[] expected;
  String safeReplaceString="~";
  while (template.indexOf(safeReplaceString) >= 0) {
    safeReplaceString+="~";
  }
  try {
    int numArgs=MessagesInterfaceCreator.numberOfMessageArgs(template);
    expected=new Object[numArgs];
  }
 catch (  ParseException e) {
    logger.log(TreeLogger.INFO,"Failed to parse the message " + template + " so cannot verify the number of passed-in arguments",e);
    expected=new Object[numParams];
  }
  if (numParams != expected.length) {
    String s="Wrong number of template arguments\n\t " + m.getName() + " args: "+ numParams+ "\n\t"+ template+ " args: "+ expected.length;
    throw error(logger,s);
  }
  for (int i=0; i < expected.length; i++) {
    expected[i]=safeReplaceString + " + arg" + i+ " + "+ safeReplaceString;
  }
  String formattedString;
  try {
    formattedString=MessageFormat.format(template,expected);
  }
 catch (  IllegalArgumentException e) {
    throw error(logger,"Message Template '" + template + "' did not format correctly",e);
  }
  formattedString=wrap(formattedString);
  formattedString=formattedString.replaceAll(safeReplaceString,"\"");
  String templateToSplit="return " + formattedString + ";";
  println(templateToSplit);
}

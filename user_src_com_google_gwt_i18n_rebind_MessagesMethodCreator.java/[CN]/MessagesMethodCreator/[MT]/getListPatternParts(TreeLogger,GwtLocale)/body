{
  Map<String,String> map=listPatternCache.get(locale);
  if (map == null) {
    String baseName=MessagesMethodCreator.class.getPackage().getName().replace('.','/') + "/cldr/ListPatterns_";
    ClassLoader cl=MessagesMethodCreator.class.getClassLoader();
    for (    GwtLocale search : locale.getCompleteSearchList()) {
      String propFile=baseName + search.getAsString() + ".properties";
      InputStream stream=cl.getResourceAsStream(propFile);
      if (stream != null) {
        try {
          LocalizedPropertiesLoader loader=new LocalizedPropertiesLoader(stream,"UTF-8");
          map=new HashMap<String,String>();
          loader.load(map);
          break;
        }
 catch (        IOException e) {
          logger.log(TreeLogger.WARN,"Ignoring error reading file " + propFile,e);
        }
 finally {
          try {
            stream.close();
          }
 catch (          IOException e) {
          }
        }
      }
    }
    listPatternCache.put(locale,map);
  }
  return map;
}

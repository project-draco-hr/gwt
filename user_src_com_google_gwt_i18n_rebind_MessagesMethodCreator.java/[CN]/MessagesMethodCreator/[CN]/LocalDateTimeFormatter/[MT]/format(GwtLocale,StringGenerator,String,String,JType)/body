{
  if (!"java.util.Date".equals(argType.getQualifiedSourceName())) {
    return "Only java.util.Date acceptable for localdatetime format";
  }
  if (subformat == null || subformat.length() == 0) {
    return "localdatetime format requires a skeleton pattern";
  }
  if (subformat.startsWith(PREDEF)) {
    PredefinedFormat predef;
    try {
      predef=PredefinedFormat.valueOf(subformat.substring(PREDEF.length()));
    }
 catch (    IllegalArgumentException e) {
      return e.getMessage();
    }
    out.appendExpression(dtFormatClassName + ".getFormat(" + PredefinedFormat.class.getName()+ "."+ predef.toString()+ ").format("+ argName+ ")",true);
    return null;
  }
  DateTimePatternGenerator dtpg=new DateTimePatternGenerator(locale);
  String pattern=dtpg.getBestPattern(subformat);
  if (pattern == null) {
    return "Invalid localdatetime skeleton pattern \"" + subformat + "\"";
  }
  out.appendExpression(dtFormatClassName + ".getFormat(" + wrap(pattern)+ ").format("+ argName+ ")",true);
  return null;
}

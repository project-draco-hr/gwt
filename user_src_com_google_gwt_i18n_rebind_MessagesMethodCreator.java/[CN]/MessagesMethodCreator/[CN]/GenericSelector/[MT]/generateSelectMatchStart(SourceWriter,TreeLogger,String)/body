{
  if (needsIf) {
    if (startedIfChain) {
      out.print("} else ");
    }
 else {
      startedIfChain=true;
    }
    if (AlternateMessageSelector.OTHER_FORM_NAME.equals(value)) {
      out.println("{  // other");
    }
 else {
      if (isString) {
        value=value.replace("\"","\\\"");
        out.println("if (\"" + value + "\".equals(arg"+ argNumber+ ")) {");
      }
 else       if (isBoolean) {
        boolean isTrue=Boolean.parseBoolean(value);
        out.println("if (" + (isTrue ? "" : "!") + "arg"+ argNumber+ ") {");
      }
 else {
        long longVal;
        try {
          longVal=Long.parseLong(value);
        }
 catch (        NumberFormatException e) {
          throw error(logger,"'" + value + "' is not a valid long value",e);
        }
        out.println("if (" + longVal + " == arg"+ argNumber+ ") {");
      }
    }
  }
 else {
    if (AlternateMessageSelector.OTHER_FORM_NAME.equals(value)) {
      out.println("default:  // other");
    }
 else     if (enumType != null) {
      JField field=enumType.findField(value);
      JEnumConstant enumConstant=null;
      if (field != null) {
        enumConstant=field.isEnumConstant();
      }
      if (field == null || enumConstant == null) {
        throw error(logger,"'" + value + "' is not a valid value of "+ enumType.getQualifiedSourceName()+ " or 'other'");
      }
      out.println("case " + enumConstant.getOrdinal() + ":  // "+ value);
    }
 else {
      int intVal;
      try {
        intVal=Integer.parseInt(value);
      }
 catch (      NumberFormatException e) {
        throw error(logger,"'" + value + "' is not a valid integral value",e);
      }
      out.println("case " + intVal + ":");
    }
  }
  out.indent();
}

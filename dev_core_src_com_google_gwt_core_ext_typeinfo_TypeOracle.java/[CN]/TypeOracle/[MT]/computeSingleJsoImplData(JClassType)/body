{
  JClassType jsoType=findType(JSO_CLASS);
  if (jsoType == null) {
    return;
  }
  for (  JClassType type : newTypes) {
    if (!jsoType.isAssignableFrom(type)) {
      continue;
    }
    for (    JClassType intf : JClassType.getFlattenedSuperTypeHierarchy(type)) {
      if (intf.isInterface() == null) {
        continue;
      }
      if (intf.getOverridableMethods().length == 0) {
        jsoSingleImpls.put(intf,jsoType);
        continue;
      }
      JClassType previousType=jsoSingleImpls.get(intf);
      if (previousType == null) {
        jsoSingleImpls.put(intf,type);
      }
 else       if (type.isAssignableFrom(previousType)) {
        jsoSingleImpls.put(intf,type);
      }
 else       if (type.isAssignableTo(previousType)) {
      }
 else {
        JClassType impl=findFullyImplementingBase(intf,type,previousType);
        if (impl != null) {
          jsoSingleImpls.put(intf,impl);
        }
 else {
          throw new InternalCompilerException("Already seen an implementing JSO subtype (" + previousType.getName() + ") for interface ("+ intf.getName()+ ") while examining newly-added type ("+ type.getName()+ "). This is a bug in "+ "JSORestrictionsChecker.");
        }
      }
    }
  }
}

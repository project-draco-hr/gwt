{
  checkPermutationStrongName();
  try {
    RPCRequest rpcRequest=RPC.decodeRequest(payload,delegate.getClass(),this);
    onAfterRequestDeserialized(rpcRequest);
    return RPC.invokeAndEncodeResponse(delegate,rpcRequest.getMethod(),rpcRequest.getParameters(),rpcRequest.getSerializationPolicy(),rpcRequest.getFlags());
  }
 catch (  IncompatibleRemoteServiceException ex) {
    log("An IncompatibleRemoteServiceException was thrown while processing this call.",ex);
    return RPC.encodeResponseForFailure(null,ex);
  }
}

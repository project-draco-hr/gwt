{
  if (x.catchBlocks.isEmpty()) {
    return;
  }
  ChangeList myChangeList=new ChangeList("Merge " + x.catchBlocks.size() + " catch blocks.");
  JLocal exObj=popTempLocal();
  JLocalRef exRef=new JLocalRef(program,exObj);
  JBlock newCatchBlock=new JBlock(program);
  JMethod caughtMethod=program.getSpecialMethod("Exceptions.caught");
  JMethodCall call=new JMethodCall(program,null,caughtMethod);
  call.args.add(exRef);
  JExpressionStatement asg=program.createAssignmentStmt(exRef,call);
  newCatchBlock.statements.add(asg);
  JStatement cur=new JThrowStatement(program,exRef);
  for (int i=x.catchBlocks.size() - 1; i >= 0; --i) {
    JBlock block=(JBlock)x.catchBlocks.get(i);
    JLocalRef arg=(JLocalRef)x.catchArgs.get(i);
    JReferenceType argType=(JReferenceType)arg.getType();
    JExpression ifTest=new JInstanceOf(program,argType,exRef);
    asg=program.createAssignmentStmt(arg,exRef);
    myChangeList.addStatement(asg,0,block);
    cur=new JIfStatement(program,ifTest,block,cur);
  }
  newCatchBlock.statements.add(cur);
  myChangeList.clear(x.catchArgs);
  myChangeList.clear(x.catchBlocks);
  myChangeList.addNode(exRef,0,x.catchArgs);
  myChangeList.addNode(newCatchBlock,0,x.catchBlocks);
  changeList.add(myChangeList);
}

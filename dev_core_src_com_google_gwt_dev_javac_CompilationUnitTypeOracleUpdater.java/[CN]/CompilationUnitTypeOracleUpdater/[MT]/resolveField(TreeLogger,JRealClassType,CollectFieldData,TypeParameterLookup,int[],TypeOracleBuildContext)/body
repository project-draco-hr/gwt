{
  Map<Class<? extends Annotation>,Annotation> declaredAnnotations=new HashMap<Class<? extends Annotation>,Annotation>();
  resolveAnnotations(logger,field.getAnnotations(),declaredAnnotations);
  String name=field.getName();
  JField jfield;
  if ((field.getAccess() & Opcodes.ACC_ENUM) != 0) {
    assert(unresolvedType.isEnum() != null);
    jfield=newEnumConstant(unresolvedType,name,declaredAnnotations,nextEnumOrdinal[0]++);
  }
 else {
    JField newField=newField(unresolvedType,name,declaredAnnotations);
    jfield=newField;
  }
  addModifierBits(jfield,mapBits(ASM_TO_SHARED_MODIFIERS,field.getAccess()));
  String signature=field.getSignature();
  JType fieldType;
  if (signature != null) {
    SignatureReader reader=new SignatureReader(signature);
    JType[] fieldTypeRef=new JType[1];
    reader.acceptType(new ResolveTypeSignature(context.resolver,typesByInternalName,logger,fieldTypeRef,typeParamLookup,null));
    fieldType=fieldTypeRef[0];
  }
 else {
    fieldType=resolveType(Type.getType(field.getDesc()));
  }
  if (fieldType == null) {
    return false;
  }
  setFieldType(jfield,fieldType);
  return true;
}

{
  registerHandler(new ArgHandlerExtra(){
    @Override public boolean addExtraArg(    String arg){
      if (source != null) {
        return false;
      }
      try {
        source=(new File(arg)).toURL();
        return true;
      }
 catch (      MalformedURLException e) {
        e.printStackTrace();
        return false;
      }
    }
    @Override public String getPurpose(){
      return "The css file to process";
    }
    @Override public String[] getTagArgs(){
      return new String[]{"stylesheet.css"};
    }
  }
);
  registerHandler(new ArgHandlerOutputReadable());
  if (!processArgs(args)) {
    return false;
  }
  if (source == null) {
    printHelp();
    return false;
  }
  try {
    CssStylesheet sheet=GenerateCssAst.exec(logger,source);
    TextOutput out=new DefaultTextOutput(!pretty);
    (new CssGenerationVisitor(out)).accept(sheet);
    System.out.println(out.toString());
  }
 catch (  UnableToCompleteException e) {
    logger.log(TreeLogger.ERROR,"Unable to compile CSS");
  }
  return true;
}

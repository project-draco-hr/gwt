{
  final Resources r=GWT.create(Resources.class);
  int numReturned=0;
  delayTestFinish(2000);
class TestCallback implements ResourceCallback<TextResource> {
    private final String name;
    private final String contents;
    private TestCallback otherTest;
    private boolean done=false;
    TestCallback(    String name,    String contents){
      this.name=name;
      this.contents=contents;
    }
    public boolean isDone(){
      return done;
    }
    @Override public void onError(    ResourceException e){
      e.printStackTrace();
      fail("Unable to fetch " + e.getResource().getName());
    }
    @Override public void onSuccess(    TextResource resource){
      assertEquals(name,resource.getName());
      assertEquals(contents,resource.getText());
      done=true;
      if (otherTest.isDone()) {
        finishTest();
      }
    }
    public void setOtherTest(    TestCallback test){
      otherTest=test;
    }
  }
  ;
  TestCallback needsEscape=new TestCallback(r.needsEscapeExternal().getName(),NEEDS_ESCAPE);
  TestCallback helloWorld=new TestCallback(r.helloWorldExternal().getName(),HELLO);
  needsEscape.setOtherTest(helloWorld);
  helloWorld.setOtherTest(needsEscape);
  r.needsEscapeExternal().getText(needsEscape);
  r.helloWorldExternal().getText(helloWorld);
}

{
  Set<Class<?>> matches=new HashSet<Class<?>>();
  if (availableClasses.contains(target)) {
    return ImmutableSet.<Class<?>>of(target);
  }
 else {
    for (    Class<?> clazz : availableClasses) {
      if (clazz.isAssignableFrom(target)) {
        matches.add(clazz);
      }
    }
  }
  Predicate<Class<?>> moreSpecificClassPredicate=createMostSpecificMatchPredicate(matches,Functions.<Class<?>>identity());
  return Sets.filter(matches,moreSpecificClassPredicate);
}

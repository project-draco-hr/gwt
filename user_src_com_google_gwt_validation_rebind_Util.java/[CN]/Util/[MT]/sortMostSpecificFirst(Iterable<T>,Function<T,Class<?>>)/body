{
  List<T> working=Lists.newArrayList();
  for (  T t : classes) {
    if (!working.contains(t)) {
      working.add(t);
    }
  }
  List<T> sorted=Lists.newArrayList();
  Predicate<T> mostSpecific=createMostSpecificMatchPredicate(working,toClass);
  boolean changed=false;
  do {
    changed=false;
    for (Iterator<T> iterator=working.iterator(); iterator.hasNext(); ) {
      T t=iterator.next();
      if (mostSpecific.apply(t)) {
        sorted.add(t);
        iterator.remove();
        changed=true;
      }
    }
  }
 while (changed);
  if (!working.isEmpty()) {
    throw new IllegalStateException("Unable to find a element that does not have a more specific element in the set " + working);
  }
  return ImmutableList.copyOf(sorted);
}

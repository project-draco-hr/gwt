{
  ModuleDef md=new ModuleDef("testTwoDimensionPerm");
  Properties props=md.getProperties();
{
    BindingProperty prop=props.createBinding("user.agent");
    prop.addDefinedValue(prop.getRootCondition(),"moz");
    prop.addDefinedValue(prop.getRootCondition(),"ie6");
    prop.addDefinedValue(prop.getRootCondition(),"opera");
    prop.addCollapsedValues("moz","ie6","opera");
  }
{
    BindingProperty prop=props.createBinding("debug");
    prop.addDefinedValue(prop.getRootCondition(),"false");
    prop.addDefinedValue(prop.getRootCondition(),"true");
  }
  PropertyPermutations perms=new PropertyPermutations(md.getProperties(),md.getActiveLinkerNames());
  List<PropertyPermutations> collapsed=perms.collapseProperties();
  assertEquals("size",2,collapsed.size());
  Iterator<String[]> it=collapsed.get(0).iterator();
  assertEquals(Arrays.asList("false","ie6"),Arrays.asList(it.next()));
  assertEquals(Arrays.asList("false","moz"),Arrays.asList(it.next()));
  assertEquals(Arrays.asList("false","opera"),Arrays.asList(it.next()));
  assertFalse(it.hasNext());
  it=collapsed.get(1).iterator();
  assertEquals(Arrays.asList("true","ie6"),Arrays.asList(it.next()));
  assertEquals(Arrays.asList("true","moz"),Arrays.asList(it.next()));
  assertEquals(Arrays.asList("true","opera"),Arrays.asList(it.next()));
  assertFalse(it.hasNext());
}

{
  if (boolean.class.equals(type)) {
    return JPrimitiveType.BOOLEAN;
  }
  if (int.class.equals(type)) {
    return JPrimitiveType.INT;
  }
  if (char.class.equals(type)) {
    return JPrimitiveType.CHAR;
  }
  if (byte.class.equals(type)) {
    return JPrimitiveType.BYTE;
  }
  if (long.class.equals(type)) {
    return JPrimitiveType.LONG;
  }
  if (short.class.equals(type)) {
    return JPrimitiveType.SHORT;
  }
  if (float.class.equals(type)) {
    return JPrimitiveType.FLOAT;
  }
  if (double.class.equals(type)) {
    return JPrimitiveType.DOUBLE;
  }
  if (void.class.equals(type)) {
    return JPrimitiveType.VOID;
  }
  throw new IllegalArgumentException("Invalid primitive type: " + type.getName());
}

{
  when(element.isAnnotationPresent(any(Class.class))).thenAnswer(new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocation) throws Throwable {
      Class<? extends Annotation> annotationClass=(Class<? extends Annotation>)invocation.getArguments()[0];
      return realElement.isAnnotationPresent(annotationClass);
    }
  }
);
  when(element.getAnnotation(any(Class.class))).thenAnswer(new Answer<Annotation>(){
    @Override public Annotation answer(    InvocationOnMock invocation) throws Throwable {
      Class<? extends Annotation> annotationClass=(Class<? extends Annotation>)invocation.getArguments()[0];
      return realElement.getAnnotation(annotationClass);
    }
  }
);
}

{
  queryField.setText("G");
  RootPanel.get("queryFieldContainer").add(queryField);
  RootPanel.get("errorLabelContainer").add(errorLabel);
  queryField.setFocus(true);
  queryField.selectAll();
  searchListModel=new AsyncListModel<StockQuote>(new DataSource<StockQuote>(){
    public void requestData(    AsyncListModel<StockQuote> listModel){
      update();
    }
  }
);
  favoritesListModel=new AsyncListModel<StockQuote>(new DataSource<StockQuote>(){
    public void requestData(    AsyncListModel<StockQuote> listModel){
      update();
    }
  }
);
  transactionListModel=new ListListModel<Transaction>();
  transactions=transactionListModel.getList();
  resultsTable=new PagingTableListView<StockQuote>(searchListModel,10);
  resultsTable.addColumn(favoriteColumn);
  resultsTable.addColumn(tickerColumn);
  resultsTable.addColumn(nameColumn);
  resultsTable.addColumn(priceColumn);
  resultsTable.addColumn(buyColumn);
  favoritesTable=new PagingTableListView<StockQuote>(favoritesListModel,10);
  favoritesTable.addColumn(tickerColumn);
  favoritesTable.addColumn(priceColumn);
  favoritesTable.addColumn(sharesColumn);
  favoritesTable.addColumn(buyColumn);
  favoritesTable.addColumn(sellColumn);
  transactionTable=new PagingTableListView<Transaction>(transactionListModel,10);
  transactionTable.addColumn(transactionColumn);
  transactionTable.addColumn(subtotalColumn);
  favoriteColumn.setFieldUpdater(new FieldUpdater<StockQuote,Boolean>(){
    public void update(    StockQuote object,    Boolean value){
      setFavorite(object.getTicker(),value);
    }
  }
);
  buyColumn.setFieldUpdater(new FieldUpdater<StockQuote,String>(){
    public void update(    StockQuote object,    String value){
      buySellPopup.setStockQuote(object,true);
      buySellPopup.center();
    }
  }
);
  sellColumn.setFieldUpdater(new FieldUpdater<StockQuote,String>(){
    public void update(    StockQuote object,    String value){
      buySellPopup.setStockQuote(object,false);
      buySellPopup.center();
    }
  }
);
  buySellPopup.addCloseHandler(new CloseHandler<PopupPanel>(){
    public void onClose(    CloseEvent<PopupPanel> event){
      Transaction t=buySellPopup.getTransaction();
      if (t != null) {
        dataService.transact(t,new AsyncCallback<Transaction>(){
          public void onFailure(          Throwable caught){
            Window.alert("Error: " + caught.getMessage());
          }
          public void onSuccess(          Transaction result){
            transactions.add(0,result);
            update();
          }
        }
);
      }
    }
  }
);
  HorizontalPanel hPanel=new HorizontalPanel();
  hPanel.add(new HTML("<b>Available cash:</b>"));
  hPanel.add(cashLabel);
  RootPanel.get().add(hPanel);
  RootPanel.get().add(resultsTable);
  RootPanel.get().add(new HTML("<hr>"));
  RootPanel.get().add(favoritesTable);
  RootPanel.get().add(new HTML("<hr>"));
  RootPanel.get().add(transactionTable);
  queryField.addKeyUpHandler(new KeyUpHandler(){
    public void onKeyUp(    KeyUpEvent event){
      update();
    }
  }
);
  update();
}

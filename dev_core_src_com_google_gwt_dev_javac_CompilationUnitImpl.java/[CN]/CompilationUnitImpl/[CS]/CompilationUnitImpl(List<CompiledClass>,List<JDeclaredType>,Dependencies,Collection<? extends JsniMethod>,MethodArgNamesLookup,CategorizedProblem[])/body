{
  this.exposedCompiledClasses=Lists.normalizeUnmodifiable(compiledClasses);
  this.dependencies=dependencies;
  this.jsniMethods=Lists.create(jsniMethods.toArray(new JsniMethod[jsniMethods.size()]));
  this.methodArgs=methodArgs;
  this.problems=problems;
  boolean hasAnyErrors=false;
  if (problems != null) {
    for (    CategorizedProblem problem : problems) {
      if (problem.isError()) {
        hasAnyErrors=true;
      }
    }
  }
  this.hasErrors=hasAnyErrors;
  for (  CompiledClass cc : compiledClasses) {
    cc.initUnit(this);
  }
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    ObjectOutputStream out=new ObjectOutputStream(baos);
    JProgram.serializeTypes(types,out);
    out.close();
    serializedAst=baos.toByteArray();
  }
 catch (  IOException e) {
    throw new RuntimeException("Unexpected IOException on in-memory stream",e);
  }
}

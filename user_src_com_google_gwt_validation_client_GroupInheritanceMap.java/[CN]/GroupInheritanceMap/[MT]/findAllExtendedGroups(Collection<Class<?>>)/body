{
  Set<Class<?>> found=new HashSet<Class<?>>();
  Stack<Class<?>> remaining=new Stack<Class<?>>();
  for (  Class<?> group : baseGroups) {
    if (!mapping.containsKey(group)) {
      throw new IllegalArgumentException("The collection of groups contains a group which" + " was not added to the map. Be sure to call addGroup() for all groups first.");
    }
    remaining.push(group);
  }
  Class<?> current;
  Set<Class<?>> superInterfaces;
  while (!remaining.isEmpty()) {
    current=remaining.pop();
    found.add(current);
    superInterfaces=mapping.get(current);
    for (    Class<?> parent : superInterfaces) {
      if (!found.contains(parent)) {
        remaining.push(parent);
      }
    }
  }
  return found;
}

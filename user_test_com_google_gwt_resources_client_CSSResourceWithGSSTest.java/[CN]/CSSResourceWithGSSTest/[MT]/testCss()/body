{
  FullTestCss css=Resources.INSTANCE.css();
  String text=css.getText();
  assertTrue(text.contains("height:16px"));
  assertTrue(text.contains("width:16px"));
  assertTrue(text.contains("offset-left:\"guard\" 16px!important"));
  assertTrue(text.contains("offset:16px 16px"));
  assertFalse("replacement".equals(css.replacement()));
  assertTrue(text.contains("." + css.replacement()));
  assertTrue(text.contains("." + css.replacement() + ":after"));
  assertTrue(text.contains("." + css.replacementNotJavaIdent()));
  assertFalse("multiClassA".equals(css.multiClassA()));
  assertFalse("multiClassB".equals(css.multiClassB()));
  assertTrue(text.contains("." + css.multiClassA() + "."+ css.multiClassB()));
  assertTrue(text.contains("static:passed"));
  assertFalse(text.contains("FAIL"));
  assertTrue(text.contains("runtime:passed"));
  assertTrue(text.contains("-some-wacky-extension"));
  assertTrue(text.contains("another-extension:-bar"));
  assertTrue(text.contains("-unescaped-hyphen:-is-better"));
  assertTrue(text.contains("with_underscore:_is_better"));
  assertTrue(text.contains("ns:tag"));
  assertTrue(text.contains("ns:tag:pseudo"));
  assertTrue(text.contains("ns:tag::double-pseudo"));
  assertTrue(text.contains("ns:tag::-webkit-scrollbar"));
  assertFalse(text.contains("0.0;"));
  assertFalse(text.contains("0.0px;"));
  assertFalse(text.contains("0px;"));
  assertTrue(text.contains("background-color:#fff"));
  assertTrue(text.contains("content:\"bar\""));
  assertTrue(text.contains("backgroundTopLevel:url(" + Resources.INSTANCE.dataMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains("backgroundNested:url(" + Resources.INSTANCE.nested().dataMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains("backgroundCustom:url(" + Resources.INSTANCE.customDataMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains("backgroundImage:url(" + Resources.INSTANCE.spriteMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains("backgroundImageNested:url(" + Resources.INSTANCE.nested().spriteMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains("backgroundImageCustom:url(" + Resources.INSTANCE.customSpriteMethod().getSafeUri().asString() + ")"));
  assertTrue(text.contains(red()));
  assertTrue(text.contains("50px"));
  assertTrue(text.contains("-moz-linear-gradient(left,#007f00,#00007f 50%)"));
  assertTrue(text.contains("-webkit-linear-gradient(left,#007f00,#00007f 50%)"));
  assertTrue(text.contains("linear-gradient(to right,#007f00,#00007f 50%)"));
  assertTrue(text.indexOf("merge:merge") != -1);
  assertTrue(text.indexOf("merge:merge") < text.indexOf("." + css.mayNotCombine()));
  assertTrue(text.indexOf("may-not-combine") < text.indexOf("prevent:true"));
  assertTrue(text.indexOf("prevent:true") < text.indexOf("prevent-merge:true"));
  assertTrue(text.indexOf("prevent:true") < text.indexOf("." + css.mayNotCombine2()));
  assertTrue(text.contains("background-color:rgba(0,0,0,0.5)"));
  assertEquals("externalA",css.externalA());
  assertTrue(text.contains(".externalA ." + css.replacement()));
  assertTrue(text.contains(".externalB"));
  assertTrue(text.contains(".externalC"));
  assertTrue(text.contains("url(Foo.otf) format(\"opentype\")"));
}

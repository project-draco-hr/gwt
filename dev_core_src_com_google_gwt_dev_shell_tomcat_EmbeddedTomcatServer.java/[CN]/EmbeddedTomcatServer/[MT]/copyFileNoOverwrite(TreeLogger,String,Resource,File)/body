{
  File dest=new File(catBase,srcResName);
  InputStream is=null;
  FileOutputStream os=null;
  try {
    URL srcRes=resource.getURL();
    if (srcRes == null) {
      logger.log(TreeLogger.TRACE,"Cannot find: " + srcResName,null);
      return;
    }
    long srcLastModified=srcRes.openConnection().getLastModified();
    long dstLastModified=dest.lastModified();
    if (srcLastModified < dstLastModified) {
      logger.log(TreeLogger.SPAM,"Source is older than existing: " + dest.getAbsolutePath(),null);
      return;
    }
 else     if (srcLastModified == dstLastModified) {
      return;
    }
 else     if (dest.exists()) {
      logger.log(TreeLogger.WARN,"Overwriting existing file '" + dest.getAbsolutePath() + "' with '"+ resource.getLocation()+ "', which has a newer timestamp");
    }
    File destParent=dest.getParentFile();
    if (destParent != null) {
      destParent.mkdirs();
    }
    is=srcRes.openStream();
    os=new FileOutputStream(dest);
    Utility.streamOut(is,os,1024);
    Utility.close(os);
    dest.setLastModified(srcLastModified);
    logger.log(TreeLogger.TRACE,"Wrote: " + dest.getAbsolutePath(),null);
  }
 catch (  IOException e) {
    logger.log(TreeLogger.WARN,"Failed to write: " + dest.getAbsolutePath(),e);
  }
 finally {
    Utility.close(is);
    Utility.close(os);
  }
}

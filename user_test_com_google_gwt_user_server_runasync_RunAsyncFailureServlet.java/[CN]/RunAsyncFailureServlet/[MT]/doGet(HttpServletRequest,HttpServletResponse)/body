{
  String originalUri=req.getRequestURI();
  debug("doGet: " + originalUri);
  String uri=originalUri.replace("/runAsyncFailure","");
  int response=getDesiredResponse(uri);
  String fragment=uri.substring(uri.lastIndexOf('/') + 1);
  if (!downloadErrorFragments.contains(fragment) || response == HttpServletResponse.SC_OK) {
    int bytes=0;
    if (!installErrorFragments.contains(fragment)) {
      String host=req.getLocalName();
      int port=req.getLocalPort();
      String realUrl="http://" + host + ":"+ port+ uri;
      debug("Fetching: " + realUrl);
      try {
        URL url=new URL(realUrl);
        InputStream is=url.openStream();
        OutputStream os=resp.getOutputStream();
        byte[] data=new byte[8192];
        int nbytes;
        while ((nbytes=is.read(data)) != -1) {
          os.write(data,0,nbytes);
          bytes+=nbytes;
        }
        is.close();
        os.close();
      }
 catch (      IOException e) {
        debug("IOException fetching real data: " + e);
        throw e;
      }
    }
    resp.setContentType("text/javascript");
    resp.setHeader("Cache-Control","no-cache");
    resp.setContentLength(bytes);
    resp.setStatus(HttpServletResponse.SC_OK);
    debug("doGet: served " + uri + " ("+ bytes+ " bytes)");
  }
 else {
    resp.setHeader("Cache-Control","no-cache");
    resp.sendError(response,"serial=" + getNextSerial());
    debug("doGet: sent error " + response + " for "+ uri);
  }
}

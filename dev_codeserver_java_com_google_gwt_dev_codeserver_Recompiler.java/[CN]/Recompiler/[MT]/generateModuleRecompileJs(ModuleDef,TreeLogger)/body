{
  String outputModuleName=module.getName();
  try {
    String templateJs=Resources.toString(Resources.getResource(Recompiler.class,"recompile_template.js"),Charsets.UTF_8);
    String propertyProviders=PropertiesUtil.generatePropertiesSnippet(module,compileLogger);
    String libJs=Resources.toString(Resources.getResource(Recompiler.class,"recompile_lib.js"),Charsets.UTF_8);
    String recompileJs=Resources.toString(Resources.getResource(Recompiler.class,"recompile_main.js"),Charsets.UTF_8);
    templateJs=templateJs.replace("__MODULE_NAME__","'" + outputModuleName + "'");
    templateJs=templateJs.replace("__PROPERTY_PROVIDERS__",propertyProviders);
    templateJs=templateJs.replace("__LIB_JS__",libJs);
    templateJs=templateJs.replace("__MAIN__",recompileJs);
    return templateJs;
  }
 catch (  IOException e) {
    compileLogger.log(Type.ERROR,"Can not generate + " + outputModuleName + " + .recompile.nocache.js",e);
    throw new UnableToCompleteException();
  }
}

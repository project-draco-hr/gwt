{
  ZipFileClassPathEntry.clearCache();
  ResourceOracleImpl.clearCache();
  ModuleDefLoader.clearModuleCache();
  ResourceLoader resources=ResourceLoaders.forClassLoader(Thread.currentThread());
  resources=ResourceLoaders.forPathAndFallback(sourcePath,resources);
  this.resourceLoader.set(resources);
  ModuleDef moduleDef=ModuleDefLoader.loadFromResources(logger,originalModuleName,resources,true);
  if (IFrameLinker.class.isAssignableFrom(moduleDef.getActivePrimaryLinker())) {
    moduleDef.addLinker("xsiframe");
  }
  Class<? extends Linker> linker=moduleDef.getActivePrimaryLinker();
  if (!CrossSiteIframeLinker.class.isAssignableFrom(linker)) {
    logger.log(TreeLogger.ERROR,"linkers other than CrossSiteIFrameLinker aren't supported. Found: " + linker.getName());
    throw new UnableToCompleteException();
  }
  if (moduleDef.getProperties().find("devModeRedirectEnabled") == null) {
    throw new RuntimeException("devModeRedirectEnabled isn't set for module: " + moduleDef.getName());
  }
  overrideConfig(moduleDef,"devModeRedirectEnabled","false");
  overrideConfig(moduleDef,"installScriptJs","com/google/gwt/core/ext/linker/impl/installScriptDirect.js");
  overrideConfig(moduleDef,"installCode","false");
  maybeOverrideConfig(moduleDef,"includeBootstrapInPrimaryFragment","false");
  maybeOverrideConfig(moduleDef,"permutationsJs","com/google/gwt/core/ext/linker/impl/permutations.js");
  maybeOverrideConfig(moduleDef,"propertiesJs","com/google/gwt/core/ext/linker/impl/properties.js");
  maybeOverrideConfig(moduleDef,"computeScriptBaseJs","com/google/gwt/dev/codeserver/computeScriptBase.js");
  for (  Map.Entry<String,String> entry : bindingProperties.entrySet()) {
    String propName=entry.getKey();
    String propValue=entry.getValue();
    logger.log(TreeLogger.Type.INFO,"binding: " + propName + "="+ propValue);
    overrideBinding(moduleDef,propName,propValue);
  }
  overrideBinding(moduleDef,"compiler.useSourceMaps","true");
  return moduleDef;
}

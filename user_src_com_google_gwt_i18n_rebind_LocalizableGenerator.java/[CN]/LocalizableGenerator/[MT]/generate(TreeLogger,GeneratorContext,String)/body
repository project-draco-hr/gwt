{
  TypeOracle typeOracle=context.getTypeOracle();
  if (lastReloadCount != typeOracle.getReloadCount()) {
    ResourceFactory.clearCache();
    lastReloadCount=typeOracle.getReloadCount();
  }
  PropertyOracle propertyOracle=context.getPropertyOracle();
  String locale;
  try {
    locale=propertyOracle.getPropertyValue(logger,PROP_LOCALE);
  }
 catch (  BadPropertyValueException e) {
    logger.log(TreeLogger.ERROR,"Could not parse specified locale",e);
    throw new UnableToCompleteException();
  }
  JClassType targetClass;
  try {
    targetClass=typeOracle.getType(typeName);
  }
 catch (  NotFoundException e) {
    logger.log(TreeLogger.ERROR,"No such type",e);
    throw new UnableToCompleteException();
  }
  TreeLogger deprecatedLogger=logger.branch(TreeLogger.TRACE,"Checking for deprecated metadata",null);
  String generatedClass=AbstractLocalizableImplCreator.generateConstantOrMessageClass(logger,deprecatedLogger,context,locale,targetClass);
  if (generatedClass != null) {
    return generatedClass;
  }
  return linkageCreator.linkWithImplClass(logger,targetClass,locale);
}

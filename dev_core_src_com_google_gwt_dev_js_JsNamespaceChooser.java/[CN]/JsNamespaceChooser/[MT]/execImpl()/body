{
  List<JsStatement> globalStatements=jsprogram.getGlobalBlock().getStatements();
  List<JsStatement> after=Lists.newArrayList();
  for (  JsStatement before : globalStatements) {
    if (before instanceof JsVars) {
      for (      JsVar var : ((JsVars)before)) {
        JsStatement replacement=visitGlobalVar(var);
        if (replacement != null) {
          after.add(replacement);
        }
      }
      continue;
    }
    if (before instanceof JsExprStmt) {
      JsExprStmt expressionStatement=(JsExprStmt)before;
      if (expressionStatement.getExpression() instanceof JsFunction) {
        JsExpression transformedFunction=visitGlobalFunction((JsFunction)expressionStatement.getExpression());
        expressionStatement.setExpression(transformedFunction);
      }
    }
    after.add(before);
  }
  after.addAll(0,createNamespaceInitializers(packageToNamespace.values()));
  globalStatements.clear();
  globalStatements.addAll(after);
  new NameFixer().accept(jsprogram);
}

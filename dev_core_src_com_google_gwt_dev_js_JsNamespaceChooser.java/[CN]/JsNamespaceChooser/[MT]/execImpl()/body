{
  List<JsStatement> globalStatements=program.getGlobalBlock().getStatements();
  List<JsStatement> after=Lists.newArrayList();
  for (  JsStatement before : globalStatements) {
    if (before instanceof JsExprStmt) {
      JsExpression exp=((JsExprStmt)before).getExpression();
      if (exp instanceof JsFunction) {
        after.add(visitGlobalFunction((JsFunction)exp));
      }
 else {
        after.add(before);
      }
    }
 else     if (before instanceof JsVars) {
      for (      JsVar var : ((JsVars)before)) {
        JsStatement replacement=visitGlobalVar(var);
        if (replacement != null) {
          after.add(replacement);
        }
      }
    }
 else {
      after.add(before);
    }
  }
  after.addAll(0,createNamespaceInitializers(packageToNamespace.values()));
  globalStatements.clear();
  globalStatements.addAll(after);
  new NameFixer().accept(program);
}

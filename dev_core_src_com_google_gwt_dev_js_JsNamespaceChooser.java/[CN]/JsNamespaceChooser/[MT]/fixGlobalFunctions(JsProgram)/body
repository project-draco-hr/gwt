{
  boolean changed=false;
  List<JsStatement> statements=program.getGlobalBlock().getStatements();
  for (int i=0; i < statements.size(); i++) {
    JsStatement statement=statements.get(i);
    if (!(statement instanceof JsExprStmt)) {
      continue;
    }
    JsExprStmt parent=(JsExprStmt)statement;
    if (!(parent.getExpression() instanceof JsFunction)) {
      continue;
    }
    JsFunction func=(JsFunction)parent.getExpression();
    JsName name=func.getName();
    if (name == null || name.getNamespace() == null) {
      continue;
    }
    JsNameRef newName=name.makeRef(func.getSourceInfo());
    JsBinaryOperation assign=new JsBinaryOperation(func.getSourceInfo(),JsBinaryOperator.ASG,newName,func);
    statements.set(i,new JsExprStmt(parent.getSourceInfo(),assign));
    changed=true;
  }
  return changed;
}

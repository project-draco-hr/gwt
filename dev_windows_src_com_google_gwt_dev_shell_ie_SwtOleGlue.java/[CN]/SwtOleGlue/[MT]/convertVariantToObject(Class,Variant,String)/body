{
  short vt=varArg.getType();
  if ((vt == COM.VT_NULL) || (vt == COM.VT_EMPTY)) {
    return null;
  }
  if (vt == COM.VT_DISPATCH) {
    Object translated=translateDispatchArg(paramType,varArg);
    if (paramType.isAssignableFrom(translated.getClass())) {
      return translated;
    }
  }
switch (TypeInfo.classifyType(paramType)) {
case TypeInfo.TYPE_WRAP_BOOLEAN:
case TypeInfo.TYPE_PRIM_BOOLEAN:
    return Boolean.valueOf(varArg.getBoolean());
case TypeInfo.TYPE_WRAP_BYTE:
case TypeInfo.TYPE_PRIM_BYTE:
  return new Byte(varArg.getByte());
case TypeInfo.TYPE_WRAP_CHAR:
case TypeInfo.TYPE_PRIM_CHAR:
return new Character(varArg.getChar());
case TypeInfo.TYPE_WRAP_DOUBLE:
case TypeInfo.TYPE_PRIM_DOUBLE:
return new Double(varArg.getDouble());
case TypeInfo.TYPE_WRAP_FLOAT:
case TypeInfo.TYPE_PRIM_FLOAT:
return new Float(varArg.getFloat());
case TypeInfo.TYPE_WRAP_INT:
case TypeInfo.TYPE_PRIM_INT:
return new Integer(varArg.getInt());
case TypeInfo.TYPE_WRAP_LONG:
case TypeInfo.TYPE_PRIM_LONG:
return new Long((long)varArg.getDouble());
case TypeInfo.TYPE_WRAP_SHORT:
case TypeInfo.TYPE_PRIM_SHORT:
return new Short(varArg.getShort());
case TypeInfo.TYPE_WRAP_STRING:
return varArg.getString();
case TypeInfo.TYPE_USER:
if (varArg.getType() == COM.VT_BSTR) {
return varArg.getString();
}
break;
}
throw new IllegalArgumentException(msgPrefix + ": Cannot convert to type " + TypeInfo.getSourceRepresentation(paramType,""));
}

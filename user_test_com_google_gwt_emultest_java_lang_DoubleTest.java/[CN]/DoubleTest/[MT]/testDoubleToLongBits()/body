{
  assertEquals("NaN double->longbits test",Double.doubleToLongBits(Double.NaN),NAN_LONG_VALUE);
  assertEquals("posinf double->longbits test",Double.doubleToLongBits(Double.POSITIVE_INFINITY),POSINF_LONG_VALUE);
  assertEquals("neginf double->longbits test",Double.doubleToLongBits(Double.NEGATIVE_INFINITY),NEGINF_LONG_VALUE);
  assertEquals("maxvalue double->longbits test",Double.doubleToLongBits(Double.MAX_VALUE),MAXD_LONG_VALUE);
  assertEquals("minvalue double->longbits test",Double.doubleToLongBits(Double.MIN_VALUE),MIND_LONG_VALUE);
  assertEquals(Double.doubleToLongBits(Double.MIN_VALUE),MIND_LONG_VALUE);
  assertEquals("test1 double->longbits test",Double.doubleToLongBits(TEST1_DOUBLE_VALUE),TEST1_LONG_VALUE);
  assertEquals("-test1 double->longbits test",Double.doubleToLongBits(-TEST1_DOUBLE_VALUE),NEGTEST1_LONG_VALUE);
  assertEquals("minnormal double->longbits test",Double.doubleToLongBits(MIN_NORMAL),MINNORM_LONG_VALUE);
}

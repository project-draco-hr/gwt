{
  assertTrue("isNaN longbits->double test",Double.isNaN(Double.longBitsToDouble(NAN_LONG_VALUE)));
  assertEquals("posinf longbits->double test",Double.POSITIVE_INFINITY,Double.longBitsToDouble(POSINF_LONG_VALUE));
  assertEquals("neginf longbits->double test",Double.NEGATIVE_INFINITY,Double.longBitsToDouble(NEGINF_LONG_VALUE));
  assertEquals("maxval longbits->double test",Double.MAX_VALUE,Double.longBitsToDouble(MAXD_LONG_VALUE));
  assertEquals("minval longbits->double test",Double.MIN_VALUE,Double.longBitsToDouble(MIND_LONG_VALUE));
  assertEquals("test1 longbits->double test",TEST1_DOUBLE_VALUE,Double.longBitsToDouble(TEST1_LONG_VALUE));
  assertEquals("-test1 longbits->double test",-TEST1_DOUBLE_VALUE,Double.longBitsToDouble(NEGTEST1_LONG_VALUE));
  assertEquals("minnormal longbits->double test",MIN_NORMAL,Double.longBitsToDouble(MINNORM_LONG_VALUE));
}

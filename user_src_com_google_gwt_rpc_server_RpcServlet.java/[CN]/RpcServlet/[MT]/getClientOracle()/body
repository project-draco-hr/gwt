{
  String permutationStrongName=getPermutationStrongName();
  if (permutationStrongName == null) {
    throw new SecurityException("Blocked request without GWT permutation header (XSRF attack?)");
  }
  String basePath=getRequestModuleBasePath();
  if (basePath == null) {
    throw new SecurityException("Blocked request without GWT base path header (XSRF attack?)");
  }
  ClientOracle toReturn;
synchronized (clientOracleCache) {
    if (clientOracleCache.containsKey(permutationStrongName)) {
      toReturn=clientOracleCache.get(permutationStrongName).get();
      if (toReturn != null) {
        return toReturn;
      }
    }
    if ("HostedMode".equals(permutationStrongName)) {
      if (!allowHostedModeConnections()) {
        throw new SecurityException("Blocked Development Mode request");
      }
      toReturn=new HostedModeClientOracle();
    }
 else {
      InputStream in=findClientOracleData(basePath,permutationStrongName);
      try {
        toReturn=WebModeClientOracle.load(in);
      }
 catch (      IOException e) {
        throw new SerializationException("Could not load serialization policy for permutation " + permutationStrongName,e);
      }
    }
    clientOracleCache.put(permutationStrongName,new SoftReference<ClientOracle>(toReturn));
  }
  return toReturn;
}

{
  String curLine;
  Set<MethodMember> methods=classMember.getMethods();
  if (methods.size() > 0) {
    htmlOut.indentIn();
    htmlOut.indentIn();
    curNumIndents++;
  }
  for (  MethodMember method : methods) {
    curLine="<method ";
    htmlOut.printRawOpt(curLine);
    String jsAtt=" jsName=\"" + method.getJsName() + "\"";
    String curJsName=method.getJsName();
    if (curJsName == null) {
      jsAtt="";
    }
    Set<String> methodAliases=method.getJsAliases();
    Set<MethodMember> methodOverrides=method.getOverrides();
    Set<Member> methodDependencies=method.getDependencies();
    if ((methodOverrides.size() > 0) || (methodDependencies.size() > 0) || (methodAliases.size() > 0)) {
      curLine="id=\"" + method.getSourceName() + "\""+ jsAtt+ ">";
      htmlOut.printRawOpt(curLine);
      htmlOut.newlineOpt();
    }
 else {
      curLine="id=\"" + method.getSourceName() + "\""+ jsAtt+ "/>";
      htmlOut.printRawOpt(curLine);
      htmlOut.newlineOpt();
    }
    emitAliases(htmlOut,methodAliases);
    emitMethodOverrides(htmlOut,methodOverrides);
    emitMethodDependencies(htmlOut,methodDependencies);
    if ((methodOverrides.size() > 0) || (methodDependencies.size() > 0) || (methodAliases.size() > 0)) {
      curLine="</method>";
      htmlOut.printRawOpt(curLine);
      htmlOut.newlineOpt();
    }
  }
  if (methods.size() > 0) {
    htmlOut.indentOut();
    htmlOut.indentOut();
    curNumIndents--;
  }
}

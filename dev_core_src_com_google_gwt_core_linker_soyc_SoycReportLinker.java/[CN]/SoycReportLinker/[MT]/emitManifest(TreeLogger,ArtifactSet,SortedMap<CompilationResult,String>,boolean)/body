{
  ByteArrayOutputStream bytes=new ByteArrayOutputStream();
  OutputStreamWriter out;
  try {
    out=new OutputStreamWriter(compress ? new GZIPOutputStream(bytes) : bytes);
  }
 catch (  IOException e) {
    logger.log(TreeLogger.ERROR,"Unable to set up gzip stream",e);
    throw new UnableToCompleteException();
  }
  PrintWriter pw=new PrintWriter(out);
  HtmlTextOutput htmlOut=new HtmlTextOutput(pw,false);
  String curLine="<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
  htmlOut.printRaw(curLine);
  htmlOut.newline();
  curLine="<soyc-manifest>";
  htmlOut.printRaw(curLine);
  htmlOut.newline();
  htmlOut.indentIn();
  htmlOut.indentIn();
  for (  Map.Entry<CompilationResult,String> entry : partialPathsByResult.entrySet()) {
    curLine="<report href=\"" + entry.getValue() + "\">";
    htmlOut.printRaw(curLine);
    htmlOut.newline();
    htmlOut.indentIn();
    htmlOut.indentIn();
    for (    Map<SelectionProperty,String> map : entry.getKey().getPropertyMap()) {
      if (map.size() > 0) {
        curLine="<permutation>";
        htmlOut.printRaw(curLine);
        htmlOut.newline();
        htmlOut.indentIn();
        htmlOut.indentIn();
      }
 else {
        curLine="<permutation/>";
        htmlOut.printRaw(curLine);
        htmlOut.newline();
      }
      for (      Map.Entry<SelectionProperty,String> propertyEntry : map.entrySet()) {
        curLine="<property name=\"" + propertyEntry.getKey().getName() + "\" value=\""+ propertyEntry.getValue()+ "\"/>";
        htmlOut.printRaw(curLine);
        htmlOut.newline();
      }
      if (map.size() > 0) {
        htmlOut.indentOut();
        htmlOut.indentOut();
        curLine="</permutation>";
        htmlOut.printRaw(curLine);
        htmlOut.newline();
      }
    }
    htmlOut.indentOut();
    htmlOut.indentOut();
    curLine="</report>";
    htmlOut.printRaw(curLine);
    htmlOut.newline();
  }
  htmlOut.indentOut();
  htmlOut.indentOut();
  curLine="</soyc-manifest>";
  htmlOut.printRaw(curLine);
  htmlOut.newline();
  pw.close();
  Utility.close(out);
  SyntheticArtifact toReturn=emitBytes(logger,bytes.toByteArray(),"manifest.xml");
  return toReturn;
}

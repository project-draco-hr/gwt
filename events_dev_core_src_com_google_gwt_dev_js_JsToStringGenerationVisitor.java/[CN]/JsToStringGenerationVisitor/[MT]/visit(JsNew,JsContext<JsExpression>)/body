{
  _new();
  _space();
  JsExpression ctorExpr=x.getConstructorExpression();
  boolean needsParens=JsConstructExpressionVisitor.exec(ctorExpr);
  if (needsParens) {
    _lparen();
  }
  accept(ctorExpr);
  if (needsParens) {
    _rparen();
  }
  _lparen();
  boolean sep=false;
  for (  Object element : x.getArguments()) {
    JsExpression arg=(JsExpression)element;
    sep=_sepCommaOptSpace(sep);
    _parenPushIfCommaExpr(arg);
    accept(arg);
    _parenPopIfCommaExpr(arg);
  }
  _rparen();
  return false;
}

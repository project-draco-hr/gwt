{
  if (isNullOrUndefined(jso,i)) {
    return null;
  }
  try {
    if (Boolean.class.equals(type)) {
      return (V)Boolean.valueOf(getBoolean(jso,i));
    }
    if (Character.class.equals(type)) {
      return (V)Character.valueOf(String.valueOf(get(jso,i)).charAt(0));
    }
    if (Byte.class.equals(type)) {
      return (V)Byte.valueOf((byte)getInt(jso,i));
    }
    if (Short.class.equals(type)) {
      return (V)Short.valueOf((short)getInt(jso,i));
    }
    if (Float.class.equals(type)) {
      return (V)Float.valueOf((float)getDouble(jso,i));
    }
    if (BigInteger.class.equals(type)) {
      return (V)new BigDecimal((String)get(jso,i)).toBigInteger();
    }
    if (BigDecimal.class.equals(type)) {
      return (V)new BigDecimal((String)get(jso,i));
    }
    if (Integer.class.equals(type)) {
      return (V)Integer.valueOf(getInt(jso,i));
    }
    if (Long.class.equals(type)) {
      return (V)Long.valueOf((String)get(jso,i));
    }
    if (Double.class.equals(type)) {
      if (!isDefined(jso,i)) {
        return (V)new Double(0.0);
      }
      return (V)Double.valueOf(getDouble(jso,i));
    }
    if (Date.class.equals(type)) {
      double millis=new Date().getTime();
      if (isDefined(jso,i)) {
        millis=Double.parseDouble((String)get(jso,i));
      }
      if (GWT.isScript()) {
        return (V)dateForDouble(millis);
      }
 else {
        return (V)new Date((long)millis);
      }
    }
  }
 catch (  final Exception ex) {
    throw new IllegalStateException("Index " + i + " "+ "has invalid "+ " value "+ get(jso,i)+ " for type "+ type);
  }
  if (type.isEnum()) {
    Enum<?>[] values=(Enum[])type.getEnumConstants();
    int ordinal=getInt(jso,i);
    for (    Enum<?> value : values) {
      if (ordinal == value.ordinal()) {
        return (V)value;
      }
    }
  }
  if (String.class == type) {
    return (V)get(jso,i);
  }
  return null;
}

{
  Coder boolCoder=AutoBeanCodexImpl.valueCoder(Boolean.class);
  Splittable s=StringQuoter.createIndexed();
  bool(false).assign(s,0);
  assertFalse("0 should not be null",s.isNull(0));
  assertTrue("s[0] should be a boolean",s.get(0).isBoolean());
  assertFalse("s[0] should be false",s.get(0).asBoolean());
  assertNotNull("Null decode",ValueCodex.decode(Boolean.class,s.get(0)));
  Object decodedBoolean=boolCoder.decode(testState,s.get(0));
  assertNotNull("decode should not return null",decodedBoolean);
  assertFalse("decoded value should be false",(Boolean)decodedBoolean);
  bool(true).assign(s,1);
  assertTrue("s[1] should be a boolean",s.get(1).isBoolean());
  assertTrue("s[1] should be true",s.get(1).asBoolean());
  assertTrue("boolCoder 1",(Boolean)boolCoder.decode(testState,s.get(1)));
  Splittable.NULL.assign(s,2);
  assertTrue("3 should be null",s.isNull(3));
  assertEquals("payload","[false,true,null]",s.getPayload());
  List<Boolean> boolList=new SplittableList<Boolean>(s,boolCoder,testState);
  assertEquals("boolList",Arrays.<Boolean>asList(false,true,null),boolList);
}

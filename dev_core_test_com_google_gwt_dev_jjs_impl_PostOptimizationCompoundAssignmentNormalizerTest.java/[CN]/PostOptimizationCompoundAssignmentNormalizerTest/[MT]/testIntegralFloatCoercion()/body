{
  optimize("void","long x=2L; float d=3; x += d;").into("long x=2L; float d=3; x = (long)((float)x + d);");
  optimize("void","long x=2L; long d=3L; x += d;").into("long x=2L; long d=3L; x = x + d;");
  optimize("void","int x=2; int d=3; x += d;").into("int x=2; int d=3; x += d;");
  optimize("void","int x=2; short d=3; x += d;").into("int x=2; short d=3; x += d;");
  optimize("void","int x=2; long d=3L; x += d;").into("int x=2; long d=3L; x += (int)d;");
  optimize("void","int x=2; float d=3.0f; x += d;").into("int x=2; float d=3.0f; x = (int)(x + d);");
  optimize("void","int x=2; double d=3.0; x += d;").into("int x=2; double d=3.0; x = (int)(x + d);");
  optimize("void","float x=2; double d=3.0; x += d;").into("float x=2; double d=3.0; x += d;");
}

{
  addSnippetImport("jsinterop.annotations.JsType");
  addSnippetImport("jsinterop.annotations.JsMethod");
  addSnippetImport("jsinterop.annotations.JsProperty");
  addSnippetImport("jsinterop.annotations.JsPackage");
  addSnippetClassDecl("@JsType(namespace = JsPackage.GLOBAL) public static class Buggy {","   @JsMethod(namespace = JsPackage.GLOBAL) public static void m() {}","   @JsProperty(namespace = JsPackage.GLOBAL) public static int n;","   @JsMethod(namespace = JsPackage.GLOBAL, name = \"a.b\") public static native void o();","}","@JsType(isNative = true, namespace = JsPackage.GLOBAL, name = \"a.c\")","public static class NativeOnGlobalNamespace {","   @JsMethod(namespace = JsPackage.GLOBAL, name = \"a.d\") static native void o();","   @JsMethod(namespace = JsPackage.GLOBAL, name = \"a.e\") static native void getP();","   @JsProperty(namespace = JsPackage.GLOBAL, name = \"a.f\") public static int n;","}","@JsType(isNative = true, namespace = \"<window>\", name = \"a.g\")","public static class NativeOnWindowNamespace {","   @JsMethod(namespace = \"<window>\", name = \"a.h\") static native void q();","   @JsMethod(namespace = \"<window>\", name = \"a.i\") static native void getR();","   @JsProperty(namespace = \"<window>\", name = \"a.j\") public static int s;","}");
  assertBuggySucceeds();
}

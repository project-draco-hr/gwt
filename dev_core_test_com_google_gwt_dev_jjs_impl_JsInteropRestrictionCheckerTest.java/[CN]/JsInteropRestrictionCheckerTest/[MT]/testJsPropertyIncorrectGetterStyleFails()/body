{
  addSnippetImport("jsinterop.annotations.JsType");
  addSnippetImport("jsinterop.annotations.JsProperty");
  addSnippetClassDecl("@JsType","public interface Buggy {","  @JsProperty int isX();","  @JsProperty int getY(int x);","  @JsProperty void getZ();","  @JsProperty void setX(int x, int y);","  @JsProperty void setY();","  @JsProperty int setZ(int z);","}");
  assertBuggyFails("Line 10: There needs to be single parameter and void return type for the JsProperty " + "setter 'void EntryPoint.Buggy.setX(int, int)'.","Line 8: There cannot be void return type or any parameters for the JsProperty getter " + "'int EntryPoint.Buggy.getY(int)'.","Line 9: There cannot be void return type or any parameters for the JsProperty getter " + "'void EntryPoint.Buggy.getZ()'.","Line 7: There cannot be non-boolean return for the JsProperty 'is' " + "getter 'int EntryPoint.Buggy.isX()'.","Line 11: There needs to be single parameter and void return type for the JsProperty " + "setter 'void EntryPoint.Buggy.setY()'.","Line 12: There needs to be single parameter and void return type for the JsProperty " + "setter 'int EntryPoint.Buggy.setZ(int)'.","Line 12: The setter and getter for JsProperty 'z' in type 'EntryPoint.Buggy' must " + "have consistent types.");
}

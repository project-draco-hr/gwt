{
  addSnippetImport("jsinterop.annotations.JsType");
  addSnippetImport("jsinterop.annotations.JsMethod");
  addSnippetImport("jsinterop.annotations.JsProperty");
  addSnippetClassDecl("@JsType(namespace = \"a.b.\") public static class Buggy {","   @JsMethod(namespace = \"34s\") public static void m() {}","   @JsProperty(namespace = \"s^\") public static int  n;","   @JsMethod(namespace = \"\") public static void o() {}","   @JsProperty(namespace = \"\") public int p;","   @JsMethod(namespace = \"a\") public void q() {}","}","@JsType(namespace = \"<window>\") public static class JsTypeOnWindow{","   @JsProperty(namespace = \"<window>\") public static int r;","   @JsMethod(namespace = \"<window>\") public static  void s() {}","}");
  assertBuggyFails("Line 6: 'EntryPoint.Buggy' has invalid namespace 'a.b.'.","Line 7: 'void EntryPoint.Buggy.m()' has invalid namespace '34s'.","Line 8: 'int EntryPoint.Buggy.n' has invalid namespace 's^'.","Line 9: 'void EntryPoint.Buggy.o()' cannot have an empty namespace.","Line 10: Instance member 'int EntryPoint.Buggy.p' cannot declare a namespace.","Line 11: Instance member 'void EntryPoint.Buggy.q()' cannot declare a namespace.","Line 13: '<window>' can only be used as a namespace of native types and members.","Line 14: '<window>' can only be used as a namespace of native types and members.","Line 15: '<window>' can only be used as a namespace of native types and members.");
}

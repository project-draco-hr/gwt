{
  Element elem=createAttachedDivElement();
  BidiUtils.setDirectionOnElement(elem,Direction.LTR);
  label=Label.wrap(elem);
  label.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_LEFT);
  assertAlign("horizontal alignment was set to left by " + "setHorizontalAlignment, but is not",HasHorizontalAlignment.ALIGN_LEFT);
  label.setAutoHorizontalAlignment(null);
  assertEquals("text-align is not empty after " + "setAutoHorizontalAlignment(null)","",label.getElement().getStyle().getTextAlign());
  label.setAutoHorizontalAlignment(HasHorizontalAlignment.ALIGN_RIGHT);
  assertAlign("horizontal alignment was set to right by " + "setAutoHorizontalAlignment, but is not",HasHorizontalAlignment.ALIGN_RIGHT);
  label.setText(IW_TEXT,Direction.RTL);
  label.setAutoHorizontalAlignment(HasAutoHorizontalAlignment.ALIGN_CONTENT_END);
  assertAlign("automatic horizontal alignment was set to ALIGN_CONTENT_END," + " content was declared RTL",HasHorizontalAlignment.ALIGN_LEFT,HasAutoHorizontalAlignment.ALIGN_CONTENT_END);
  label.setText(EN_TEXT);
  assertAlign("automatic horizontal alignment was set to ALIGN_CONTENT_END," + " content direction was reset to the original LTR after calling " + "setText with no direction argument",HasHorizontalAlignment.ALIGN_RIGHT,HasAutoHorizontalAlignment.ALIGN_CONTENT_END);
  label.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_JUSTIFY);
  assertAlign("horizontal alignment was set to justify by " + "setHorizontalAlignment, but is not",HasHorizontalAlignment.ALIGN_JUSTIFY);
}

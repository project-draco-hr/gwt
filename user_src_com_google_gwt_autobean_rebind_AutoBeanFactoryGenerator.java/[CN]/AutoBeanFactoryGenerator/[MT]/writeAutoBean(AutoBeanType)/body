{
  PrintWriter pw=context.tryCreate(logger,type.getPackageNome(),type.getSimpleSourceName());
  if (pw == null) {
    return;
  }
  ClassSourceFileComposerFactory factory=new ClassSourceFileComposerFactory(type.getPackageNome(),type.getSimpleSourceName());
  factory.setSuperclass(AbstractAutoBean.class.getCanonicalName() + "<" + type.getPeerType().getQualifiedSourceName()+ ">");
  SourceWriter sw=factory.createSourceWriter(context,pw);
  writeShim(sw,type);
  sw.println("{ %s.set(shim, %s.class.getName(), this); }",WeakMapping.class.getCanonicalName(),AutoBean.class.getCanonicalName());
  if (type.isSimpleBean()) {
    sw.println("public %s() {}",type.getSimpleSourceName());
  }
  sw.println("public %1$s(%1$s toClone, boolean deep) {",type.getSimpleSourceName());
  sw.indentln("super(toClone, deep);");
  sw.println("}");
  sw.println("public %s(%s wrapped) {",type.getSimpleSourceName(),type.getPeerType().getQualifiedSourceName());
  sw.indentln("super(wrapped);");
  sw.println("}");
  sw.println("public %s as() {return shim;}",type.getPeerType().getQualifiedSourceName());
  sw.println("public %s clone(boolean deep) {",type.getQualifiedSourceName());
  sw.indentln("return new %s(this, deep);",type.getSimpleSourceName());
  sw.println("}");
  sw.println("public Class<%1$s> getType() {return %1$s.class;}",type.getPeerType().getQualifiedSourceName());
  if (type.isSimpleBean()) {
    writeCreateSimpleBean(sw,type);
  }
  writeTraversal(sw,type);
  sw.commit(logger);
}

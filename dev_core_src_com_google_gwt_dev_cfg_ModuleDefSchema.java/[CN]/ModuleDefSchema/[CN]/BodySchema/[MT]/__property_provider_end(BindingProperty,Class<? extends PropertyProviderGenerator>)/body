{
  if (generator != null && !PropertyProviderGenerator.class.isAssignableFrom(generator)) {
    logger.log(TreeLogger.ERROR,"A property provider generator must " + "extend " + PropertyProviderGenerator.class.getName(),null);
    throw new UnableToCompleteException();
  }
  ScriptSchema childSchema=((ScriptSchema)fChild);
  String script=childSchema.getScript();
  property.setProviderGenerator(generator);
  if (script == null) {
    if (generator == null) {
      logger.log(TreeLogger.ERROR,"Property providers must specify a " + "JavaScript body or a provider generator",null);
      throw new UnableToCompleteException();
    }
  }
 else {
    int lineNumber=childSchema.getStartLineNumber();
    JsFunction fn=parseJsBlock(lineNumber,script);
    property.setProvider(new PropertyProvider(fn.getBody().toSource()));
  }
}

{
  TypeOracle typeOracle=ctx.getTypeOracle();
  assert(typeOracle != null);
  JClassType remoteService=typeOracle.findType(requestedClass);
  if (remoteService == null) {
    logger.log(TreeLogger.ERROR,"Unable to find metadata for type '" + requestedClass + "'",null);
    throw new UnableToCompleteException();
  }
  if (remoteService.isInterface() == null) {
    logger.log(TreeLogger.ERROR,remoteService.getQualifiedSourceName() + " is not an interface",null);
    throw new UnableToCompleteException();
  }
  ProxyCreator proxyCreator=createProxyCreator(remoteService);
  TreeLogger proxyLogger=logger.branch(TreeLogger.DEBUG,"Generating client proxy for remote service interface '" + remoteService.getQualifiedSourceName() + "'",null);
  String returnTypeName=proxyCreator.create(proxyLogger,ctx);
  if (ctx.isGeneratorResultCachingEnabled()) {
    CachedClientDataMap clientData=new CachedClientDataMap();
    proxyCreator.updateResultCacheData(clientData);
    return new RebindResult(RebindStatus.USE_PARTIAL_CACHED,returnTypeName,clientData);
  }
 else {
    return new RebindResult(RebindStatus.USE_ALL_NEW_WITH_NO_CACHING,returnTypeName);
  }
}

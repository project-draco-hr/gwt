{
  AbstractDataProvider<String> provider=createDataProvider();
{
    Range[] ranges=provider.getRanges();
    assertEquals(0,ranges.length);
  }
{
    MockHasData<String> display0=new MockHasData<String>();
    display0.setVisibleRange(0,10);
    provider.addDataDisplay(display0);
    Range[] ranges=provider.getRanges();
    assertEquals(1,ranges.length);
    assertEquals(new Range(0,10),ranges[0]);
  }
{
    MockHasData<String> display1=new MockHasData<String>();
    display1.setVisibleRange(3,10);
    provider.addDataDisplay(display1);
    MockHasData<String> display2=new MockHasData<String>();
    display2.setVisibleRange(30,35);
    provider.addDataDisplay(display2);
    Set<Range> ranges=new HashSet<Range>();
    for (    Range range : provider.getRanges()) {
      ranges.add(range);
    }
    assertEquals(3,ranges.size());
    assertTrue(ranges.contains(new Range(0,10)));
    assertTrue(ranges.contains(new Range(3,10)));
    assertTrue(ranges.contains(new Range(30,35)));
  }
}

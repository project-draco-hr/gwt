{
  if (clazzBinding.isInterface() || clazzBinding.isAbstract()) {
    return;
  }
  if (!typesWithBridges.add(clazzBinding)) {
    return;
  }
  if (clazzBinding.superclass() != null) {
    addBridgeMethods(clazzBinding.superclass(),program,typesWithBridges);
  }
  JClassType clazz=(JClassType)typeMap.get(clazzBinding);
  for (  MethodBinding imethBinding : findInterfaceMethods(clazzBinding)) {
    JMethod interfmeth=(JMethod)typeMap.get(imethBinding);
    JMethod implmeth=(JMethod)typeMap.get(findMethodImplementing(imethBinding,clazzBinding));
    assert(!implmeth.isStatic());
    if (!implmeth.overrides.contains(interfmeth)) {
      if (JTypeOracle.methodsDoMatch(interfmeth,implmeth)) {
        continue;
      }
      if (inheritsMethodWithIdenticalSignature(clazz,interfmeth)) {
        continue;
      }
      createBridgeMethod(program,clazz,interfmeth,implmeth);
    }
  }
}

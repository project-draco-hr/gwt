{
  if (args == null) {
    args=new Expression[0];
  }
  TypeBinding[] params=binding.parameters;
  int n=params.length;
  if (binding.isVarargs()) {
    --n;
  }
  if (args.length < n) {
    assert(call.getTarget().getName().equals("Enum"));
    return;
  }
  ArrayList<JExpression> callArgs=call.getArgs();
  for (int i=0; i < n; ++i) {
    callArgs.add(dispProcessExpression(args[i]));
  }
  if (binding.isVarargs()) {
    JArrayType type=(JArrayType)typeMap.get(params[n]);
    if (args.length == n + 1) {
      JType lastArgType=(JType)typeMap.get(args[n].resolvedType);
      if (lastArgType instanceof JArrayType) {
        JArrayType lastArgArrayType=(JArrayType)lastArgType;
        if (lastArgArrayType.getDims() == type.getDims()) {
          callArgs.add(dispProcessExpression(args[n]));
          return;
        }
      }
    }
    JNewArray newArray=new JNewArray(program,call.getSourceInfo(),type);
    newArray.initializers=new ArrayList<JExpression>();
    for (int i=n; i < args.length; ++i) {
      newArray.initializers.add(dispProcessExpression(args[i]));
    }
    callArgs.add(newArray);
  }
}

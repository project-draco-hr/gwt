{
  JExpression[] args=new JExpression[jdtArgs == null ? 0 : jdtArgs.length];
  for (int i=0; i < args.length; ++i) {
    args[i]=dispProcessExpression(jdtArgs[i]);
  }
  TypeBinding[] params=binding.parameters;
  int n=params.length;
  if (binding.isVarargs()) {
    --n;
  }
  if (args.length < n) {
    assert(call.getTarget().getName().equals("Enum"));
    return;
  }
  for (int i=0; i < n; ++i) {
    call.addArg(args[i]);
  }
  if (binding.isVarargs()) {
    JArrayType lastParamType=(JArrayType)typeMap.get(params[n]);
    if (args.length == n + 1) {
      if (program.typeOracle.canTriviallyCast(args[n].getType(),lastParamType)) {
        call.addArg(args[n]);
        return;
      }
    }
    List<JExpression> initializers=new ArrayList<JExpression>();
    for (int i=n; i < args.length; ++i) {
      initializers.add(args[i]);
    }
    JNewArray newArray=JNewArray.createInitializers(program,call.getSourceInfo(),lastParamType,initializers);
    call.addArg(newArray);
  }
}

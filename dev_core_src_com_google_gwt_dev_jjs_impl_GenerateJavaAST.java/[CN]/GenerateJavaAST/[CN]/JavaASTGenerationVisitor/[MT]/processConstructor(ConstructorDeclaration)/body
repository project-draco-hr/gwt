{
  JMethod ctor=(JMethod)fTypeMap.get(x.binding);
  fCurrentMethod=ctor;
  fCurrentMethodScope=x.scope;
  JMethodCall call=null;
  ExplicitConstructorCall ctorCall=x.constructorCall;
  if (ctorCall != null) {
    call=processExpression(ctorCall);
  }
  boolean hasExplicitThis=(ctorCall != null) && !ctorCall.isSuperAccess();
  JClassType enclosingType=(JClassType)ctor.getEnclosingType();
  JMethod clinitMethod=(JMethod)enclosingType.methods.get(0);
  JMethodCall clinitCall=new JMethodCall(program,null,clinitMethod);
  ctor.body.statements.add(new JExpressionStatement(program,clinitCall));
  if (!hasExplicitThis) {
    ReferenceBinding declaringClass=x.binding.declaringClass;
    if (declaringClass instanceof NestedTypeBinding) {
      Iterator paramIt=ctor.params.iterator();
      NestedTypeBinding nestedBinding=(NestedTypeBinding)declaringClass;
      if (nestedBinding.enclosingInstances != null) {
        for (int i=0; i < nestedBinding.enclosingInstances.length; ++i) {
          SyntheticArgumentBinding arg=nestedBinding.enclosingInstances[i];
          JParameter param=(JParameter)paramIt.next();
          if (arg.matchingField != null) {
            JField field=(JField)fTypeMap.get(arg);
            ctor.body.statements.add(program.createAssignmentStmt(createVariableRef(field),createVariableRef(param)));
          }
        }
      }
      if (nestedBinding.outerLocalVariables != null) {
        for (int i=0; i < nestedBinding.outerLocalVariables.length; ++i) {
          SyntheticArgumentBinding arg=nestedBinding.outerLocalVariables[i];
          JParameter param=(JParameter)paramIt.next();
          JField field=(JField)fTypeMap.get(arg);
          ctor.body.statements.add(program.createAssignmentStmt(createVariableRef(field),createVariableRef(param)));
        }
      }
    }
  }
  if (call != null) {
    ctor.body.statements.add(new JExpressionStatement(program,call));
  }
  JExpression thisRef=createThisRef(enclosingType);
  if (!hasExplicitThis) {
    JMethod initMethod=(JMethod)enclosingType.methods.get(1);
    JMethodCall initCall=new JMethodCall(program,thisRef,initMethod);
    ctor.body.statements.add(new JExpressionStatement(program,initCall));
  }
  if (x.statements != null) {
    for (int i=0, n=x.statements.length; i < n; ++i) {
      Statement origStmt=x.statements[i];
      JStatement jstmt=dispProcessStatement(origStmt);
      if (jstmt != null) {
        ctor.body.statements.add(jstmt);
      }
    }
  }
  fCurrentMethodScope=null;
  fCurrentMethod=null;
  ctor.body.statements.add(new JReturnStatement(program,thisRef));
}

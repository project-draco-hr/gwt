{
  JMethod ctor=(JMethod)typeMap.get(x.binding);
  try {
    SourceInfo info=ctor.body.getSourceInfo();
    currentMethod=ctor;
    currentMethodScope=x.scope;
    JMethodCall call=null;
    ExplicitConstructorCall ctorCall=x.constructorCall;
    if (ctorCall != null) {
      call=(JMethodCall)dispatch("processExpression",ctorCall);
    }
    boolean hasExplicitThis=(ctorCall != null) && !ctorCall.isSuperAccess();
    JClassType enclosingType=(JClassType)ctor.getEnclosingType();
    JMethod clinitMethod=(JMethod)enclosingType.methods.get(0);
    JMethodCall clinitCall=new JMethodCall(program,info,null,clinitMethod);
    ctor.body.statements.add(new JExpressionStatement(program,info,clinitCall));
    if (!hasExplicitThis) {
      ReferenceBinding declaringClass=x.binding.declaringClass;
      if (declaringClass instanceof NestedTypeBinding) {
        Iterator paramIt=getSyntheticsIterator(ctor);
        NestedTypeBinding nestedBinding=(NestedTypeBinding)declaringClass;
        if (nestedBinding.enclosingInstances != null) {
          for (int i=0; i < nestedBinding.enclosingInstances.length; ++i) {
            SyntheticArgumentBinding arg=nestedBinding.enclosingInstances[i];
            JParameter param=(JParameter)paramIt.next();
            if (arg.matchingField != null) {
              JField field=(JField)typeMap.get(arg);
              ctor.body.statements.add(program.createAssignmentStmt(info,createVariableRef(info,field),createVariableRef(info,param)));
            }
          }
        }
        if (nestedBinding.outerLocalVariables != null) {
          for (int i=0; i < nestedBinding.outerLocalVariables.length; ++i) {
            SyntheticArgumentBinding arg=nestedBinding.outerLocalVariables[i];
            JParameter param=(JParameter)paramIt.next();
            JField field=(JField)typeMap.get(arg);
            ctor.body.statements.add(program.createAssignmentStmt(info,createVariableRef(info,field),createVariableRef(info,param)));
          }
        }
      }
    }
    if (call != null) {
      ctor.body.statements.add(new JExpressionStatement(program,makeSourceInfo(ctorCall),call));
    }
    JExpression thisRef=createThisRef(info,enclosingType);
    if (!hasExplicitThis) {
      JMethod initMethod=(JMethod)enclosingType.methods.get(1);
      JMethodCall initCall=new JMethodCall(program,info,thisRef,initMethod);
      ctor.body.statements.add(new JExpressionStatement(program,info,initCall));
    }
    if (x.statements != null) {
      for (int i=0, n=x.statements.length; i < n; ++i) {
        Statement origStmt=x.statements[i];
        JStatement jstmt=dispProcessStatement(origStmt);
        if (jstmt != null) {
          ctor.body.statements.add(jstmt);
        }
      }
    }
    currentMethodScope=null;
    currentMethod=null;
    ctor.body.statements.add(new JReturnStatement(program,null,thisRef));
  }
 catch (  Throwable e) {
    throw translateException(ctor,e);
  }
}

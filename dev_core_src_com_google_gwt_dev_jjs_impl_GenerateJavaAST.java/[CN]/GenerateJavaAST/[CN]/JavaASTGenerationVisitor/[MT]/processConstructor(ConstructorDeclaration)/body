{
  JConstructor ctor=(JConstructor)typeMap.get(x.binding);
  try {
    processHasAnnotations(ctor,x.annotations);
    SourceInfo info=ctor.getSourceInfo();
    currentMethod=ctor;
    currentMethodBody=ctor.getBody();
    currentMethodScope=x.scope;
    JMethodCall superOrThisCall=null;
    ExplicitConstructorCall ctorCall=x.constructorCall;
    if (ctorCall != null) {
      superOrThisCall=(JMethodCall)dispatch("processExpression",ctorCall);
    }
    boolean hasExplicitThis=(ctorCall != null) && !ctorCall.isSuperAccess();
    JClassType enclosingType=ctor.getEnclosingType();
    JBlock block=currentMethodBody.getBlock();
    if (!hasExplicitThis) {
      ReferenceBinding declaringClass=x.binding.declaringClass;
      if (declaringClass instanceof NestedTypeBinding) {
        Iterator<JParameter> paramIt=currentMethod.getParams().iterator();
        NestedTypeBinding nestedBinding=(NestedTypeBinding)declaringClass;
        if (nestedBinding.enclosingInstances != null) {
          for (          SyntheticArgumentBinding arg : nestedBinding.enclosingInstances) {
            JParameter param=paramIt.next();
            if (arg.matchingField != null) {
              JField field=(JField)typeMap.get(arg);
              block.addStmt(JProgram.createAssignmentStmt(info,createVariableRef(info,field),createVariableRef(info,param)));
            }
          }
        }
        paramIt=getSyntheticLocalsIterator();
        if (nestedBinding.outerLocalVariables != null) {
          for (          SyntheticArgumentBinding arg : nestedBinding.outerLocalVariables) {
            JParameter param=paramIt.next();
            JField field=(JField)typeMap.get(arg);
            block.addStmt(JProgram.createAssignmentStmt(info,createVariableRef(info,field),createVariableRef(info,param)));
          }
        }
      }
    }
    if (enclosingType.isEnumOrSubclass() != null) {
      assert(superOrThisCall != null);
      JVariableRef enumNameRef=createVariableRef(superOrThisCall.getSourceInfo(),ctor.getParams().get(0));
      superOrThisCall.addArg(0,enumNameRef);
      JVariableRef enumOrdinalRef=createVariableRef(superOrThisCall.getSourceInfo(),ctor.getParams().get(1));
      superOrThisCall.addArg(1,enumOrdinalRef);
    }
    if (superOrThisCall != null) {
      superOrThisCall.setStaticDispatchOnly();
      block.addStmt(superOrThisCall.makeStatement());
    }
    JExpression thisRef=createThisRef(info,enclosingType);
    if (!hasExplicitThis) {
      JMethod initMethod=enclosingType.getMethods().get(1);
      JMethodCall initCall=new JMethodCall(info,thisRef,initMethod);
      block.addStmt(initCall.makeStatement());
    }
    block.addStmts(processStatements(x.statements));
    currentMethodScope=null;
    currentMethod=null;
  }
 catch (  Throwable e) {
    throw translateException(ctor,e);
  }
}

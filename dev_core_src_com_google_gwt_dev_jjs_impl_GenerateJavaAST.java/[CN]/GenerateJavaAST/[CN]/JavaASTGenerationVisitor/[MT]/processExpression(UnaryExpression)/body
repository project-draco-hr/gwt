{
  SourceInfo info=makeSourceInfo(x);
  JUnaryOperator op;
  int operator=((x.bits & UnaryExpression.OperatorMASK) >> UnaryExpression.OperatorSHIFT);
switch (operator) {
case UnaryExpression.MINUS:
    op=JUnaryOperator.NEG;
  break;
case UnaryExpression.NOT:
op=JUnaryOperator.NOT;
break;
case UnaryExpression.PLUS:
return dispProcessExpression(x.expression);
case UnaryExpression.TWIDDLE:
op=JUnaryOperator.BIT_NOT;
break;
default :
throw new InternalCompilerException("Unexpected operator for unary expression");
}
JPrefixOperation preOp=new JPrefixOperation(program,info,op,dispProcessExpression(x.expression));
return preOp;
}

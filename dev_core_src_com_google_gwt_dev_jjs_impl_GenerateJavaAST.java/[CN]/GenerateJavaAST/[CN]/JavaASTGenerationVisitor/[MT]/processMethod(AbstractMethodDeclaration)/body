{
  MethodBinding b=x.binding;
  JMethod method=(JMethod)fTypeMap.get(b);
  if (b.isImplementing() || b.isOverriding()) {
    tryFindUpRefs(method,b);
  }
  if (x.isNative()) {
    processNativeMethod(x,(JsniMethod)method);
    return;
  }
  fCurrentMethod=method;
  fCurrentMethodScope=x.scope;
  if (x.statements != null) {
    for (int i=0, n=x.statements.length; i < n; ++i) {
      Statement origStmt=x.statements[i];
      JStatement jstmt=dispProcessStatement(origStmt);
      if (jstmt != null) {
        method.body.statements.add(jstmt);
      }
    }
  }
  fCurrentMethodScope=null;
  fCurrentMethod=null;
}

{
  MethodBinding b=x.binding;
  JMethod method=(JMethod)typeMap.get(b);
  try {
    if (method.canBePolymorphic()) {
      findUpRef(method);
    }
    if (x.isNative()) {
      processNativeMethod(x,(JsniMethodBody)method.getBody());
      return;
    }
    currentMethod=method;
    currentMethodBody=(JMethodBody)method.getBody();
    currentMethodScope=x.scope;
    if (currentMethodBody != null) {
      currentMethodBody.getBlock().addStmts(processStatements(x.statements));
    }
    currentMethodScope=null;
    currentMethodBody=null;
    currentMethod=null;
  }
 catch (  Throwable e) {
    throw translateException(method,e);
  }
}

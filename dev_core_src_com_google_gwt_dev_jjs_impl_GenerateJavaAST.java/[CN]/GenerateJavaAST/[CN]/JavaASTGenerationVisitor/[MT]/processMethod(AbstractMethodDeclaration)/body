{
  MethodBinding b=x.binding;
  JMethod method=(JMethod)typeMap.get(b);
  try {
    if (!b.isStatic() && (b.isImplementing() || b.isOverriding())) {
      tryFindUpRefs(method,b);
    }
    if (x.isNative()) {
      processNativeMethod(x,(JsniMethodBody)method.getBody());
      return;
    }
    currentMethod=method;
    currentMethodBody=(JMethodBody)method.getBody();
    currentMethodScope=x.scope;
    if (x.statements != null) {
      for (int i=0, n=x.statements.length; i < n; ++i) {
        Statement origStmt=x.statements[i];
        JStatement jstmt=dispProcessStatement(origStmt);
        if (jstmt != null) {
          currentMethodBody.getBlock().addStmt(jstmt);
        }
      }
    }
    currentMethodScope=null;
    currentMethodBody=null;
    currentMethod=null;
  }
 catch (  Throwable e) {
    throw translateException(method,e);
  }
}

def test_math_expression_syntax(self):
    operator = LABEL('op', OR('+', '-', '/', '*'))
    literal = LABEL('num', re.compile('[0-9]+'))

    def _exp():
        return MANY(OR(literal, [TOKEN('('), _exp, TOKEN(')')]), separator=operator)
    self._run_test(grammar=_exp, text='(1-2)+3*((4*5)*6)+(7+8/9)-10', expected=[[('num', '1'), ('op', '-'), ('num', '2')], ('op', '+'), ('num', '3'), ('op', '*'), [[('num', '4'), ('op', '*'), ('num', '5')], ('op', '*'), ('num', '6')], ('op', '+'), [('num', '7'), ('op', '+'), ('num', '8'), ('op', '/'), ('num', '9')], ('op', '-'), ('num', '10')])

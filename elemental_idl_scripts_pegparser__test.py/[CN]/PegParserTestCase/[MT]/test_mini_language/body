def test_mini_language(self):

    def name():
        return re.compile('[a-z]+')

    def var_decl():
        return ['var', name, ';']

    def func_invoke():
        return [name, '(', ')', ';']

    def func_body():
        return MANY(OR(var_decl, func_invoke))

    def func_decl():
        return ['function', name, '(', ')', '{', func_body, '}']

    def args():
        return MANY(name, ',')

    def program():
        return MANY(OR(var_decl, func_decl))
    self._run_test(grammar=program, whitespace_rule=OR('\n', ' '), strings_are_tokens=True, text='var x;\nfunction f(){\n  var y;\n  g();\n}\n', expected=('program', [('var_decl', [('name', 'x')]), ('func_decl', [('name', 'f'), ('func_body', [('var_decl', [('name', 'y')]), ('func_invoke', [('name', 'g')])])])]))

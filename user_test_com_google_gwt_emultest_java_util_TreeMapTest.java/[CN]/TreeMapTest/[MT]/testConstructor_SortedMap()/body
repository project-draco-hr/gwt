{
  K[] keys=getKeys();
  V[] values=getValues();
  SortedMap<K,V> sourceMap=new TreeMap<K,V>();
  _assertEmpty(sourceMap);
  sourceMap.put(keys[0],values[0]);
  sourceMap.put(keys[1],values[1]);
  sourceMap.put(keys[2],values[2]);
  TreeMap<K,V> copyConstructed=new TreeMap<K,V>(sourceMap);
  _assertEquals(sourceMap,copyConstructed);
  Comparator<K> comp=Collections.reverseOrder(getComparator());
  TreeMap<K,V> reversedTreeMap=new TreeMap<K,V>(comp);
  reversedTreeMap.put(keys[0],values[0]);
  reversedTreeMap.put(keys[1],values[1]);
  TreeMap<K,V> anotherTreeMap=new TreeMap<K,V>(reversedTreeMap);
  assertTrue(anotherTreeMap.comparator() == comp);
  assertEquals(keys[1],anotherTreeMap.firstKey());
  assertEquals(keys[0],anotherTreeMap.lastKey());
}

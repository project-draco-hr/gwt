{
  K[] keys=getSortedKeys();
  V[] values=getSortedValues();
  NavigableMap<K,V> map=createNavigableMap();
  map.put(keys[0],values[0]);
  assertEquals(keys[0],map.ceilingKey(keys[0]));
  assertEquals(keys[0],map.ceilingKey(getLessThanMinimumKey()));
  assertEquals(map.keySet().toArray()[0],map.ceilingKey(getLessThanMinimumKey()));
  map.put(keys[1],values[1]);
  assertEquals(keys[0],map.ceilingKey(getLessThanMinimumKey()));
  assertEquals(keys[0],map.ceilingKey(keys[0]));
  assertEquals(keys[1],map.ceilingKey(keys[1]));
  assertNull(map.ceilingKey(getGreaterThanMaximumKey()));
  try {
    map.ceilingKey(null);
    assertTrue("expected exception",useNullKey());
  }
 catch (  NullPointerException e) {
    assertFalse("unexpected NPE",useNullKey());
  }
  map.clear();
  assertNull(map.ceilingKey(keys[1]));
  assertNull(map.ceilingKey(null));
}

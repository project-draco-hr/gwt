{
  K[] keys=getSortedKeys();
  V[] values=getSortedValues();
  NavigableMap<K,V> map=createNavigableMap();
  assertEquals(0,map.subMap(keys[0],keys[0]).size());
  assertEquals(0,map.subMap(keys[0],false,keys[0],false).size());
  assertEquals(0,map.subMap(keys[0],true,keys[0],false).size());
  assertEquals(0,map.subMap(keys[0],false,keys[0],true).size());
  assertEquals(0,map.subMap(keys[0],true,keys[0],true).size());
  map.put(keys[0],values[0]);
  assertEquals(0,map.subMap(keys[0],keys[0]).size());
  assertEquals(1,map.subMap(getLessThanMinimumKey(),getGreaterThanMaximumKey()).size());
  assertEquals(1,map.subMap(getLessThanMinimumKey(),false,getGreaterThanMaximumKey(),false).size());
  assertEquals(1,map.subMap(getLessThanMinimumKey(),true,getGreaterThanMaximumKey(),false).size());
  assertEquals(1,map.subMap(getLessThanMinimumKey(),false,getGreaterThanMaximumKey(),true).size());
  assertEquals(1,map.subMap(getLessThanMinimumKey(),true,getGreaterThanMaximumKey(),true).size());
  map.put(keys[1],values[1]);
  assertEquals(1,map.subMap(keys[0],keys[1]).size());
  assertEquals(keys[0],map.subMap(keys[0],keys[1]).keySet().toArray()[0]);
  assertEquals(0,map.subMap(keys[0],false,keys[1],false).size());
  assertEquals(1,map.subMap(keys[0],false,keys[1],true).size());
  assertEquals(keys[1],map.subMap(keys[0],false,keys[1],true).keySet().toArray()[0]);
  assertEquals(1,map.subMap(keys[0],true,keys[1],false).size());
  assertEquals(keys[0],map.subMap(keys[0],true,keys[1],false).keySet().toArray()[0]);
  assertEquals(2,map.subMap(keys[0],true,keys[1],true).size());
  assertEquals(keys[0],map.subMap(keys[0],true,keys[1],true).keySet().toArray()[0]);
  assertEquals(keys[1],map.subMap(keys[0],true,keys[1],true).keySet().toArray()[1]);
  assertEquals(2,map.subMap(getLessThanMinimumKey(),getGreaterThanMaximumKey()).size());
  assertEquals(2,map.subMap(getLessThanMinimumKey(),false,getGreaterThanMaximumKey(),false).size());
  assertEquals(1,map.subMap(keys[0],false,getGreaterThanMaximumKey(),false).size());
  assertEquals(0,map.subMap(keys[0],false,keys[1],false).size());
  assertEquals(2,map.subMap(keys[0],true,getGreaterThanMaximumKey(),false).size());
  assertEquals(1,map.subMap(keys[0],true,keys[1],false).size());
  assertEquals(2,map.subMap(keys[0],true,getGreaterThanMaximumKey(),true).size());
  assertEquals(2,map.subMap(keys[0],true,keys[1],true).size());
}

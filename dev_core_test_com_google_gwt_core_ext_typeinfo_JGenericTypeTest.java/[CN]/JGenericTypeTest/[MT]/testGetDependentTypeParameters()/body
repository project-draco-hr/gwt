{
  TypeOracle oracle=moduleContext.getOracle();
  JClassType type=oracle.getType(GenericClassWithDependentTypeBounds.class.getName());
  JGenericType genericType=type.isGenericType();
  assertNotNull(genericType);
  JTypeParameter[] typeParameters=genericType.getTypeParameters();
  assertEquals(2,typeParameters.length);
  JTypeParameter typeParameter=typeParameters[0];
  assertEquals("C",typeParameter.getName());
  JClassType[] genericTypeBounds=typeParameter.getBounds();
  assertEquals(1,genericTypeBounds.length);
  JClassType upperBoundType=genericTypeBounds[0];
  JParameterizedType upperBoundParameterizedType=upperBoundType.isParameterized();
  assertNotNull(upperBoundParameterizedType);
  assertEquals("GenericClassWithTypeBound",upperBoundParameterizedType.getName());
  assertEquals(upperBoundParameterizedType.getBaseType(),oracle.getType(GenericClassWithTypeBound.class.getName()));
  JClassType[] typeArgs=upperBoundParameterizedType.getTypeArgs();
  assertEquals(1,typeArgs.length);
  JClassType typeArg=typeArgs[0];
  JTypeParameter typeArgTypeParameter=typeArg.isTypeParameter();
  assertNotNull(typeArgTypeParameter);
  assertEquals("M",typeArgTypeParameter.getName());
  JClassType[] typeArgBounds=typeArgTypeParameter.getBounds();
  assertEquals(1,typeArgBounds.length);
  JClassType typeArgUpperBoundType=typeArgBounds[0];
  assertEquals(typeArgUpperBoundType,oracle.getType(Serializable.class.getName()));
  JTypeParameter secondTypeParameter=typeParameters[1];
  assertEquals(secondTypeParameter,typeArgTypeParameter);
}

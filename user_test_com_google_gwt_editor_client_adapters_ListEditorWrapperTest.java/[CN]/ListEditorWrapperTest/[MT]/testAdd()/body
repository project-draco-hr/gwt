{
  List<Object> backing=new ArrayList<Object>();
  FakeEditorSource<Object> source=new FakeEditorSource<Object>();
  MockEditorChain<Object> chain=new MockEditorChain<Object>();
  ListEditorWrapper<Object,FakeLeafValueEditor<Object>> wrapper=new ListEditorWrapper<Object,FakeLeafValueEditor<Object>>(backing,chain,source);
  wrapper.attach();
  assertTrue(wrapper.getEditors().isEmpty());
  Object o1=new Object();
  wrapper.add(o1);
  assertEquals(0,backing.size());
  wrapper.flush();
  assertEquals(1,backing.size());
  assertSame(o1,backing.get(0));
  FakeLeafValueEditor<Object> editor1=wrapper.getEditors().get(0);
  assertSame(o1,editor1.getValue());
  assertEquals(0,source.getLastKnownPosition(editor1));
  assertTrue(chain.isAttached(editor1));
  Object o0=new Object();
  wrapper.add(0,o0);
  assertEquals(1,backing.size());
  wrapper.flush();
  assertEquals(2,backing.size());
  assertSame(o0,backing.get(0));
  assertSame(o1,backing.get(1));
  FakeLeafValueEditor<Object> editor0=wrapper.getEditors().get(0);
  assertNotSame(editor0,editor1);
  assertSame(editor1,wrapper.getEditors().get(1));
  assertSame(o0,editor0.getValue());
  assertEquals(0,source.getLastKnownPosition(editor0));
  assertEquals(1,source.getLastKnownPosition(editor1));
  assertTrue(chain.isAttached(editor0));
  o1=new Object();
  editor1.setValue(o1);
  assertNotSame(backing.get(1),o1);
  wrapper.flush();
  assertSame(backing.get(1),o1);
  wrapper.detach();
  assertFalse(chain.isAttached(editor0));
  assertEquals(FakeEditorSource.DISPOSED,source.getLastKnownPosition(editor0));
  assertFalse(chain.isAttached(editor1));
  assertEquals(FakeEditorSource.DISPOSED,source.getLastKnownPosition(editor1));
}

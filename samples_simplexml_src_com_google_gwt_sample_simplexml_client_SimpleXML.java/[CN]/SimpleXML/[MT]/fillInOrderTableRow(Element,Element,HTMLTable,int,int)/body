{
  String orderId=order.getAttribute("id");
  table.setText(rowPos,columnPos++,orderId);
  Element item=(Element)order.getElementsByTagName("item").item(0);
  String itemUPC=item.getAttribute("upc");
  String itemName=item.getFirstChild().getNodeValue();
  Label itemLabel=new Label(itemUPC);
  itemLabel.setTitle(itemName);
  table.setWidget(rowPos,columnPos++,itemLabel);
  String orderedOnValue=getElementTextValue(customerElement,"orderedOn");
  table.setText(rowPos,columnPos++,orderedOnValue);
  Element address=(Element)order.getElementsByTagName("address").item(0);
  XMLParser.removeWhitespace(address);
  NodeList lst=address.getChildNodes();
  for (int j=0; j < lst.getLength(); j++) {
    Element next=(Element)lst.item(j);
    String addressPartText=next.getFirstChild().getNodeValue();
    table.setText(rowPos,columnPos++,addressPartText);
  }
  NodeList shippedByList=order.getElementsByTagName("shippingInfo");
  if (shippedByList.getLength() == 1) {
    Element shippedBy=(Element)shippedByList.item(0);
    FlexTable shippedByTable=new FlexTable();
    shippedByTable.getRowFormatter().setStyleName(0,USER_TABLE_LABEL_STYLE);
    shippedByTable.setBorderWidth(1);
    NodeList shippedByParts=shippedBy.getChildNodes();
    for (int j=0; j < shippedByParts.getLength(); j++) {
      Node next=shippedByParts.item(j);
      Element elem=(Element)next;
      shippedByTable.setText(0,j,elem.getAttribute("title"));
      shippedByTable.setText(1,j,elem.getFirstChild().getNodeValue());
    }
    table.setWidget(rowPos,columnPos++,shippedByTable);
  }
}

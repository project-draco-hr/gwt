{
  ClassSourceFileComposerFactory f=new ClassSourceFileComposerFactory(packageName,implName);
  f.addImport(ClientRequestObject.class.getName());
  f.addImport(AbstractListJsonRequestObject.class.getName());
  f.addImport(EntityListRequest.class.getName());
  f.addImport(RequestDataManager.class.getName());
  JClassType returnType=getReturnType(logger,interfaceType);
  f.addImport(returnType.getQualifiedBinaryName());
  f.addImport(mainType.getQualifiedBinaryName());
  f.addImplementedInterface(interfaceType.getName());
  SourceWriter sw=f.createSourceWriter(generatorContext,out);
  sw.println();
  printRequestImplClass(sw,returnType);
  sw.println("private final " + mainType.getName() + "Impl factory;");
  sw.println();
  sw.println("public " + implName + "("+ mainType.getName()+ "Impl factory) {");
  sw.indent();
  sw.println("this.factory = factory;");
  sw.outdent();
  sw.println("}");
  sw.println();
  for (  JMethod method : interfaceType.getMethods()) {
    ServerOperation annotation=method.getAnnotation(ServerOperation.class);
    if (annotation == null) {
      logger.log(TreeLogger.ERROR,"no annotation on the service method " + method);
      throw new UnableToCompleteException();
    }
    sw.println(getMethodDeclaration(method) + " {");
    sw.indent();
    sw.println("return new RequestImpl() {");
    sw.indent();
    sw.println("public String getRequestData() {");
    sw.indent();
    sw.println("return " + ClientRequestObject.class.getSimpleName() + ".getRequestString("+ RequestDataManager.class.getSimpleName()+ ".getRequestMap(\""+ annotation.value()+ "\", "+ getParametersAsString(method)+ ", null));");
    sw.outdent();
    sw.println("}");
    sw.outdent();
    sw.println("};");
    sw.outdent();
    sw.println("}");
  }
  sw.outdent();
  sw.println("}");
}

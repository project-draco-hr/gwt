{
  TypeOracle typeOracle=generatorContext.getTypeOracle();
  JClassType interfaceType=typeOracle.findType(interfaceName);
  if (interfaceType == null) {
    logger.log(TreeLogger.ERROR,"Could not find requested typeName: " + interfaceName);
    throw new UnableToCompleteException();
  }
  if (interfaceType.isInterface() == null) {
    logger.log(TreeLogger.ERROR,interfaceType.getQualifiedSourceName() + " is not an interface.",null);
    throw new UnableToCompleteException();
  }
  String packageName=interfaceType.getPackage().getName();
  PrintWriterManager printWriters=new PrintWriterManager(generatorContext,logger,packageName);
  String implName=interfaceType.getName().replace('.','_') + "Impl";
  PrintWriter out=printWriters.tryToMakePrintWriterFor(implName);
  if (out != null) {
    generateOnce(logger,generatorContext,printWriters,out,interfaceType,packageName,implName);
  }
  return packageName + "." + implName;
}

{
  this.requestProcessor=requestProcessor;
  this.terminationCallback=terminationCallback;
  serverRequestExecutor=Executors.newFixedThreadPool(DEFAULT_SERVICE_THREADS);
  messageProcessingThread=new Thread(new Runnable(){
    public void run(){
      try {
        while (true) {
          Message message=Message.parseDelimitedFrom(inputStream);
          processMessage(message);
        }
      }
 catch (      IOException e) {
        terminateDueToException(e);
      }
catch (      InterruptedException e) {
        terminateDueToException(e);
      }
    }
  }
);
  messageProcessingThread.start();
  sendThread=new Thread(new Runnable(){
    public void run(){
      while (true) {
        try {
          PendingSend pendingSend=sendQueue.take();
          try {
            pendingSend.send(outputStream);
          }
 catch (          IOException e) {
            pendingSend.failed(e);
          }
        }
 catch (        InterruptedException e) {
          break;
        }
      }
    }
  }
);
  sendThread.setDaemon(true);
  sendThread.start();
}

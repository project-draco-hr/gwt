{
  HtmlTemplateHandler saxEventHandler=new HtmlTemplateHandler();
  XMLReader xmlParser;
  try {
    xmlParser=XMLReaderFactory.createXMLReader();
  }
 catch (  SAXException e) {
    logger.log(TreeLogger.ERROR,"Couldn't instantiate XML parser",e);
    throw new UnableToCompleteException();
  }
  xmlParser.setContentHandler(saxEventHandler);
  xmlParser.setDTDHandler(saxEventHandler);
  xmlParser.setEntityResolver(saxEventHandler);
  xmlParser.setErrorHandler(saxEventHandler);
  try {
    xmlParser.parse(new InputSource(input));
  }
 catch (  IOException e) {
    logger.log(TreeLogger.ERROR,"Error during template parsing:",e);
    throw new UnableToCompleteException();
  }
catch (  SAXParseException e) {
    String logMessage="Parse Error during template parsing, at line " + e.getLineNumber() + ", column "+ e.getColumnNumber();
    try {
      input.reset();
      char[] buf=new char[200];
      int len=input.read(buf);
      if (len > 0) {
        logMessage+=" of input " + new String(buf,0,len);
      }
    }
 catch (    IOException e1) {
      logMessage+=" <failed to read input snippet>";
    }
    logger.log(TreeLogger.ERROR,logMessage + ": " + e);
    throw new UnableToCompleteException();
  }
catch (  SAXException e) {
    logger.log(TreeLogger.ERROR,"Error during template parsing:",e);
    throw new UnableToCompleteException();
  }
}

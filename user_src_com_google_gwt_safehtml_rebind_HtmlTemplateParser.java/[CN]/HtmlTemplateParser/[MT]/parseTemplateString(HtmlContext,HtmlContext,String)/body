{
  Matcher match=TEMPLATE_PARAM_PATTERN.matcher(template);
  boolean firstMatch=true;
  int endOfLastMatch=0;
  while (match.find()) {
    if (match.start() > endOfLastMatch) {
      appendLiteral(template.substring(endOfLastMatch,match.start()));
    }
    int paramIndex=Integer.parseInt(match.group(1));
    if (firstMatch && (match.start() == 0) && (contextAtStart != null)) {
      parsedTemplate.addParameter(new ParameterChunk(contextAtStart,paramIndex));
    }
 else {
      parsedTemplate.addParameter(new ParameterChunk(context,paramIndex));
    }
    firstMatch=false;
    endOfLastMatch=match.end();
  }
  if (endOfLastMatch < template.length()) {
    parsedTemplate.addLiteral(template.substring(endOfLastMatch));
  }
}

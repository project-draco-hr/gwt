{
  Throwable rethrow=null;
  try {
    Field victimField=victimClass.getDeclaredField(fieldName);
    victimField.setAccessible(true);
    return (T)victimField.get(victimObject);
  }
 catch (  IllegalArgumentException e) {
    rethrow=e;
  }
catch (  SecurityException e) {
    rethrow=e;
  }
catch (  IllegalAccessException e) {
    rethrow=e;
  }
catch (  NoSuchFieldException e) {
    rethrow=e;
  }
  throw new RuntimeException("Unable to snatch field '" + fieldName + "' from class "+ victimClass.getName(),rethrow);
}

{
  ColumnSortList list=new ColumnSortList();
  assertEquals(0,list.size());
  try {
    list.push((ColumnSortInfo)null);
    fail("Expected IllegalArgumentException.");
  }
 catch (  IllegalArgumentException e) {
  }
  ColumnSortInfo info0=createColumnSortInfo();
  list.push(info0);
  assertEquals(1,list.size());
  assertEquals(info0,list.get(0));
  list.push(info0);
  assertEquals(1,list.size());
  assertEquals(info0,list.get(0));
  ColumnSortInfo info1=createColumnSortInfo();
  list.push(info1);
  assertEquals(2,list.size());
  assertEquals(info1,list.get(0));
  assertEquals(info0,list.get(1));
  ColumnSortInfo info2=createColumnSortInfo();
  list.push(info2);
  assertEquals(3,list.size());
  assertEquals(info2,list.get(0));
  assertEquals(info1,list.get(1));
  assertEquals(info0,list.get(2));
  list.push(info0);
  assertEquals(3,list.size());
  assertEquals(info0,list.get(0));
  assertEquals(info2,list.get(1));
  assertEquals(info1,list.get(2));
  ColumnSortInfo info1b=new ColumnSortInfo(info1.getColumn(),false);
  list.push(info1b);
  assertEquals(3,list.size());
  assertEquals(info1b,list.get(0));
  assertEquals(info0,list.get(1));
  assertEquals(info2,list.get(2));
}

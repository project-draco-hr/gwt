{
  AbstractTreeLogger logger=new PrintWriterTreeLogger();
  logger.setMaxDetail(TreeLogger.ERROR);
  Set<Resource> set1=new HashSet<Resource>();
  for (  Map.Entry<String,String> entry : existingTypesToSourcesMap.entrySet()) {
    set1.add(new StaticJavaResource(entry.getKey(),entry.getValue()));
  }
  Set<String> emptyList=Collections.emptySet();
  Set<Resource> set2=new HashSet<Resource>();
  for (  String type : existingTypesToSourcesMap.keySet()) {
    set2.add(new StaticJavaResource(type,newTypesToSourcesMap.get(type)));
  }
  ApiContainer existingApi=new ApiContainer("existingApi",set1,emptyList,logger);
  ApiContainer newApi=new ApiContainer("newApi",set2,emptyList,logger);
  return ApiCompatibilityChecker.getApiDiff(newApi,existingApi,emptyList);
}

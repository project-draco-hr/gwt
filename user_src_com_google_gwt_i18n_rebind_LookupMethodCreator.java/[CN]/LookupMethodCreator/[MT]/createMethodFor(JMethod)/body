{
  String template="{0} target = ({0})cache.get(arg0);";
  String type;
  JPrimitiveType s=returnType.isPrimitive();
  if (s != null) {
    type=AbstractSourceCreator.getJavaObjectTypeFor(s);
  }
 else {
    type=returnType.getQualifiedSourceName();
  }
  Object[] args={type};
  String lookup=MessageFormat.format(template,args);
  println(lookup);
  println("if (target != null)");
  printReturnTarget();
  JMethod[] methods=((ConstantsWithLookupImplCreator)currentCreator).allInterfaceMethods;
  for (int i=0; i < methods.length; i++) {
    if (methods[i].getReturnType().equals(returnType) && methods[i] != targetMethod) {
      String methodName=methods[i].getName();
      String body="if(arg0.equals(" + wrap(methodName) + ")){";
      println(body);
      printFound(methodName);
      println("}");
    }
  }
  String format="throw new java.util.MissingResourceException(\"Cannot find constant ''\" + {0} + \"''; expecting a method name\", \"{1}\", {0});";
  String[] throwArgs={"arg0",this.currentCreator.getTarget().getQualifiedSourceName()};
  String result=MessageFormat.format(format,throwArgs);
  println(result);
}

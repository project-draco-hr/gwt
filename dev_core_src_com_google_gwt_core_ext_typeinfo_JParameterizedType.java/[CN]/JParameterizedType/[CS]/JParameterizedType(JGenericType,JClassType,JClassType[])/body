{
  super.setBaseType(baseType);
  this.enclosingType=enclosingType;
  final JParameterizedType parameterizedType=this;
  members=new DelegateMembers(this,baseType,new Substitution(){
    public JType getSubstitution(    JType type){
      return type.getSubstitutedType(parameterizedType);
    }
  }
);
  List<JClassType> typeArgsList=Arrays.asList(typeArgs);
  this.typeArgs.addAll(typeArgsList);
  assert(typeArgsList.indexOf(null) == -1);
}

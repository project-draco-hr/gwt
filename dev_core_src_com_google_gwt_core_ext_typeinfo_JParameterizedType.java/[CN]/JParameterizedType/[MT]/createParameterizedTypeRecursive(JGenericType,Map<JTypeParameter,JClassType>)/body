{
  JClassType enclosingType=baseType.getEnclosingType();
  if (baseType.isMemberType() && !baseType.isStatic()) {
    JGenericType isGenericEnclosingType=enclosingType.isGenericType();
    if (isGenericEnclosingType != null) {
      enclosingType=createParameterizedTypeRecursive(isGenericEnclosingType,substitutionMap);
    }
  }
  JTypeParameter[] typeParameters=baseType.getTypeParameters();
  JClassType[] newTypeArgs=new JClassType[typeParameters.length];
  TypeOracle oracle=baseType.getOracle();
  for (int i=0; i < newTypeArgs.length; ++i) {
    JClassType newTypeArg=substitutionMap.get(typeParameters[i]);
    if (newTypeArg == null) {
      newTypeArg=oracle.getWildcardType(true,typeParameters[i].getFirstBound());
    }
    newTypeArgs[i]=newTypeArg;
  }
  JParameterizedType parameterizedType=oracle.getParameterizedType(baseType,enclosingType,newTypeArgs);
  return parameterizedType;
}

{
  super(Document.get().createTableElement(),pageSize,new ResourcesAdapter(resources),keyProvider);
  this.style=resources.cellTableStyle();
  this.style.ensureInjected();
  table=getElement().cast();
  table.setCellSpacing(0);
  colgroup=Document.get().createColGroupElement();
  table.appendChild(colgroup);
  thead=table.createTHead();
  if (table.getTBodies().getLength() > 0) {
    tbody=table.getTBodies().getItem(0);
  }
 else {
    tbody=Document.get().createTBodyElement();
    table.appendChild(tbody);
  }
  table.appendChild(tbodyLoading=Document.get().createTBodyElement());
  tfoot=table.createTFoot();
  setStyleName(resources.cellTableStyle().cellTableWidget());
{
    tbodyLoadingCell=Document.get().createTDElement();
    TableRowElement tr=Document.get().createTRElement();
    tbodyLoading.appendChild(tr);
    tr.appendChild(tbodyLoadingCell);
    tbodyLoadingCell.setAlign("center");
    tbodyLoadingCell.appendChild(messagesPanel.getElement());
    adopt(messagesPanel);
    messagesPanel.add(emptyTableWidgetContainer);
    messagesPanel.add(loadingIndicatorContainer);
    loadingIndicatorContainer.setStyleName(style.cellTableLoading());
  }
  setLoadingIndicator(loadingIndicator);
  Set<String> eventTypes=new HashSet<String>();
  eventTypes.add(BrowserEvents.MOUSEOVER);
  eventTypes.add(BrowserEvents.MOUSEOUT);
  CellBasedWidgetImpl.get().sinkEvents(this,eventTypes);
}

{
  HasDataPresenter<T> presenter=getPresenter();
  int oldRow=getKeyboardSelectedRow();
  boolean isRtl=LocaleInfo.getCurrentLocale().isRTL();
  int keyCodeLineEnd=isRtl ? KeyCodes.KEY_LEFT : KeyCodes.KEY_RIGHT;
  int keyCodeLineStart=isRtl ? KeyCodes.KEY_RIGHT : KeyCodes.KEY_LEFT;
  int keyCode=event.getKeyCode();
  if (keyCode == keyCodeLineEnd) {
    int nextColumn=findInteractiveColumn(keyboardSelectedColumn,false);
    if (nextColumn <= keyboardSelectedColumn) {
      if (presenter.hasKeyboardNext()) {
        keyboardSelectedColumn=nextColumn;
        presenter.keyboardNext();
        event.preventDefault();
        return true;
      }
    }
 else {
      keyboardSelectedColumn=nextColumn;
      getPresenter().setKeyboardSelectedRow(oldRow,true,true);
      event.preventDefault();
      return true;
    }
  }
 else   if (keyCode == keyCodeLineStart) {
    int prevColumn=findInteractiveColumn(keyboardSelectedColumn,true);
    if (prevColumn >= keyboardSelectedColumn) {
      if (presenter.hasKeyboardPrev()) {
        keyboardSelectedColumn=prevColumn;
        presenter.keyboardPrev();
        event.preventDefault();
        return true;
      }
    }
 else {
      keyboardSelectedColumn=prevColumn;
      getPresenter().setKeyboardSelectedRow(oldRow,true,true);
      event.preventDefault();
      return true;
    }
  }
  return false;
}

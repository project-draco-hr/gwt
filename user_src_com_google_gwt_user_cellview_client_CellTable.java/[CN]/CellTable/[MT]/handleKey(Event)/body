{
  int keyCode=event.getKeyCode();
  int oldColumn=keyboardSelectedColumn;
  int oldRow=keyboardSelectedRow;
  int numColumns=columns.size();
  int numRows=getDataSize();
switch (keyCode) {
case KeyCodes.KEY_UP:
    if (keyboardSelectedRow > 0) {
      --keyboardSelectedRow;
    }
  break;
case KeyCodes.KEY_DOWN:
if (keyboardSelectedRow < numRows - 1) {
  ++keyboardSelectedRow;
}
break;
case KeyCodes.KEY_LEFT:
if (keyboardSelectedColumn == 0 && keyboardSelectedRow > 0) {
keyboardSelectedColumn=numColumns - 1;
--keyboardSelectedRow;
}
 else if (keyboardSelectedColumn > 0) {
--keyboardSelectedColumn;
}
break;
case KeyCodes.KEY_RIGHT:
if (keyboardSelectedColumn == numColumns - 1 && keyboardSelectedRow < numRows - 1) {
keyboardSelectedColumn=0;
++keyboardSelectedRow;
}
 else if (keyboardSelectedColumn < numColumns - 1) {
++keyboardSelectedColumn;
}
break;
}
if (keyboardSelectedColumn != oldColumn || keyboardSelectedRow != oldRow) {
int pageStart=getPageStart();
int pageSize=getPageSize();
TableRowElement row=getRowElement(oldRow - pageStart);
row.removeClassName(style.keyboardSelectedRow());
TableCellElement td=row.getCells().getItem(oldColumn);
td.removeClassName(style.keyboardSelectedCell());
td.removeAttribute("tabIndex");
if (keyboardSelectedRow >= pageStart + pageSize) {
setPageStart(keyboardSelectedRow - pageSize + 1);
}
 else if (keyboardSelectedRow < pageStart) {
setPageStart(keyboardSelectedRow);
}
view.resetFocus();
return true;
}
return false;
}

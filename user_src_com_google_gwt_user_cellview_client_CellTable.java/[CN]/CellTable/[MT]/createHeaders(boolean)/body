{
  List<Header<?>> theHeaders=isFooter ? footers : headers;
  TableSectionElement section=isFooter ? tfoot : thead;
  String className=isFooter ? style.footer() : style.header();
  boolean hasHeader=false;
  SafeHtmlBuilder sb=new SafeHtmlBuilder();
  sb.appendHtmlConstant("<tr>");
  int columnCount=columns.size();
  int curColumn=0;
  for (  Header<?> header : theHeaders) {
    StringBuilder classesBuilder=new StringBuilder(className);
    if (curColumn == 0) {
      classesBuilder.append(" ");
      classesBuilder.append(isFooter ? style.firstColumnFooter() : style.firstColumnHeader());
    }
    if (curColumn == columnCount - 1) {
      classesBuilder.append(" ");
      classesBuilder.append(isFooter ? style.lastColumnFooter() : style.lastColumnHeader());
    }
    SafeHtmlBuilder headerBuilder=new SafeHtmlBuilder();
    if (header != null) {
      hasHeader=true;
      header.render(headerBuilder);
    }
    sb.append(template.th(classesBuilder.toString(),headerBuilder.toSafeHtml()));
    curColumn++;
  }
  sb.appendHtmlConstant("</tr>");
  TABLE_IMPL.replaceAllRows(this,section,sb.toSafeHtml());
  setVisible(section,hasHeader);
}

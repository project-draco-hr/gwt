{
  CellBasedWidgetImpl.get().onBrowserEvent(this,event);
  super.onBrowserEvent(event);
  String eventType=event.getType();
  boolean keyUp="keyup".equals(eventType);
  boolean keyDown="keydown".equals(eventType);
  if (keyDown && !cellIsEditing) {
    return;
  }
  if (keyUp && !cellIsEditing) {
    if (handleKey(event)) {
      return;
    }
  }
  EventTarget eventTarget=event.getEventTarget();
  TableCellElement tableCell=null;
  if (eventTarget != null && Element.is(eventTarget)) {
    tableCell=findNearestParentCell(Element.as(eventTarget));
  }
  if (tableCell == null) {
    return;
  }
  Element trElem=tableCell.getParentElement();
  if (trElem == null) {
    return;
  }
  TableRowElement tr=TableRowElement.as(trElem);
  Element sectionElem=tr.getParentElement();
  if (sectionElem == null) {
    return;
  }
  TableSectionElement section=TableSectionElement.as(sectionElem);
  int col=tableCell.getCellIndex();
  if (section == thead) {
    Header<?> header=headers.get(col);
    if (header != null && cellConsumesEventType(header.getCell(),eventType)) {
      header.onBrowserEvent(tableCell,event);
    }
  }
 else   if (section == tfoot) {
    Header<?> footer=footers.get(col);
    if (footer != null && cellConsumesEventType(footer.getCell(),eventType)) {
      footer.onBrowserEvent(tableCell,event);
    }
  }
 else   if (section == tbody) {
    int row=tr.getSectionRowIndex();
    if ("mouseover".equals(eventType)) {
      if (hoveringRow != null) {
        hoveringRow.removeClassName(style.hoveredRow());
      }
      hoveringRow=tr;
      tr.addClassName(style.hoveredRow());
    }
 else     if ("mouseout".equals(eventType)) {
      hoveringRow=null;
      tr.removeClassName(style.hoveredRow());
    }
    T value=presenter.getData().get(row);
    SelectionModel<? super T> selectionModel=presenter.getSelectionModel();
    if (selectionModel != null && "click".equals(eventType) && !handlesSelection) {
      selectionModel.setSelected(value,true);
    }
    fireEventToCell(event,eventType,tableCell,value,col,row);
  }
}

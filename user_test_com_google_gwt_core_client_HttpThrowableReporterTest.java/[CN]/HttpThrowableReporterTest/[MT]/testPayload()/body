{
  String payload;
  Throwable e;
  try {
    throw new RuntimeException("foo");
  }
 catch (  Throwable t) {
    e=t;
    payload=HttpThrowableReporter.buildPayload(t);
  }
  assertNotNull(payload);
  Payload p=JsonUtils.unsafeEval(payload);
  assertEquals("foo",p.getMessage());
  assertEquals(GWT.getPermutationStrongName(),p.getStrongName());
  JsArrayString stack=p.getStackTrace();
  assertNotNull(stack);
  assertEquals(e.getStackTrace().length,stack.length());
  for (int i=0, j=e.getStackTrace().length; i < j; i++) {
    assertEquals(e.getStackTrace()[i].getMethodName(),stack.get(i));
  }
}

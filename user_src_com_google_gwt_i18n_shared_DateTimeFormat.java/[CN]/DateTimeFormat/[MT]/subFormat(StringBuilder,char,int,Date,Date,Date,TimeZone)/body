{
switch (ch) {
case 'G':
    formatEra(buf,count,adjustedDate);
  break;
case 'y':
formatYear(buf,count,adjustedDate);
break;
case 'M':
formatMonth(buf,count,adjustedDate);
break;
case 'k':
format24Hours(buf,count,adjustedTime);
break;
case 'S':
formatFractionalSeconds(buf,count,adjustedTime);
break;
case 'E':
formatDayOfWeek(buf,count,adjustedDate);
break;
case 'a':
formatAmPm(buf,adjustedTime);
break;
case 'h':
format1To12Hours(buf,count,adjustedTime);
break;
case 'K':
format0To11Hours(buf,count,adjustedTime);
break;
case 'H':
format0To23Hours(buf,count,adjustedTime);
break;
case 'c':
formatStandaloneDay(buf,count,adjustedDate);
break;
case 'L':
formatStandaloneMonth(buf,count,adjustedDate);
break;
case 'Q':
formatQuarter(buf,count,adjustedDate);
break;
case 'd':
formatDate(buf,count,adjustedDate);
break;
case 'm':
formatMinutes(buf,count,adjustedTime);
break;
case 's':
formatSeconds(buf,count,adjustedTime);
break;
case 'z':
formatTimeZone(buf,count,date,timezone);
break;
case 'v':
buf.append(timezone.getID());
break;
case 'Z':
formatTimeZoneRFC(buf,count,date,timezone);
break;
default :
return false;
}
return true;
}

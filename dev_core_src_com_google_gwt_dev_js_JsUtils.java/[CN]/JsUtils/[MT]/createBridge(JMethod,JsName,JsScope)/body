{
  SourceInfo sourceInfo=method.getSourceInfo();
  JsFunction bridge=new JsFunction(sourceInfo,scope);
  for (  JParameter p : method.getParams()) {
    JsName name=bridge.getScope().declareName(p.getName());
    bridge.getParameters().add(new JsParameter(sourceInfo,name));
  }
  JsNameRef ref=polyName.makeRef(sourceInfo);
  ref.setQualifier(new JsThisRef(sourceInfo));
  List<JsExpression> args=Lists.newArrayList();
  for (  JsParameter p : bridge.getParameters()) {
    args.add(p.getName().makeRef(sourceInfo));
  }
  JsExpression invocation=createInvocationOrPropertyAccess(sourceInfo,method.getJsMemberType(),ref,args);
  JsBlock block=new JsBlock(sourceInfo);
  if (method.getType() == JPrimitiveType.VOID) {
    block.getStatements().add(invocation.makeStmt());
  }
 else {
    block.getStatements().add(new JsReturn(sourceInfo,invocation));
  }
  bridge.setBody(block);
  return bridge;
}

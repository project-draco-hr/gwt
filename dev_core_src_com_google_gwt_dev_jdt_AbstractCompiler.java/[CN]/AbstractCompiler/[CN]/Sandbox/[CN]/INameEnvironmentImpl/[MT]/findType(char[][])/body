{
  String qname=CharOperation.toString(compoundTypeName);
  TreeLogger branch=logger.branch(TreeLogger.SPAM,"Compiler is asking about '" + qname + "'",null);
  if (isPackage(qname)) {
    branch.log(TreeLogger.SPAM,"Found to be a package",null);
    return null;
  }
  String className=qname;
  int pos=qname.indexOf('$');
  if (pos >= 0) {
    qname=qname.substring(0,pos);
  }
  CompilationUnit unit=findCompilationUnit(qname);
  if (unit != null) {
    branch.log(TreeLogger.SPAM,"Found type in compilation unit: " + unit.getDisplayLocation());
    ICompilationUnit icu=new CompilationUnitAdapter(unit);
    return new NameEnvironmentAnswer(icu,null);
  }
 else {
    ClassLoader classLoader=getClassLoader();
    URL resourceURL=classLoader.getResource(className.replace('.','/') + ".class");
    if (resourceURL != null) {
      if (isBinaryType(classLoader,className)) {
        byte[] classBytes=Util.readURLAsBytes(resourceURL);
        try {
          ClassFileReader cfr=new ClassFileReader(classBytes,null);
          return new NameEnvironmentAnswer(cfr,null);
        }
 catch (        ClassFormatException e) {
        }
      }
    }
    branch.log(TreeLogger.SPAM,"Not a known type",null);
    return null;
  }
}

{
  return new EntityListRequest<ReportKey>(){
    Set<Property<ReportKey,?>> properties=new HashSet<Property<ReportKey,?>>();
    private HasValueList<Values<ReportKey>> watcher;
    public void fire(){
      RequestBuilder builder=new RequestBuilder(RequestBuilder.GET,"/expenses/data?methodName=" + MethodName.FIND_REPORTS_BY_EMPLOYEE.name() + UrlParameterManager.getUrlFragment(new Object[]{id.get()}));
      builder.setCallback(new RequestCallback(){
        public void onError(        Request request,        Throwable exception){
        }
        public void onResponseReceived(        Request request,        Response response){
          if (200 == response.getStatusCode()) {
            String text=response.getText();
            JsArray<ValuesImpl<ReportKey>> valueArray=ValuesImpl.arrayFromJson(text);
            List<Values<ReportKey>> valueList=new ArrayList<Values<ReportKey>>(valueArray.length());
            for (int i=0; i < valueArray.length(); i++) {
              ValuesImpl<ReportKey> values=valueArray.get(i);
              values.setPropertyHolder(ReportKey.get());
              valueList.add(values);
            }
            watcher.setValueList(valueList);
          }
 else {
          }
        }
      }
);
      try {
        builder.send();
      }
 catch (      RequestException e) {
      }
    }
    public EntityListRequest<ReportKey> forProperties(    Collection<Property<ReportKey,?>> properties){
      for (      Property<ReportKey,?> property : properties) {
        forProperty(property);
      }
      return this;
    }
    public EntityListRequest<ReportKey> forProperty(    Property<ReportKey,?> property){
      properties.add(property);
      return this;
    }
    public EntityListRequest<ReportKey> to(    HasValueList<Values<ReportKey>> watcher){
      this.watcher=watcher;
      return this;
    }
  }
;
}

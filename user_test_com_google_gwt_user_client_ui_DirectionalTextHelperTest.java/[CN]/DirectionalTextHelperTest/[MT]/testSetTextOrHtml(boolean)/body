{
  String enContent=isHtml ? EN_HTML : EN_TEXT;
  String iwContent=isHtml ? IW_HTML : IW_TEXT;
  for (int i=0; i < 2; i++) {
    boolean isDiv=i == 0;
    String id=isDiv ? "div widget: " : "span widget: ";
    element=isDiv ? Document.get().createDivElement() : Document.get().createSpanElement();
    directionalTextHelper=new DirectionalTextHelper(element,!isDiv);
    directionalTextHelper.setTextOrHtml(enContent,isHtml);
    assertDirection(id + "widget's direction is not DEFAULT upon " + "standard initialization",Direction.DEFAULT);
    directionalTextHelper.setTextOrHtml(iwContent,Direction.RTL,isHtml);
    assertDirection(id + "widget's direction is not RTL after it was" + " explicitly set to RTL",Direction.RTL);
    directionalTextHelper.setTextOrHtml(enContent,isHtml);
    assertDirection(id + "widget's direction was not specified, and no" + " estimator specified, thus should return to initial value (DEFAULT)",Direction.DEFAULT);
    directionalTextHelper.setDirectionEstimator(true);
    assertDirection(id + "widget's direction wasn't instantly updated" + " to LTR on switching direction estimation on",Direction.LTR);
    directionalTextHelper.setTextOrHtml(iwContent,isHtml);
    assertDirection(id + "widget's direction wasn't estimated as RTL",Direction.RTL);
    directionalTextHelper.setTextOrHtml(iwContent,Direction.LTR,isHtml);
    assertDirection(id + "widget's direction is not LTR after it was" + " explicitly set to LTR (direction estimation is on)",Direction.LTR);
    directionalTextHelper.setTextOrHtml(iwContent,Direction.DEFAULT,isHtml);
    assertDirection(id + "widget's direction is not DEFAULT after it" + " was explicitly set to DEFAULT (direction estimation is on)",Direction.DEFAULT);
    assertEquals(id + "retreived text is incorrect",IW_TEXT,StringCase.toLower(directionalTextHelper.getTextOrHtml(false)));
  }
}

{
  if (problems == null || problems.length == 0) {
    return null;
  }
  TreeLogger branch=null;
  for (  CategorizedProblem problem : problems) {
    TreeLogger.Type logLevel;
    if (problem.isError()) {
      logLevel=TreeLogger.ERROR;
    }
 else     if (problem.isWarning() && problem instanceof GWTProblem) {
      logLevel=TreeLogger.WARN;
    }
 else {
      continue;
    }
    StringBuffer msgBuf=new StringBuffer();
    int line=problem.getSourceLineNumber();
    if (line > 0) {
      msgBuf.append("Line ");
      msgBuf.append(line);
      msgBuf.append(": ");
    }
    msgBuf.append(problem.getMessage());
    HelpInfo helpInfo=null;
    if (problem instanceof GWTProblem) {
      GWTProblem gwtProblem=(GWTProblem)problem;
      helpInfo=gwtProblem.getHelpInfo();
    }
    if (branch == null) {
      Type branchType=isError ? TreeLogger.ERROR : TreeLogger.WARN;
      String branchString=isError ? "Errors" : "Warnings";
      branch=logger.branch(branchType,branchString + " in '" + fileName+ "'",null);
    }
    branch.log(logLevel,msgBuf.toString(),null,helpInfo);
  }
  return branch;
}

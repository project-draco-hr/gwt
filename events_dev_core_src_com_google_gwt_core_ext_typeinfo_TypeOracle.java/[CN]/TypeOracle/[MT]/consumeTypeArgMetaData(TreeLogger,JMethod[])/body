{
  TreeLogger branch;
  for (int i=0; i < methods.length; i++) {
    JMethod method=methods[i];
    String[][] tokensArray=method.getMetaData(TAG_TYPEARGS);
    if (tokensArray.length == 0) {
      continue;
    }
    try {
      String msg="Method " + method.getReadableDeclaration();
      branch=logger.branch(TreeLogger.TRACE,msg,null);
      boolean returnTypeHandled=false;
      Set<JParameter> paramsAlreadySet=new HashSet<JParameter>();
      for (int j=0; j < tokensArray.length; j++) {
        String[] tokens=tokensArray[j];
        if (tokens.length == 0) {
          branch.log(TreeLogger.WARN,"Metadata error: expecting tokens after " + TAG_TYPEARGS,null);
          throw new UnableToCompleteException();
        }
        JParameter param=method.findParameter(tokens[0]);
        if (param != null) {
          if (!paramsAlreadySet.contains(param)) {
            JType resultingType=determineActualType(branch,param.getType(),tokens,1);
            param.setType(resultingType);
            if (GenUtil.warnAboutMetadata()) {
              branch.log(TreeLogger.WARN,"Deprecated use of " + TAG_TYPEARGS + " for parameter "+ param.getName()+ "; Please use "+ resultingType.getParameterizedQualifiedSourceName()+ " as the parameter's type",null);
            }
            paramsAlreadySet.add(param);
          }
 else {
            msg="Metadata error: duplicate attempt to specify type args for parameter '" + param.getName() + "'";
            branch.log(TreeLogger.WARN,msg,null);
            throw new UnableToCompleteException();
          }
        }
 else {
          if (!returnTypeHandled) {
            JType resultingType=determineActualType(branch,method.getReturnType(),tokens,0);
            method.setReturnType(resultingType);
            if (GenUtil.warnAboutMetadata()) {
              branch.log(TreeLogger.WARN,"Deprecated use of " + TAG_TYPEARGS + " for the return type; Please use "+ resultingType.getParameterizedQualifiedSourceName()+ " as the method's return type",null);
            }
            returnTypeHandled=true;
          }
 else {
            msg="Metadata error: duplicate attempt to specify type args for the return type";
            branch.log(TreeLogger.WARN,msg,null);
          }
        }
      }
    }
 catch (    UnableToCompleteException e) {
    }
  }
}

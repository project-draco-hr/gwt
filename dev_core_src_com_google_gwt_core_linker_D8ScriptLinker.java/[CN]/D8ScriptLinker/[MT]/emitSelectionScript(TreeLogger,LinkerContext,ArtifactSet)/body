{
  Set<Script> results=artifacts.find(Script.class);
  if (results.size() != 1) {
    logger.log(TreeLogger.ERROR,"The module must have exactly one distinct" + " permutation when using the " + getDescription() + " Linker; found "+ results.size(),null);
    throw new UnableToCompleteException();
  }
  Script result=results.iterator().next();
  DefaultTextOutput out=new DefaultTextOutput(true);
  StringBuilder prefixBuilder=new StringBuilder();
  String bootstrap=generateSelectionScript(logger,context,artifacts);
  bootstrap=context.optimizeJavaScript(logger,bootstrap);
  prefixBuilder.append(bootstrap);
  prefixBuilder.append(NEWLINE);
  prefixBuilder.append("var $gwt_version = \"" + About.getGwtVersionNum() + "\";");
  prefixBuilder.append(NEWLINE);
  prefixBuilder.append("var $wnd = window;");
  prefixBuilder.append(NEWLINE);
  prefixBuilder.append("var $doc = $wnd.document;");
  prefixBuilder.append(NEWLINE);
  prefixBuilder.append("var $moduleName, $moduleBase;");
  prefixBuilder.append(NEWLINE);
  prefixBuilder.append("var $strongName = '" + result.getStrongName() + "';");
  prefixBuilder.append(NEWLINE);
  String prefix=prefixBuilder.toString();
  out.print(prefix);
  addSourceMapPrefix(artifacts,prefix);
  out.print(result.getJavaScript());
  out.newlineOpt();
  out.print("if (" + context.getModuleFunctionName() + ") "+ context.getModuleFunctionName()+ ".onScriptLoad(gwtOnLoad);");
  out.newlineOpt();
  return emitString(logger,out.toString(),context.getModuleName() + ".nocache.js");
}

{
  OptimizerStats stats=new OptimizerStats(NAME);
  if (tracker != null) {
    tracker.incrementRunCount();
    tracker.maybeDumpAST(program,0);
  }
  CannotBeOrdinalAnalyzer ordinalAnalyzer=new CannotBeOrdinalAnalyzer(program);
  ordinalAnalyzer.accept(program);
  ordinalAnalyzer.afterVisitor();
  if (tracker != null) {
    for (    JEnumType type : enumsVisited.values()) {
      tracker.addVisited(type.getName());
      if (!ordinalizationBlackList.contains(type)) {
        tracker.addOrdinalized(type.getName());
      }
    }
  }
  if (enumsVisited.size() == ordinalizationBlackList.size()) {
    return stats;
  }
  ReplaceEnumTypesWithInteger replaceEnums=new ReplaceEnumTypesWithInteger();
  replaceEnums.accept(program);
  stats.recordModified(replaceEnums.getNumMods());
  if (tracker != null) {
    tracker.maybeDumpAST(program,1);
  }
  ReplaceOrdinalFieldAndMethodRefsWithOrdinal replaceOrdinalRefs=new ReplaceOrdinalFieldAndMethodRefsWithOrdinal();
  replaceOrdinalRefs.accept(program);
  stats.recordModified(replaceOrdinalRefs.getNumMods());
  if (tracker != null) {
    tracker.maybeDumpAST(program,2);
  }
  return stats;
}

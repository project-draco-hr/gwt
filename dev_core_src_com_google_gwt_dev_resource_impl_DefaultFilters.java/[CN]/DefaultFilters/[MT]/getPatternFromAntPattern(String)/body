{
  if (!antPattern.matcher(antPatternString).matches()) {
    return null;
  }
  if (antPatternString.indexOf("***") != -1) {
    return null;
  }
  StringBuffer sb=new StringBuffer();
  int length=antPatternString.length();
  for (int i=0; i < length; i++) {
    char c=antPatternString.charAt(i);
switch (c) {
case '.':
      sb.append("\\.");
    break;
case '$':
  sb.append("\\$");
break;
case '/':
if (i != 0 && i + 2 < length && antPatternString.charAt(i + 1) == '*' && antPatternString.charAt(i + 2) == '*') {
sb.append("(/[^/]*)*");
i+=2;
}
 else {
if (i == length - 1) {
  return null;
}
sb.append(c);
}
break;
case '*':
if (i + 1 < length && antPatternString.charAt(i + 1) == '*') {
if (i + 2 < length && antPatternString.charAt(i + 2) == '/') {
if (i == 0) {
sb.append("([^/]+/)*");
}
 else {
sb.append("([^/]*/)*");
}
i+=2;
}
 else {
if (i == 0) {
sb.append("([^/].*)*");
}
 else {
sb.append(".*");
}
i++;
}
}
 else {
sb.append("[^/]*");
}
break;
default :
sb.append(c);
break;
}
}
return sb.toString();
}

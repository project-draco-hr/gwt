{
  NameClashesFixer.exec(program);
  uninitializedValuePotentiallyObservable=optimize ? ComputePotentiallyObservableUninitializedValues.analyze(program) : Predicates.<JField>alwaysTrue();
  new FindNameOfTargets().accept(program);
  new SortVisitor().accept(program);
  if (!incremental) {
    new RecordCrossClassCallsAndConstructorLiveness().accept(program);
  }
  contructTypeToClassLiteralDeclarationMap();
  new CreateNamesAndScopesVisitor().accept(program);
  new GenerateJavaScriptTransformer().transform(program);
  JavaToJavaScriptMap jjsMap=new JavaToJavaScriptMapImpl(program.getDeclaredTypes(),names,javaTypeByGlobalStatement,methodByGlobalStatement);
  Set<JsNode> functionsForJsInlining=incremental ? Collections.<JsNode>emptySet() : new CollectJsFunctionsForInlining().getFunctionsForJsInlining();
  return Pair.create(jjsMap,functionsForJsInlining);
}

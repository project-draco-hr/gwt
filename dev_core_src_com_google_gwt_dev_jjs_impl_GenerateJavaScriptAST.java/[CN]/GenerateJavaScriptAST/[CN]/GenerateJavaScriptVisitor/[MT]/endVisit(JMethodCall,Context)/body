{
  JMethod method=x.getTarget();
  List<JsExpression> args=popList(x.getArgs().size());
  if (JProgram.isClinit(method)) {
    JDeclaredType type=method.getEnclosingType();
    JDeclaredType clinitTarget=type.getClinitTarget();
    if (clinitTarget == null) {
      if (x.getInstance() != null) {
        pop();
      }
      push(JsNullLiteral.INSTANCE);
      return;
    }
 else     if (type != clinitTarget) {
      method=clinitTarget.getClinitMethod();
    }
  }
  JsExpression result;
  if (method.isStatic()) {
    result=dispatchToStatic(x,method,args);
  }
 else   if (x.isStaticDispatchOnly()) {
    result=dispatchToSuper(x,method,args);
  }
 else   if (method.isOrOverridesJsFunctionMethod()) {
    result=dispatchToJsFunction(args,x.getSourceInfo());
  }
 else {
    result=dispatchToInstanceMethod(method,args,x.getSourceInfo());
  }
  push(result);
}

{
  List<JsStatement> globalStmts=jsProgram.getGlobalBlock().getStatements();
  Set<JDeclaredType> preambleTypes=generatePreamble(x,globalStmts);
  if (compilePerFile) {
    if (!minimalRebuildCache.hasPreambleTypeNames()) {
      Set<String> preambleTypeNames=Sets.newHashSet();
      for (      JDeclaredType preambleType : preambleTypes) {
        preambleTypeNames.add(preambleType.getName());
      }
      minimalRebuildCache.setPreambleTypeNames(logger,preambleTypeNames);
    }
  }
  Set<JDeclaredType> topologicallySortedBodyTypes=Sets.newLinkedHashSet();
  for (  JDeclaredType type : x.getModuleDeclaredTypes()) {
    insertInTopologicalOrder(type,topologicallySortedBodyTypes);
  }
  topologicallySortedBodyTypes.removeAll(preambleTypes);
  markPosition(globalStmts,"Program",Type.PROGRAM_START);
  for (  JDeclaredType type : topologicallySortedBodyTypes) {
    markPosition(globalStmts,type.getName(),Type.CLASS_START);
    accept(type);
    JsVars classLiteralVars=new JsVars(jsProgram.getSourceInfo());
    maybeGenerateClassLiteral(type,classLiteralVars);
    if (!classLiteralVars.isEmpty()) {
      globalStmts.add(classLiteralVars);
    }
    markPosition(globalStmts,type.getName(),Type.CLASS_END);
  }
  markPosition(globalStmts,"Program",Type.PROGRAM_END);
  generateEpilogue(globalStmts);
  return false;
}

{
  JsNameRef reference=method.isOrOverridesJsMethod() ? new JsNameRef(sourceInfo,method.getJsName()) : polymorphicNames.get(method).makeRef(sourceInfo);
  reference.setQualifier((JsExpression)pop());
switch (method.getJsPropertyAccessorType()) {
case SETTER:
    return createAssignment(reference,args.get(0));
case GETTER:
  return reference;
default :
return new JsInvocation(sourceInfo,reference,args);
}
}

{
  JField field=getClassLiteralField(type);
  if (field == null) {
    return;
  }
  if (type != null && type instanceof JDeclaredType && program.isReferenceOnly((JDeclaredType)type)) {
    return;
  }
  JsVars vars=new JsVars(jsProgram.getSourceInfo());
  JsName jsName=names.get(field);
  this.accept(field.getInitializer());
  JsExpression classObjectAlloc=pop();
  SourceInfo info=field.getSourceInfo();
  JsVar var=new JsVar(info,jsName);
  var.setInitExpr(classObjectAlloc);
  vars.add(var);
  globalStmts.add(vars);
}

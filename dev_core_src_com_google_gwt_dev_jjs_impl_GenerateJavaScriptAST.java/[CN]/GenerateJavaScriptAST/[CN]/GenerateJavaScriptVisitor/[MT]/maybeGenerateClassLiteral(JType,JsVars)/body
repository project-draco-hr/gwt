{
  JDeclarationStatement decl=classLiteralDeclarationsByType.get(type);
  if (decl == null) {
    return;
  }
  JField field=(JField)decl.getVariableRef().getTarget();
  if (type != null && type instanceof JDeclaredType && program.isReferenceOnly((JDeclaredType)type)) {
    return;
  }
  JsName jsName=names.get(field);
  this.accept(decl.getInitializer());
  JsExpression classObjectAlloc=pop();
  JsVar var=new JsVar(decl.getSourceInfo(),jsName);
  var.setInitExpr(classObjectAlloc);
  vars.add(var);
}

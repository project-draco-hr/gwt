{
  JMethod toStringMeth=program.getIndexedMethod("Object.toString");
  if (x.getMethods().contains(toStringMeth)) {
    SourceInfo sourceInfo=x.getSourceInfo();
    JsNameRef lhs=createNativeToStringRef(globalTemp.makeRef(sourceInfo));
    JsInvocation call=new JsInvocation(sourceInfo);
    JsNameRef toStringRef=new JsNameRef(sourceInfo,polymorphicNames.get(toStringMeth));
    toStringRef.setQualifier(new JsThisRef(sourceInfo));
    call.setQualifier(toStringRef);
    JsReturn jsReturn=new JsReturn(sourceInfo,call);
    JsFunction rhs=new JsFunction(sourceInfo,topScope);
    JsBlock body=new JsBlock(sourceInfo);
    body.getStatements().add(jsReturn);
    rhs.setBody(body);
    JsExpression asg=createAssignment(lhs,rhs);
    JsExprStmt stmt=asg.makeStmt();
    globalStmts.add(stmt);
    typeForStatMap.put(stmt,program.getTypeJavaLangObject());
  }
}

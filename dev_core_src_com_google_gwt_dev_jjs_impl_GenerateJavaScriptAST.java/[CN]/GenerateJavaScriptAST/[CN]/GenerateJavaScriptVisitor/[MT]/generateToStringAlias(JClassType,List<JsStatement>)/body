{
  JMethod toStringMeth=program.getIndexedMethod("Object.toString");
  if (x.methods.contains(toStringMeth)) {
    SourceInfo sourceInfo=x.getSourceInfo().makeChild("_.toString");
    JsName lhsName=objectScope.declareName("toString");
    lhsName.setObfuscatable(false);
    JsNameRef lhs=lhsName.makeRef(sourceInfo);
    lhs.setQualifier(globalTemp.makeRef(sourceInfo));
    JsInvocation call=new JsInvocation(sourceInfo);
    JsNameRef toStringRef=new JsNameRef(sourceInfo,polymorphicNames.get(toStringMeth));
    toStringRef.setQualifier(new JsThisRef(sourceInfo));
    call.setQualifier(toStringRef);
    JsReturn jsReturn=new JsReturn(sourceInfo,call);
    JsFunction rhs=new JsFunction(sourceInfo,topScope);
    JsBlock body=new JsBlock(sourceInfo);
    body.getStatements().add(jsReturn);
    rhs.setBody(body);
    JsExpression asg=createAssignment(lhs,rhs);
    globalStmts.add(new JsExprStmt(sourceInfo,asg));
  }
}

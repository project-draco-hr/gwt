{
  if (!exportNamespacePair.getLeft().equals(lastProvidedNamespace)) {
    if (!jsExportClosureStyle) {
      JsName provideFunc=indexedFunctions.get("JavaClassHierarchySetupUtil.provide").getName();
      JsNameRef provideFuncRef=provideFunc.makeRef(x.getSourceInfo());
      JsInvocation provideCall=new JsInvocation(x.getSourceInfo());
      provideCall.setQualifier(provideFuncRef);
      provideCall.getArguments().add(new JsStringLiteral(x.getSourceInfo(),exportNamespacePair.getLeft()));
      JsExprStmt provideStat=createAssignment(globalTemp.makeRef(x.getSourceInfo()),provideCall).makeStmt();
      globalStmts.add(provideStat);
    }
 else {
      if (x.getEnclosingType() != null) {
        JsNameRef lhs=getExportLhsQualifier(x,x.getQualifiedExportName());
        JsNameRef rhsRef=getExportLhsQualifier(x,x.getQualifiedExportName());
        globalStmts.add(createAssignment(lhs,new JsBinaryOperation(x.getSourceInfo(),JsBinaryOperator.OR,rhsRef,new JsObjectLiteral(x.getSourceInfo()))).makeStmt());
      }
    }
    lastProvidedNamespace=exportNamespacePair.getLeft();
  }
  return lastProvidedNamespace;
}

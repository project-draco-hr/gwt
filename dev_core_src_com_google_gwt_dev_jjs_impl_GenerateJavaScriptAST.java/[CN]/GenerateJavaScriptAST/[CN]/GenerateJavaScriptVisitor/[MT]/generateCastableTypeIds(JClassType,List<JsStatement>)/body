{
  int typeId=program.getTypeId(x);
  if (typeId >= 0) {
    JField castableTypeMapField=program.getIndexedField("Object.castableTypeMap");
    JsName castableTypeMapName=names.get(castableTypeMapField);
    if (castableTypeMapName == null) {
      return;
    }
    SourceInfo sourceInfo=jsProgram.createSourceInfoSynthetic(GenerateJavaScriptAST.class,"Castable type map");
    JsonObject jsonObject=program.getCastableTypeMap(typeId);
    accept(jsonObject);
    JsExpression objExpr=pop();
    JsNameRef fieldRef=castableTypeMapName.makeRef(sourceInfo);
    fieldRef.setQualifier(globalTemp.makeRef(sourceInfo));
    JsExpression asg=createAssignment(fieldRef,objExpr);
    JsExprStmt asgStmt=asg.makeStmt();
    globalStmts.add(asgStmt);
    typeForStatMap.put(asgStmt,x);
  }
}

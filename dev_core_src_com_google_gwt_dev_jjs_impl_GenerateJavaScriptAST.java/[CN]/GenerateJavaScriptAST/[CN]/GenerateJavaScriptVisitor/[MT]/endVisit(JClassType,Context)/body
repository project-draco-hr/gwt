{
  if (alreadyRan.contains(x)) {
    return;
  }
  alreadyRan.add(x);
  List jsFuncs=popList(x.methods.size());
  List jsFields=popList(x.fields.size());
  if (typeOracle.hasClinit(x)) {
    handleClinit((JsFunction)jsFuncs.get(0));
  }
 else {
    jsFuncs.set(0,null);
  }
  JsStatements globalStmts=jsProgram.getGlobalBlock().getStatements();
  for (int i=0; i < jsFuncs.size(); ++i) {
    JsFunction func=(JsFunction)jsFuncs.get(i);
    if (func != null) {
      globalStmts.add(func.makeStmt());
    }
  }
  if (typeOracle.isInstantiatedType(x)) {
    generateClassSetup(x,globalStmts);
  }
  for (int i=0; i < jsFields.size(); ++i) {
    JsStatement stmt=(JsStatement)jsFields.get(i);
    globalStmts.add(stmt);
  }
}

{
  boolean isString=(x == program.getTypeJavaLangString());
  for (  JMethod method : x.getMethods()) {
    SourceInfo sourceInfo=method.getSourceInfo();
    if (method.needsVtable() && !method.isAbstract()) {
      JsNameRef lhs=polymorphicNames.get(method).makeRef(sourceInfo);
      lhs.setQualifier(globalTemp.makeRef(sourceInfo));
      JsExpression rhs;
      if (isString && "toString".equals(method.getName())) {
        rhs=createNativeToStringRef(globalTemp.makeRef(sourceInfo));
      }
 else {
        rhs=methodBodyMap.get(method.getBody());
      }
      JsExpression asg=createAssignment(lhs,rhs);
      JsExprStmt asgStat=new JsExprStmt(x.getSourceInfo(),asg);
      globalStmts.add(asgStat);
      vtableInitForMethodMap.put(asgStat,method);
    }
  }
}

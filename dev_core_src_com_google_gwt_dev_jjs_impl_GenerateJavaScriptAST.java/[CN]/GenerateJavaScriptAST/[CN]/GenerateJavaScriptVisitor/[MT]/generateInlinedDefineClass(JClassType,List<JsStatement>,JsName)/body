{
  JClassType superClass=x.getSuperClass();
  String jsPrototype=getSuperPrototype(x);
  JsNameRef parentCtor=jsPrototype != null ? createJsQualifier(jsPrototype,x.getSourceInfo()) : superClass != null ? names.get(superClass).makeRef(x.getSourceInfo()) : null;
  if (parentCtor != null) {
    JsNameRef googInherits=JsUtils.createQualifiedNameRef(GOOG_INHERITS,x.getSourceInfo());
    JsExprStmt callGoogInherits=new JsInvocation(x.getSourceInfo(),googInherits,classVar.makeRef(x.getSourceInfo()),parentCtor).makeStmt();
    globalStmts.add(callGoogInherits);
    typeForStatMap.put(callGoogInherits,x);
  }
  if (x == program.getTypeJavaLangObject()) {
    setupTypeMarkerOnJavaLangObjectPrototype(x,globalStmts);
  }
  setupCastMapOnPrototype(x,globalStmts);
  if (jsPrototype != null) {
    JsStatement statement=constructInvocation(x.getSourceInfo(),"JavaClassHierarchySetupUtil.copyObjectProperties",getPrototypeQualifierOf(program.getTypeJavaLangObject(),x.getSourceInfo()),getPrototypeQualifierOf(x,x.getSourceInfo())).makeStmt();
    globalStmts.add(statement);
    typeForStatMap.put(statement,x);
  }
}

{
  if (m.isStatic() || m instanceof JConstructor) {
    return methodRef;
  }
 else {
    JsFunction makeBridgeMethod=indexedFunctions.get("JavaClassHierarchySetupUtil.makeBridgeMethod");
    JsNameRef makeBridgeMethodRef=makeBridgeMethod.getName().makeRef(methodRef.getSourceInfo());
    JsInvocation invokeBridge=new JsInvocation(methodRef.getSourceInfo());
    invokeBridge.setQualifier(makeBridgeMethodRef);
    invokeBridge.getArguments().add(methodRef);
    invokeBridge.getArguments().add(m.getType() == JPrimitiveType.LONG ? JsBooleanLiteral.TRUE : JsBooleanLiteral.FALSE);
    JsArrayLiteral arrayLiteral=new JsArrayLiteral(m.getSourceInfo());
    for (    JParameter p : m.getParams()) {
      if (p.getType() == JPrimitiveType.LONG) {
        arrayLiteral.getExpressions().add(JsBooleanLiteral.TRUE);
      }
 else {
        arrayLiteral.getExpressions().add(JsBooleanLiteral.FALSE);
      }
    }
    invokeBridge.getArguments().add(arrayLiteral);
    return invokeBridge;
  }
}

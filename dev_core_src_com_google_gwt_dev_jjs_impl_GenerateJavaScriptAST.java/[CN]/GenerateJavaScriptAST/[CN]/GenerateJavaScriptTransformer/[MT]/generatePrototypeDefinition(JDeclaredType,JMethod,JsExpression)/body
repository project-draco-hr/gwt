{
  if (functionDefinition != null) {
    generatePrototypeAssignment(method,polymorphicNames.get(method),functionDefinition);
  }
  if (method.exposesNonJsMethod()) {
    JsName internalMangledName=interfaceScope.declareName(mangleNameForPoly(method),method.getName());
    generatePrototypeDefinitionAlias(method,internalMangledName);
  }
  if (method.exposesPackagePrivateMethod()) {
    generatePrototypeDefinitionAlias(method,getPackagePrivateName(method));
  }
}

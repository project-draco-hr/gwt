{
  if (!closureCompilerFormatEnabled) {
    return;
  }
  for (  JDeclaredType type : classLiteralTypesToInstall) {
    if (shouldNotEmitTypeDefinition(type)) {
      continue;
    }
    JsNameRef classLiteralRef=createClassLiteralReference(type);
    if (classLiteralRef == null) {
      continue;
    }
    SourceInfo sourceInfo=type.getSourceInfo();
    JsExpression protoRef=getPrototypeQualifierOf(type,sourceInfo);
    JsNameRef clazzField=getIndexedFieldJsName(RuntimeConstants.OBJECT_CLAZZ).makeRef(sourceInfo);
    clazzField.setQualifier(protoRef);
    JsExprStmt stmt=createAssignment(clazzField,classLiteralRef).makeStmt();
    addTypeDefinitionStatement(type,stmt);
  }
}

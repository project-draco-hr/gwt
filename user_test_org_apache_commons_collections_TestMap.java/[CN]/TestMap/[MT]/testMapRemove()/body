{
  if (!isAddRemoveModifiable())   return;
  resetEmpty();
  Object[] keys=getSampleKeys();
  Object[] values=getSampleValues();
  for (int i=0; i < keys.length; i++) {
    Object o=map.remove(keys[i]);
    assertTrue("First map.remove should return null",o == null);
  }
  verify();
  resetFull();
  for (int i=0; i < keys.length; i++) {
    Object o=map.remove(keys[i]);
    confirmed.remove(keys[i]);
    verify();
    assertEquals("map.remove with valid key should return value",values[i],o);
  }
  Object[] other=getOtherKeys();
  resetFull();
  int size=map.size();
  for (int i=0; i < other.length; i++) {
    Object o=map.remove(other[i]);
    assertEquals("map.remove for nonexistent key should return null",o,null);
    assertEquals("map.remove for nonexistent key should not " + "shrink map",size,map.size());
  }
  verify();
}

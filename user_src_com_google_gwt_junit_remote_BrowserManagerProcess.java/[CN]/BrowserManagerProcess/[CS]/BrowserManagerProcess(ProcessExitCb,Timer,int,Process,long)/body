{
  this.cb=cb;
  this.timer=timer;
  this.process=process;
  this.token=token;
  schedule(initKeepAliveMs);
  startTime=System.currentTimeMillis();
  Thread cleanupThread=new Thread(){
    @Override public void run(){
      try {
        exitValue=process.waitFor();
        if (cleanupBrowser() != 0) {
          logger.warning("Browser " + token + "exited with bad status: "+ exitValue);
        }
 else {
          logger.info("Browser " + token + " process exited normally. "+ getElapsed()+ " milliseconds.");
        }
      }
 catch (      InterruptedException e) {
        logger.log(Level.WARNING,"Couldn't wait for process exit. token: " + token,e);
      }
    }
  }
;
  cleanupThread.setDaemon(true);
  cleanupThread.setName("Browser-" + token + "-Wait");
  cleanupThread.start();
}

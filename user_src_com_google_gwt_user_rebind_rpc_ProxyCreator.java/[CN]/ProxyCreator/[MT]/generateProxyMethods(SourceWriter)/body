{
  Set seenMethods=new HashSet();
  LinkedList workList=new LinkedList();
  workList.addLast(serviceIntf);
  while (!workList.isEmpty()) {
    JClassType curIntf=(JClassType)workList.removeFirst();
    JMethod[] methods=curIntf.getMethods();
    for (int index=0; index < methods.length; ++index) {
      JMethod method=methods[index];
      assert(method != null);
      String signature=createOverloadSignature(method);
      if (!seenMethods.contains(signature)) {
        seenMethods.add(signature);
        generateProxyEncode(w,serializableTypeOracle,curIntf,method);
        generateAsynchronousProxyMethod(w,method);
      }
    }
    JClassType[] interfaces=curIntf.getImplementedInterfaces();
    for (int index=0; index < interfaces.length; ++index) {
      workList.addLast(interfaces[index]);
    }
  }
}

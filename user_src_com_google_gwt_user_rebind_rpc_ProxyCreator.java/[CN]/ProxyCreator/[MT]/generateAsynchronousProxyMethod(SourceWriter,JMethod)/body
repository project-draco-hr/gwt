{
  JType returnType=method.getReturnType();
  JParameter[] params=method.getParameters();
  w.println();
  w.print("public void " + method.getName() + "(");
  int i;
  for (i=0; i < params.length; i++) {
    JParameter param=params[i];
    w.print((i > 0 ? ", " : "") + getJavaTypeName(param.getType()) + " "+ param.getName());
  }
  w.println((i > 0 ? ", final " : "final ") + AsyncCallback.class.getName() + " callback) {");
  w.indent();
  w.println("final " + SERIALIZATION_STREAM_READER_INSTANTIATION);
  w.println("final " + SERIALIZATION_STREAM_WRITER_INSTANTIATION);
  w.println("try {");
  w.indent();
{
    w.print("__" + method.getName() + "(streamWriter");
    for (i=0; i < params.length; i++) {
      w.print(", " + params[i].getName());
    }
    w.println(");");
  }
  w.outdent();
  w.println("} catch (" + SerializationException.class.getName() + " e) {");
  w.indentln("callback.onFailure(new " + InvocationException.class.getName() + "(e.getMessage()));");
  w.indentln("return;");
  w.println("}");
  w.println(ResponseTextHandler.class.getName() + " handler = new " + ResponseTextHandler.class.getName()+ "() {");
  w.indent();
{
    w.println("public final void onCompletion(String encodedResponse) {");
    w.indent();
{
      w.println("UncaughtExceptionHandler handler = GWT.getUncaughtExceptionHandler();");
      w.println("if (handler != null)");
      w.indent();
{
        w.println("onCompletionAndCatch(encodedResponse, handler);");
      }
      w.outdent();
      w.println("else");
      w.indent();
{
        w.println("onCompletionImpl(encodedResponse);");
      }
      w.outdent();
    }
    w.outdent();
    w.println("}");
    w.println("private void onCompletionAndCatch(String encodedResponse, UncaughtExceptionHandler handler) {");
    w.indent();
{
      w.println("try {");
      w.indent();
{
        w.println("onCompletionImpl(encodedResponse);");
      }
      w.outdent();
      w.println("} catch (Throwable e) {");
      w.indent();
{
        w.println("handler.onUncaughtException(e);");
      }
      w.outdent();
      w.println("}");
    }
    w.outdent();
    w.println("}");
    w.println("private void onCompletionImpl(String encodedResponse) {");
    w.indent();
{
      w.println("Object result = null;");
      w.println("Throwable caught = null;");
      w.println("try {");
      w.indent();
{
        w.println("if (encodedResponse.startsWith(\"{OK}\")) {");
        w.indent();
{
          w.println("streamReader.prepareToRead(encodedResponse.substring(4));");
          w.print("result = ");
          JPrimitiveType primitive=returnType.isPrimitive();
          if (primitive == JPrimitiveType.VOID) {
            w.print("null");
          }
 else {
            if (primitive != null) {
              w.print("new ");
              w.print(getObjectWrapperName(primitive));
              w.print("(");
              generateDecodeCall(w,returnType);
              w.print(")");
            }
 else {
              generateDecodeCall(w,returnType);
            }
          }
          w.println(";");
        }
        w.outdent();
        w.println("} else if (encodedResponse.startsWith(\"{EX}\")) {");
        w.indent();
{
          w.println("streamReader.prepareToRead(encodedResponse.substring(4));");
          w.println("caught = (Throwable) streamReader.readObject();");
        }
        w.outdent();
        w.println("} else {");
        w.indent();
{
          w.println("caught = new " + InvocationException.class.getName() + "(encodedResponse);");
        }
        w.outdent();
        w.println("}");
      }
      w.outdent();
      w.println("} catch (Throwable e) {");
      w.indent();
{
        w.println("caught = e;");
      }
      w.outdent();
      w.println("}");
      w.println("if (caught == null)");
      w.indent();
{
        w.println("callback.onSuccess(result);");
      }
      w.outdent();
      w.println("else");
      w.indent();
{
        w.println("callback.onFailure(caught);");
      }
      w.outdent();
    }
    w.outdent();
    w.println("}");
  }
  w.outdent();
  w.println("};");
  w.println("if (!com.google.gwt.user.client.HTTPRequest.asyncPost(getServiceEntryPoint(), streamWriter.toString(), handler))");
  w.indentln("callback.onFailure(new " + InvocationException.class.getName() + "(\"Unable to initiate the asynchronous service invocation -- check the network connection\"));");
  w.outdent();
  w.println("}");
}

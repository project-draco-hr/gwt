{
  compilerContext=compilerContextBuilder.compileMonolithic(false).build();
  ModuleDef libraryOneModule=ModuleDefLoader.loadFromClassPath(TreeLogger.NULL,compilerContext,"com.google.gwt.dev.cfg.testdata.separate.libraryone.LibraryOne",false);
  for (  BindingProperty bindingProperty : libraryOneModule.getProperties().getBindingProperties()) {
    if (!bindingProperty.getName().equals("libraryTwoProperty")) {
      continue;
    }
    assertEquals(Sets.newHashSet(bindingProperty.getDefinedValues()),Sets.newHashSet("yes","no","maybe"));
    assertEquals(Sets.newHashSet(bindingProperty.getTargetLibraryDefinedValues()),Sets.newHashSet("maybe"));
  }
  assertEquals(Sets.newHashSet(mockLibraryWriter.getNewBindingPropertyValuesByName().get("libraryTwoProperty")),Sets.newHashSet("maybe"));
  for (  ConfigurationProperty configurationProperty : libraryOneModule.getProperties().getConfigurationProperties()) {
    if (!configurationProperty.getName().equals("libraryTwoConfigProperty")) {
      continue;
    }
    assertEquals(Sets.newHashSet(configurationProperty.getValues()),Sets.newHashSet("false"));
    assertEquals(Sets.newHashSet(configurationProperty.getTargetLibraryValues()),Sets.newHashSet("false"));
  }
  assertEquals(Sets.newHashSet(mockLibraryWriter.getNewConfigurationPropertyValuesByName().get("libraryTwoConfigProperty")),Sets.newHashSet("false"));
}

{
  if (proxy == other) {
    return true;
  }
  if (!(other instanceof Annotation)) {
    return false;
  }
  Annotation otherAnnotation=(Annotation)other;
  if (annotationClass != otherAnnotation.annotationType()) {
    return false;
  }
  try {
    for (    Method method : annotationClass.getDeclaredMethods()) {
      Object myVal=method.invoke(proxy);
      Object otherVal=method.invoke(other);
      if (myVal instanceof Object[]) {
        if (!Arrays.equals((Object[])myVal,(Object[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof boolean[]) {
        if (!Arrays.equals((boolean[])myVal,(boolean[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof byte[]) {
        if (!Arrays.equals((byte[])myVal,(byte[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof char[]) {
        if (!Arrays.equals((char[])myVal,(char[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof short[]) {
        if (!Arrays.equals((short[])myVal,(short[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof int[]) {
        if (!Arrays.equals((int[])myVal,(int[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof long[]) {
        if (!Arrays.equals((long[])myVal,(long[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof float[]) {
        if (!Arrays.equals((float[])myVal,(float[])otherVal)) {
          return false;
        }
      }
 else       if (myVal instanceof double[]) {
        if (!Arrays.equals((double[])myVal,(double[])otherVal)) {
          return false;
        }
      }
 else {
        if (!myVal.equals(otherVal)) {
          return false;
        }
      }
    }
  }
 catch (  IllegalArgumentException e) {
    throw new RuntimeException(e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    throw new RuntimeException(e.getTargetException());
  }
  return true;
}

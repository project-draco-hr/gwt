{
  if (permutationRebuildCache.getJs(HEADER_NAME) == null) {
    extractOne(headerRange);
  }
  for (  NamedRange typeRange : typeRanges) {
    extractOne(typeRange);
  }
  if (permutationRebuildCache.getJs(FOOTER_NAME) == null) {
    extractOne(footerRange);
  }
  linkOne(HEADER_NAME);
  for (  String reachableTypeName : reachableTypeNames) {
    linkOne(reachableTypeName);
  }
  linkOne(FOOTER_NAME);
  logger.log(TreeLogger.INFO,"prelink JS size = " + js.length());
  logger.log(TreeLogger.INFO,"prelink sourcemap = " + sourceInfoMap.getBytes() + " bytes and "+ sourceInfoMap.getLines()+ " lines");
  js=jsBuilder.toString();
  statementRanges=statementRangesBuilder.build();
  sourceInfoMap=jsSourceMapBuilder.build();
  logger.log(TreeLogger.INFO,"postlink JS size = " + js.length());
  logger.log(TreeLogger.INFO,"postlink sourcemap = " + sourceInfoMap.getBytes() + " bytes and "+ sourceInfoMap.getLines()+ " lines");
}

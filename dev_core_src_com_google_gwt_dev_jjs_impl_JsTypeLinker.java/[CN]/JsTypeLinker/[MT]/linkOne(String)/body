{
  if (linkedTypeNames.contains(typeName)) {
    return;
  }
  linkedTypeNames.add(typeName);
  String typeJs=permutationRebuildCache.getJs(typeName);
  if (typeJs == null) {
    return;
  }
  String superTypeName=typeOracle.getSuperTypeName(typeName);
  if (superTypeName != null) {
    linkOne(superTypeName);
  }
  logger.log(TreeLogger.SPAM,"linking type " + typeName + " ("+ typeJs.length()+ " bytes)");
  StatementRanges typeStatementRanges=permutationRebuildCache.getStatementRanges(typeName);
  jsBuilder.append(typeJs);
  statementRangesBuilder.append(typeStatementRanges);
}

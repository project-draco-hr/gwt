{
  boolean didChange=false;
  JClassType type=baseType;
  while (type != null) {
    if (SerializableTypeOracleBuilder.shouldConsiderFieldsForSerialization(TreeLogger.NULL,type,true,typeFilter)) {
      JField[] fields=type.getFields();
      for (      JField field : fields) {
        if (!SerializableTypeOracleBuilder.shouldConsiderForSerialization(TreeLogger.NULL,field)) {
          continue;
        }
        if (field.getType().getLeafType() == getTypeParameter()) {
          markExposedAsArray(0);
          mightNotBeExposed=false;
          didChange=true;
          JArrayType fieldTypeAsArray=field.getType().isArray();
          if (fieldTypeAsArray != null) {
            markExposedAsArray(fieldTypeAsArray.getRank());
          }
        }
      }
    }
    type=type.getSuperclass();
  }
  return didChange;
}

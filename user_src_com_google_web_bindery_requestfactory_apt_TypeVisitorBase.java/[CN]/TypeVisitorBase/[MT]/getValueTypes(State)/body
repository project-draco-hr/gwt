{
  List<DeclaredType> types=new ArrayList<DeclaredType>();
  for (  TypeKind kind : TypeKind.values()) {
    if (kind.isPrimitive()) {
      PrimitiveType primitiveType=state.types.getPrimitiveType(kind);
      TypeElement boxedClass=state.types.boxedClass(primitiveType);
      types.add((DeclaredType)boxedClass.asType());
    }
  }
  types.add(state.findType(BigDecimal.class));
  types.add(state.findType(BigInteger.class));
  types.add(state.findType(Date.class));
  types.add(state.findType(String.class));
  types.add(state.findType(Void.class));
  types.add(state.types.getDeclaredType(state.elements.getTypeElement("com.google.web.bindery.autobean.shared.Splittable")));
  return Collections.unmodifiableList(types);
}

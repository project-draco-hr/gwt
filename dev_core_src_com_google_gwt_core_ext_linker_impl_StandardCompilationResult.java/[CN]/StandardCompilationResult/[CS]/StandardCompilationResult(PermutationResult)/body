{
  super(StandardLinkerContext.class);
  byte[][] js=permutationResult.getJs();
  this.strongName=Util.computeStrongName(js);
  byte[] serializedSymbolMap=permutationResult.getSerializedSymbolMap();
  this.statementRanges=permutationResult.getStatementRanges();
  this.permutationId=permutationResult.getPermutation().getId();
  this.jsToken=new long[js.length];
  for (int i=0; i < jsToken.length; ++i) {
    jsToken[i]=diskCache.writeByteArray(js[i]);
  }
  this.symbolToken=diskCache.writeByteArray(serializedSymbolMap);
}

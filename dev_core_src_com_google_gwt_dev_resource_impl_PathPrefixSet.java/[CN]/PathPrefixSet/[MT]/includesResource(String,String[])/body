{
  assertValidAbstractResourcePathName(resourceAbstractPathName);
  ResourceResolution resourceResolution=new ResourceResolution();
  TrieNode currentNode=rootTrieNode;
  List<PathPrefix> mostSpecificPrefixes=rootTrieNode.getPathPrefixes();
  for (  String part : parts) {
    assert(!"".equals(part));
    TrieNode childNode=currentNode.findChild(part);
    if (childNode == null) {
      break;
    }
    if (childNode.hasPrefixes) {
      List<PathPrefix> moreSpecificPrefixes=childNode.getPathPrefixes();
      if (!mergePathPrefixes) {
        for (        PathPrefix candidatePrefix : moreSpecificPrefixes) {
          if (candidatePrefix.getJudgement(resourceAbstractPathName).isInclude()) {
            resourceResolution.addSourceModuleName(candidatePrefix.getModuleName());
          }
        }
      }
      mostSpecificPrefixes=moreSpecificPrefixes;
    }
    currentNode=childNode;
  }
  PathPrefix chiefPrefix=null;
  Judgement chiefJudgement=null;
  for (  PathPrefix candidatePrefix : mostSpecificPrefixes) {
    Judgement judgement=candidatePrefix.getJudgement(resourceAbstractPathName);
    if (chiefJudgement == null || judgement.getPriority() > chiefJudgement.getPriority()) {
      chiefPrefix=candidatePrefix;
      chiefJudgement=judgement;
    }
  }
  if (chiefPrefix == null || !chiefJudgement.isInclude()) {
    return null;
  }
  resourceResolution.setPathPrefix(chiefPrefix);
  return resourceResolution;
}

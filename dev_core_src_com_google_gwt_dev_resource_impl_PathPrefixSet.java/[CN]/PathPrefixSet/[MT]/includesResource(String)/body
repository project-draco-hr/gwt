{
  assertValidAbstractResourcePathName(resourceAbstractPathName);
  TrieNode currentNode=rootTrieNode;
  PathPrefix mostSpecificPrefix=rootTrieNode.getPathPrefix();
  String[] parts=resourceAbstractPathName.split("/");
  for (int i=0, n=parts.length - 1; i < n; ++i) {
    String part=parts[i];
    assert(!"".equals(part));
    TrieNode childNode=currentNode.findChild(part);
    if (childNode != null) {
      PathPrefix moreSpecificPrefix=childNode.getPathPrefix();
      if (moreSpecificPrefix != null) {
        mostSpecificPrefix=moreSpecificPrefix;
      }
      currentNode=childNode;
    }
 else {
      break;
    }
  }
  if (mostSpecificPrefix == null) {
    return false;
  }
  return mostSpecificPrefix.allows(resourceAbstractPathName);
}

{
  OptimizerStats stats=new OptimizerStats(NAME);
  SingleInvocationVisitor s=new SingleInvocationVisitor();
  s.accept(program);
  Set<JsNode> candidates=new LinkedHashSet<JsNode>(toInline);
  candidates.addAll(s.inliningCandidates());
  RedefinedFunctionCollector d=new RedefinedFunctionCollector();
  d.accept(program);
  RecursionCollector rc=new RecursionCollector();
  for (  JsNode fn : candidates) {
    rc.accept(fn);
  }
  InliningVisitor v=new InliningVisitor(program,candidates);
  v.blacklist(d.getRedefined());
  v.blacklist(rc.getRecursive());
  v.accept(program);
  if (v.didChange()) {
    stats.recordModified();
  }
  return stats;
}

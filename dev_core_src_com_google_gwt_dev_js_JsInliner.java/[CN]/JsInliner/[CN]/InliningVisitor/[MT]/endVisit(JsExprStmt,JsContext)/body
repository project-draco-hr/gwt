{
  JsExpression e=x.getExpression();
  if (ctx.canRemove() && !x.getExpression().hasSideEffects()) {
    ctx.removeMe();
    return;
  }
  List<JsExprStmt> statements=new ArrayList<JsExprStmt>();
  while (e instanceof JsBinaryOperation) {
    JsBinaryOperation op=(JsBinaryOperation)e;
    if (!op.getOperator().equals(JsBinaryOperator.COMMA)) {
      break;
    }
    if (op.getArg2().hasSideEffects()) {
      statements.add(0,op.getArg2().makeStmt());
    }
    e=op.getArg1();
  }
  if (e.hasSideEffects()) {
    statements.add(0,e.makeStmt());
  }
  if (statements.size() == 0) {
    if (ctx.canRemove()) {
      ctx.removeMe();
    }
 else {
      ctx.replaceMe(new JsEmpty(x.getSourceInfo()));
    }
  }
 else   if (x.getExpression() != statements.get(0).getExpression()) {
    if (!ctx.canInsert()) {
      JsBlock b=new JsBlock(x.getSourceInfo());
      b.getStatements().addAll(statements);
      ctx.replaceMe(b);
      return;
    }
 else {
      for (      JsStatement s : statements) {
        ctx.insertBefore(s);
      }
      ctx.removeMe();
    }
  }
}

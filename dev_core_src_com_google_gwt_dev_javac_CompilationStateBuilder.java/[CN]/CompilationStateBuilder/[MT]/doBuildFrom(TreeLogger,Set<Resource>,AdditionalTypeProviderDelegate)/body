{
  List<CompilationUnitBuilder> builders=new ArrayList<CompilationUnitBuilder>();
  Map<CompilationUnitBuilder,CompilationUnit> cachedUnits=new IdentityHashMap<CompilationUnitBuilder,CompilationUnit>();
  CompileMoreLater compileMoreLater=new CompileMoreLater(compilerDelegate);
  for (  Resource resource : resources) {
    String typeName=Shared.toTypeName(resource.getPath());
    ResourceCompilationUnitBuilder builder=new ResourceCompilationUnitBuilder(typeName,resource);
    CompilationUnit cachedUnit=unitCache.find(resource.getLocation());
    if (cachedUnit != null) {
      if (cachedUnit.getLastModified() == resource.getLastModified()) {
        cachedUnits.put(builder,cachedUnit);
        compileMoreLater.addValidUnit(cachedUnit);
        continue;
      }
      unitCache.remove(cachedUnit);
    }
    builders.add(builder);
  }
  logger.log(TreeLogger.TRACE,"Found " + cachedUnits.size() + " cached units.  Used "+ cachedUnits.size()+ " / "+ resources.size()+ " units from cache.");
  Collection<CompilationUnit> resultUnits=compileMoreLater.compile(logger,builders,cachedUnits,CompilerEventType.JDT_COMPILER_CSB_FROM_ORACLE);
  return new CompilationState(logger,resultUnits,compileMoreLater);
}

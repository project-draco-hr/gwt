{
  short[] a1={9,8,7,5,1};
  short[] ret=Arrays.copyOfRange(a1,0,a1.length);
  assertNotSame(a1,ret);
  assertTrue(Arrays.equals(a1,ret));
  ret=Arrays.copyOfRange(a1,0,2);
  assertTrue(Arrays.equals(new short[]{9,8},ret));
  ret=Arrays.copyOfRange(a1,2,4);
  assertTrue(Arrays.equals(new short[]{7,5},ret));
  ret=Arrays.copyOfRange(a1,3,6);
  assertTrue(Arrays.equals(new short[]{5,1,0},ret));
  ret=Arrays.copyOfRange(a1,0,0);
  assertTrue(Arrays.equals(new short[0],ret));
  ret=Arrays.copyOfRange(a1,0,a1.length * 2);
  assertEquals(a1.length * 2,ret.length);
  int i=0;
  for (; i < a1.length; i++) {
    assertEquals(a1[i],ret[i]);
  }
  for (; i < ret.length; i++) {
    assertEquals((short)0,ret[i]);
  }
  short[] emptyArray={};
  ret=Arrays.copyOfRange(emptyArray,0,0);
  assertTrue(Arrays.equals(new short[0],ret));
  ret=Arrays.copyOfRange(emptyArray,0,5);
  assertEquals(5,ret.length);
  for (; i < ret.length; i++) {
    assertEquals((short)0,ret[i]);
  }
}

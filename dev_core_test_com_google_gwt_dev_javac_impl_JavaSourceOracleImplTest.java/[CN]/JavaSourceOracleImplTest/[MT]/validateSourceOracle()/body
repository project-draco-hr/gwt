{
  Map<String,JavaSourceFile> sourceMap=sourceOracle.getSourceMap();
  Set<String> classNames=sourceOracle.getClassNames();
  Set<JavaSourceFile> sourceFiles=sourceOracle.getSourceFiles();
  assertEquals(sourceMap.keySet(),classNames);
  assertEquals(new HashSet<JavaSourceFile>(sourceMap.values()),sourceFiles);
  Map<String,Resource> resourceMap=new HashMap<String,Resource>(resourceOracle.getResourceMap());
  assertEquals(resourceMap.size(),sourceMap.size());
  for (  Entry<String,JavaSourceFile> entry : sourceMap.entrySet()) {
    String className=entry.getKey();
    JavaSourceFile sourceFile=entry.getValue();
    assertEquals(className,sourceFile.getTypeName());
    assertEquals(Shared.getPackageName(className),sourceFile.getPackageName());
    assertEquals(Shared.getShortName(className),sourceFile.getShortName());
    String expectedPath=Shared.toPath(className);
    assertTrue(resourceMap.containsKey(expectedPath));
    Resource resource=resourceMap.remove(expectedPath);
    assertNotNull(resource);
    assertEquals(Shared.readContent(resource.openContents()),sourceFile.readSource());
  }
  assertEquals(0,resourceMap.size());
  assertSame(sourceMap,sourceOracle.getSourceMap());
  assertSame(sourceFiles,sourceOracle.getSourceFiles());
  assertSame(classNames,sourceOracle.getClassNames());
}

{
  Date date=new Date();
{
    String rfc3339str="1985-04-12T23:20:50.52-08:00";
    assertTrue(parse("yyyy-MM-dd'T'HH:mm:ss.SSZ",rfc3339str,0,date) > 0);
    long expectedTimeUTC=Date.UTC(1985 - 1900,3,12,23 + 8,20,50);
    Date expectedDate=new Date(expectedTimeUTC);
    assertEquals(expectedDate.getYear(),date.getYear());
    assertEquals(expectedDate.getMonth(),date.getMonth());
    assertEquals(expectedDate.getDate(),date.getDate());
    assertEquals(expectedDate.getHours(),date.getHours());
    assertEquals(expectedDate.getMinutes(),date.getMinutes());
    assertEquals(expectedDate.getSeconds(),date.getSeconds());
    assertEquals(520,date.getTime() % 1000);
  }
{
    String rfc3339str="1985-04-12T23:20:50.52Z";
    if (rfc3339str.endsWith("Z")) {
      StringBuffer strbuf=new StringBuffer(rfc3339str);
      strbuf.deleteCharAt(rfc3339str.length() - 1);
      strbuf.append("+00:00");
      rfc3339str=strbuf.toString();
    }
    assertTrue(parse("yyyy-MM-dd'T'HH:mm:ss.SSZ",rfc3339str,0,date) > 0);
    long expectedTimeUTC=Date.UTC(85,3,12,23 + 0,20,50);
    Date expectedDate=new Date(expectedTimeUTC);
    assertEquals(expectedDate.getYear(),date.getYear());
    assertEquals(expectedDate.getMonth(),date.getMonth());
    assertEquals(expectedDate.getDate(),date.getDate());
    assertEquals(expectedDate.getHours(),date.getHours());
    assertEquals(expectedDate.getMinutes(),date.getMinutes());
    assertEquals(expectedDate.getSeconds(),date.getSeconds());
    assertEquals(520,date.getTime() % 1000);
  }
}

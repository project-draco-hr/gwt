{
  Date date=new Date();
{
    String time_15_26_28="GMT-07:00\u4E0A\u5348015:26:28";
    DateTimeFormat.getFormat(PredefinedFormat.TIME_FULL).parse(time_15_26_28,0,date);
    long expectedTimeUTC=Date.UTC(date.getYear(),date.getMonth(),date.getDate(),15 + 7,26,28);
    Date expectedDate=new Date(expectedTimeUTC);
    assertEquals(expectedDate.getHours(),date.getHours());
    assertEquals(expectedDate.getMinutes(),date.getMinutes());
    assertEquals(expectedDate.getSeconds(),date.getSeconds());
  }
{
    String date_2006_07_24="2006\u5E747\u670824\u65e5\u661f\u671f\u4e00";
    assertTrue(DateTimeFormat.getFullDateFormat().parse(date_2006_07_24,0,date) > 0);
    long localTzOffset=new Date().getTimezoneOffset();
    long expectedTimeUTC=Date.UTC(2006 - 1900,7 - 1,24,0,0,0);
    long localTzOffsetMillis=localTzOffset * 60 * 1000;
    expectedTimeUTC+=localTzOffsetMillis;
    Date expectedDate=new Date(expectedTimeUTC);
    assertEquals(expectedDate.getYear(),date.getYear());
    assertEquals(expectedDate.getMonth(),date.getMonth());
    assertEquals(expectedDate.getDate(),date.getDate());
  }
{
    String date_2006_07_24="2006\u5E747\u670824\u65e5";
    DateTimeFormat.getLongDateFormat().parse(date_2006_07_24,0,date);
    long localTzOffset=new Date().getTimezoneOffset();
    long expectedTimeUTC=Date.UTC(2006 - 1900,7 - 1,24,0,0,0);
    long localTzOffsetMillis=localTzOffset * 60 * 1000;
    expectedTimeUTC+=localTzOffsetMillis;
    Date expectedDate=new Date(expectedTimeUTC);
    assertEquals(expectedDate.getYear(),date.getYear());
    assertEquals(expectedDate.getMonth(),date.getMonth());
    assertEquals(expectedDate.getDate(),date.getDate());
  }
}

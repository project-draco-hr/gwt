{
  ToolBase.legacyWarn(GWTCompiler.class,Compiler.class);
  SpeedTracerLogger.init();
  Event compileEvent=SpeedTracerLogger.start(CompilerEventType.COMPILE);
  final LegacyCompilerOptions options=new GWTCompilerOptionsImpl();
  boolean success=false;
  if (new ArgProcessor(options).processArgs(args)) {
    CompileTask task=new CompileTask(){
      public boolean run(      TreeLogger logger) throws UnableToCompleteException {
        FutureTask<UpdateResult> updater=null;
        if (!options.isUpdateCheckDisabled()) {
          updater=CheckForUpdates.checkForUpdatesInBackgroundThread(logger,CheckForUpdates.ONE_DAY);
        }
        boolean success=new GWTCompiler(options).run(logger);
        if (success) {
          CheckForUpdates.logUpdateAvailable(logger,updater);
        }
        return success;
      }
    }
;
    if (CompileTaskRunner.runWithAppropriateLogger(options,task)) {
      success=true;
    }
  }
  compileEvent.end();
  System.exit(success ? 0 : 1);
}

{
  logger=logger.branch(TreeLogger.DEBUG,"Compiling permutations",null);
  Property[] orderedProps=perms.getOrderedProperties();
  int permNumber=1;
  for (Iterator<String[]> iter=perms.iterator(); iter.hasNext(); ++permNumber) {
    String[] orderedPropValues=iter.next();
    String js=realizePermutation(logger,orderedProps,orderedPropValues,permNumber,generatedArtifacts);
    if (js == null) {
      continue;
    }
    StandardCompilationResult compilation=linkerContext.getCompilation(logger,js);
    Map<SelectionProperty,String> unboundProperties=new HashMap<SelectionProperty,String>();
    for (int i=0; i < orderedProps.length; i++) {
      SelectionProperty key=linkerContext.getProperty(orderedProps[i].getName());
      if (key.tryGetValue() != null) {
        continue;
      }
      unboundProperties.put(key,orderedPropValues[i]);
    }
    compilation.addSelectionPermutation(unboundProperties);
  }
}

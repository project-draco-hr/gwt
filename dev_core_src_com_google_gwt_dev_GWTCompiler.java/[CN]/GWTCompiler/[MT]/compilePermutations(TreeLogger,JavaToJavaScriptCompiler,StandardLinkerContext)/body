{
  PerfLogger.start("Compiling " + perms.size() + " permutations");
  int threadCount=computeThreadCount(logger,jjs);
  PermutationManager manager=new PermutationManager(logger.branch(TreeLogger.DEBUG,"Compiling permutations",null),linkerContext,rebindPermOracle,threadCount);
  Thread[] threads=new Thread[threadCount];
  for (int i=0; i < threadCount; ++i) {
    threads[i]=new Thread(new PermutationWorker(manager,jjs));
  }
  for (  Thread thread : threads) {
    thread.start();
  }
  for (  Thread thread : threads) {
    try {
      thread.join();
    }
 catch (    InterruptedException e) {
      throw new RuntimeException("Unexpected interruption");
    }
  }
  PerfLogger.end();
  if (manager.failed) {
    throw new UnableToCompleteException();
  }
}

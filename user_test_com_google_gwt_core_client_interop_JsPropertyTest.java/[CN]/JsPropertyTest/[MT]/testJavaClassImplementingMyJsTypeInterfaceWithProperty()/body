{
  MyJavaTypeImplementingMyJsTypeInterfaceWithProperty obj=new MyJavaTypeImplementingMyJsTypeInterfaceWithProperty();
  assertEquals(0 + GET_X,getProperty(obj,"x"));
  assertEquals(0 + GET_X,obj.getX());
  assertEquals(0,obj.x);
  setProperty(obj,"x",10);
  assertEquals(10 + GET_X + SET_X,getProperty(obj,"x"));
  assertEquals(10 + GET_X + SET_X,obj.getX());
  assertEquals(10 + SET_X,obj.x);
  obj.setX(12);
  assertEquals(12 + GET_X + SET_X,getProperty(obj,"x"));
  assertEquals(12 + GET_X + SET_X,obj.getX());
  assertEquals(12 + SET_X,obj.x);
  MyJsTypeInterfaceWithProperty intf=new MyJavaTypeImplementingMyJsTypeInterfaceWithProperty();
  assertEquals(0 + GET_X,getProperty(intf,"x"));
  assertEquals(0 + GET_X,intf.getX());
  assertEquals(0,((MyJavaTypeImplementingMyJsTypeInterfaceWithProperty)intf).x);
  setProperty(intf,"x",10);
  assertEquals(10 + GET_X + SET_X,getProperty(intf,"x"));
  assertEquals(10 + GET_X + SET_X,intf.getX());
  assertEquals(10 + SET_X,((MyJavaTypeImplementingMyJsTypeInterfaceWithProperty)intf).x);
  intf.setX(12);
  assertEquals(12 + GET_X + SET_X,getProperty(intf,"x"));
  assertEquals(12 + GET_X + SET_X,intf.getX());
  assertEquals(12 + SET_X,((MyJavaTypeImplementingMyJsTypeInterfaceWithProperty)intf).x);
}

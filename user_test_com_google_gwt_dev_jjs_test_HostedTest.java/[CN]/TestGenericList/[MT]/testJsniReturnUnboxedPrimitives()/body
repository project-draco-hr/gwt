{
class Inner {
    native boolean nativeJsniReturnUnboxedBoolean();
    native byte nativeJsniReturnUnboxedByte();
    native char nativeJsniReturnUnboxedCharacter();
    native double nativeJsniReturnUnboxedDouble();
    native float nativeJsniReturnUnboxedFloat();
    native int nativeJsniReturnUnboxedInteger();
    native short nativeJsniReturnUnboxedShort();
  }
  Inner inner=new Inner();
  assertTrue("Unboxed boolean",inner.nativeJsniReturnUnboxedBoolean() == true);
  assertTrue("Unboxed byte",inner.nativeJsniReturnUnboxedByte() == (byte)99);
  assertTrue("Unboxed char",inner.nativeJsniReturnUnboxedCharacter() == (char)77);
  assertTrue("Unboxed double",inner.nativeJsniReturnUnboxedDouble() == 1234.56789);
  assertTrue("Unboxed float",inner.nativeJsniReturnUnboxedFloat() == (float)1234.5);
  assertTrue("Unboxed int",inner.nativeJsniReturnUnboxedInteger() == 9876543);
  assertTrue("Unboxed short",inner.nativeJsniReturnUnboxedShort() == (short)1234);
}

{
  final Dependencies dependencies=new Dependencies();
  TypeRefVisitor trv=new TypeRefVisitor(){
    protected void onTypeRef(    SourceTypeBinding referencedType,    CompilationUnitDeclaration unitOfReferrer){
      String referencedFn=String.valueOf(referencedType.getFileName());
      CompilationUnitDeclaration referencedCup=(CompilationUnitDeclaration)cudsByFileName.get(referencedFn);
      String fileName=String.valueOf(unitOfReferrer.getFileName());
      dependencies.add(fileName,referencedFn);
    }
  }
;
  for (Iterator iter=cudsByFileName.values().iterator(); iter.hasNext(); ) {
    CompilationUnitDeclaration cud=(CompilationUnitDeclaration)iter.next();
    cud.traverse(trv,cud.scope);
  }
  Set toTraverse=new HashSet(changedFiles);
  for (Iterator iter=toTraverse.iterator(); iter.hasNext(); ) {
    String fileName=(String)iter.next();
    changedFiles.addAll(dependencies.transitiveClosure(fileName));
  }
}

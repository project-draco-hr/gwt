{
  Set invalidTypes=new HashSet();
  if (logger.isLoggable(TreeLogger.TRACE)) {
    TreeLogger branch=logger.branch(TreeLogger.TRACE,"The following compilation units have changed since " + "the last compilation to bytecode",null);
    for (Iterator iter=changedFiles.iterator(); iter.hasNext(); ) {
      String filename=(String)iter.next();
      branch.log(TreeLogger.TRACE,filename,null);
    }
  }
  for (Iterator iter=byteCodeCache.keySet().iterator(); iter.hasNext(); ) {
    Object key=iter.next();
    ByteCode byteCode=((ByteCode)(byteCodeCache.get(key)));
    if (byteCode != null) {
      String location=byteCode.getLocation();
      if (changedFiles.contains(location)) {
        String binaryTypeName=byteCode.getBinaryTypeName();
        invalidTypes.add(binaryTypeName);
        removeFromCache(logger,binaryTypeName);
      }
    }
  }
  compiler.invalidateUnitsInFiles(changedFiles,invalidTypes);
  changedFiles.clear();
}

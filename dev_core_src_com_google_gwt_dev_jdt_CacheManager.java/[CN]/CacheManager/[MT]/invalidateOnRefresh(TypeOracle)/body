{
  if (!isTypeOracleBuilderFirstTime()) {
    addVolatileFiles(changedFiles);
    addDependentsToChangedFiles();
    for (Iterator iter=changedFiles.iterator(); iter.hasNext(); ) {
      String location=(String)iter.next();
      CompilationUnitProvider cup=(CompilationUnitProvider)getCupsByLocation().get(location);
      unitsByCup.remove(location);
      Util.invokeInaccessableMethod(TypeOracle.class,"invalidateTypesInCompilationUnit",new Class[]{CompilationUnitProvider.class},typeOracle,new Object[]{cup});
    }
    astCompiler.invalidateChangedFiles(changedFiles,invalidatedTypes);
  }
 else {
    becomeTypeOracleNotFirstTime();
  }
}

{
  String[][] md=method.getMetaData(METADATA_TAG);
  if (md.length == 1) {
    int lastTagIndex=md.length - 1;
    int lastValueIndex=md[lastTagIndex].length - 1;
    String imageNameFromMetaData=md[lastTagIndex][lastValueIndex];
    if (imageNameFromMetaData.indexOf("/") == -1) {
      String pkgName=method.getEnclosingType().getPackage().getName();
      imageNameFromMetaData=pkgName.replace('.','/') + "/" + imageNameFromMetaData;
    }
    URL imageResourceURL=getClass().getClassLoader().getResource(imageNameFromMetaData);
    if (imageResourceURL == null) {
      logger.log(TreeLogger.ERROR,"Resource " + imageNameFromMetaData + " not found on classpath (is the name specified as Class.getResource() would expect?)",null);
      throw new UnableToCompleteException();
    }
    return imageNameFromMetaData;
  }
  String imageNameFromMethod=null;
  String packageAndMethodName=method.getEnclosingType().getPackage().getName().replace('.','/') + '/' + method.getName();
  for (int i=0; i < IMAGE_FILE_EXTENSIONS.length; i++) {
    String possibleImageName=packageAndMethodName + '.' + IMAGE_FILE_EXTENSIONS[i];
    URL imageResourceURL=getClass().getClassLoader().getResource(possibleImageName);
    if (imageResourceURL != null) {
      imageNameFromMethod=possibleImageName;
      break;
    }
  }
  if (imageNameFromMethod == null) {
    StringBuffer errorStringBuf=new StringBuffer();
    for (int i=0; i < IMAGE_FILE_EXTENSIONS.length; i++) {
      errorStringBuf.append(IMAGE_FILE_EXTENSIONS[i]);
      if (i != IMAGE_FILE_EXTENSIONS.length - 1) {
        errorStringBuf.append(", ");
      }
    }
    logger.log(TreeLogger.ERROR,"Resource " + packageAndMethodName + ".("+ errorStringBuf.toString()+ ") not found on classpath (is the name specified as Class.getResource() would expect?)",null);
    throw new UnableToCompleteException();
  }
  return imageNameFromMethod;
}

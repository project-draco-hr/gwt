{
  String moduleName=getModuleNameFromRequest(target);
  if (moduleName == null) {
    throw new RuntimeException("invalid request (shouldn't happen): " + target);
  }
  Outbox box=outboxes.findByOutputModuleName(moduleName);
  if (box == null) {
    PageUtil.sendUnavailable(response,logger,"No such module: " + moduleName);
    return;
  }
 else   if (box.containsStubCompile()) {
    PageUtil.sendUnavailable(response,logger,"This module hasn't been compiled yet.");
    return;
  }
  String rootDir=SOURCEMAP_PATH + moduleName + "/";
  String rest=target.substring(rootDir.length());
  if (rest.isEmpty()) {
    sendDirectoryListPage(box,response,logger);
  }
 else   if (rest.equals("gwtSourceMap.json")) {
    sendSourceMap(moduleName,box.findSourceMapForOnePermutation(),request,response,logger);
  }
 else   if (rest.endsWith("/")) {
    sendFileListPage(box,rest,response,logger);
  }
 else   if (rest.endsWith(".java")) {
    sendSourceFile(box,rest,request.getQueryString(),response,logger);
  }
 else {
    String strongName=getStrongNameFromSourcemapFilename(rest);
    if (strongName != null) {
      File sourceMap=box.findSourceMap(strongName).getAbsoluteFile();
      sendSourceMap(moduleName,sourceMap,request,response,logger);
    }
 else {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      logger.log(TreeLogger.WARN,"returned not found for request: " + target);
    }
  }
}

{
  if (config == null) {
synchronized (this) {
      if (config != null) {
        return;
      }
      try {
        final String serverOperation=getServletContext().getInitParameter(SERVER_OPERATION_CONTEXT_PARAM);
        if (null == serverOperation) {
          failConfig();
        }
        Class<?> clazz=Class.forName(serverOperation);
        if (Config.class.isAssignableFrom(clazz)) {
          config=((Class<? extends Config>)clazz).newInstance();
          tokenToEntityRecord=new HashMap<String,EntityRecordPair>();
          for (          Class<? extends Record> recordClass : config.recordTypes()) {
            ServerType serverType=recordClass.getAnnotation(ServerType.class);
            String token=(String)recordClass.getField("TOKEN").get(null);
            if (token == null) {
              throw new IllegalStateException("TOKEN field on " + recordClass.getName() + " can not be null");
            }
            EntityRecordPair previousValue=tokenToEntityRecord.get(token);
            if (previousValue != null) {
              throw new IllegalStateException("TOKEN fields have to be unique. TOKEN fields for both " + recordClass.getName() + " and "+ previousValue.record.getName()+ " have the same value, value = "+ token);
            }
            tokenToEntityRecord.put(token,new EntityRecordPair(serverType.type(),recordClass));
          }
        }
      }
 catch (      ClassNotFoundException e) {
        failConfig(e);
      }
catch (      InstantiationException e) {
        failConfig(e);
      }
catch (      IllegalAccessException e) {
        failConfig(e);
      }
catch (      SecurityException e) {
        failConfig(e);
      }
catch (      ClassCastException e) {
        failConfig(e);
      }
catch (      NoSuchFieldException e) {
        failConfig(e);
      }
    }
  }
}

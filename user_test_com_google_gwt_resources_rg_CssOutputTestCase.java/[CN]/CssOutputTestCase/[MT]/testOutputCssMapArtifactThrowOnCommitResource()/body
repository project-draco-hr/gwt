{
  UnitTestTreeLogger.Builder builder=new UnitTestTreeLogger.Builder();
  builder.expectWarn("Error trying to commit artifact: cssResource/com.test.Bundle.cssMethod.cssmap",null);
  UnitTestTreeLogger testLogger=builder.createLogger();
  ResourceContext mockResourceContext=mock(ResourceContext.class);
  Map<JMethod,String> testMap=new HashMap<JMethod,String>();
  OutputStream mockOutputStream=mock(OutputStream.class);
  GeneratorContext mockGeneratorContext=mock(GeneratorContext.class);
  when(mockResourceContext.getGeneratorContext()).thenReturn(mockGeneratorContext);
  when(mockGeneratorContext.tryCreateResource(testLogger,"cssResource/com.test.Bundle.cssMethod.cssmap")).thenReturn(mockOutputStream);
  when(mockGeneratorContext.commitResource(testLogger,mockOutputStream)).thenThrow(new UnableToCompleteException());
  JMethod method=mock(JMethod.class);
  JClassType bundleType=mock(JClassType.class);
  when(method.getEnclosingType()).thenReturn(bundleType);
  when(bundleType.getQualifiedSourceName()).thenReturn("com.test.Bundle");
  when(method.getName()).thenReturn("cssMethod");
  CssResourceGenerator crg=new CssResourceGenerator();
  crg.outputCssMapArtifact(testLogger,mockResourceContext,method,testMap);
  testLogger.assertCorrectLogEntries();
  verify(mockGeneratorContext).tryCreateResource(testLogger,"cssResource/com.test.Bundle.cssMethod.cssmap");
  verify(mockGeneratorContext).commitResource(testLogger,mockOutputStream);
}

{
  int[] modulusDigits=modulus.digits;
  int modulusLen=modulus.numberLength;
  long outerCarry=0;
  for (int i=0; i < modulusLen; i++) {
    long innnerCarry=0;
    int m=(int)Multiplication.unsignedMultAddAdd(res[i],n2,0,0);
    for (int j=0; j < modulusLen; j++) {
      innnerCarry=Multiplication.unsignedMultAddAdd(m,modulusDigits[j],res[i + j],(int)innnerCarry);
      res[i + j]=(int)innnerCarry;
      innnerCarry>>>=32;
    }
    outerCarry+=(res[i + modulusLen] & 0xFFFFFFFFL) + innnerCarry;
    res[i + modulusLen]=(int)outerCarry;
    outerCarry>>>=32;
  }
  res[modulusLen << 1]=(int)outerCarry;
  for (int j=0; j < modulusLen + 1; j++) {
    res[j]=res[j + modulusLen];
  }
}

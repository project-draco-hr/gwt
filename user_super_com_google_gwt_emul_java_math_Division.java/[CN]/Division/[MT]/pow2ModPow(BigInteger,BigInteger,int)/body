{
  BigInteger res=BigInteger.ONE;
  BigInteger e=exponent.copy();
  BigInteger baseMod2toN=base.copy();
  BigInteger res2;
  if (base.testBit(0)) {
    inplaceModPow2(e,j - 1);
  }
  inplaceModPow2(baseMod2toN,j);
  for (int i=e.bitLength() - 1; i >= 0; i--) {
    res2=res.copy();
    inplaceModPow2(res2,j);
    res=res.multiply(res2);
    if (BitLevel.testBit(e,i)) {
      res=res.multiply(baseMod2toN);
      inplaceModPow2(res,j);
    }
  }
  inplaceModPow2(res,j);
  return res;
}

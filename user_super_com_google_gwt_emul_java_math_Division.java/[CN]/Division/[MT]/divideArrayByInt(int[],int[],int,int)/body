{
  long rem=0;
  long bLong=divisor & 0xffffffffL;
  for (int i=srcLength - 1; i >= 0; i--) {
    long temp=(rem << 32) | (src[i] & 0xffffffffL);
    long quot;
    if (temp >= 0) {
      quot=(temp / bLong);
      rem=(temp % bLong);
    }
 else {
      long aPos=temp >>> 1;
      long bPos=divisor >>> 1;
      quot=aPos / bPos;
      rem=aPos % bPos;
      rem=(rem << 1) + (temp & 1);
      if ((divisor & 1) != 0) {
        if (quot <= rem) {
          rem-=quot;
        }
 else {
          if (quot - rem <= bLong) {
            rem+=bLong - quot;
            quot-=1;
          }
 else {
            rem+=(bLong << 1) - quot;
            quot-=2;
          }
        }
      }
    }
    dest[i]=(int)(quot & 0xffffffffL);
  }
  return (int)rem;
}

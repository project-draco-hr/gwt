{
  long quot;
  long rem;
  long bLong=b & 0xffffffffL;
  if (a >= 0) {
    quot=(a / bLong);
    rem=(a % bLong);
  }
 else {
    long aPos=a >>> 1;
    long bPos=b >>> 1;
    quot=aPos / bPos;
    rem=aPos % bPos;
    rem=(rem << 1) + (a & 1);
    if ((b & 1) != 0) {
      if (quot <= rem) {
        rem-=quot;
      }
 else {
        if (quot - rem <= bLong) {
          rem+=bLong - quot;
          quot-=1;
        }
 else {
          rem+=(bLong << 1) - quot;
          quot-=2;
        }
      }
    }
  }
  return (rem << 32) | (quot & 0xffffffffL);
}

{
  if (maybeEntityProxy instanceof BaseProxy) {
    AutoBean<BaseProxy> bean=AutoBeanUtils.getAutoBean((BaseProxy)maybeEntityProxy);
    Object domain=bean.getTag(Constants.DOMAIN_OBJECT);
    if (domain == null && detectDeadEntities) {
      throw new ReportableException(new DeadEntityException("The requested entity is not available on the server"));
    }
    return domain;
  }
 else   if (maybeEntityProxy instanceof Collection<?>) {
    Collection<Object> accumulator;
    if (maybeEntityProxy instanceof List<?>) {
      accumulator=new ArrayList<Object>();
    }
 else     if (maybeEntityProxy instanceof Set<?>) {
      accumulator=new HashSet<Object>();
    }
 else {
      throw new ReportableException("Unsupported collection type " + maybeEntityProxy.getClass().getName());
    }
    for (    Object o : (Collection<?>)maybeEntityProxy) {
      accumulator.add(resolveDomainValue(o,detectDeadEntities));
    }
    return accumulator;
  }
  return maybeEntityProxy;
}

{
  if ((entries.incrementAndGet() > rehashAt) && !rehashing.getAndSet(true)) {
    int length=table.length() << 1;
    AtomicReferenceArray<Entry> newTable=new AtomicReferenceArray<StringInterner.Entry>(length);
    rehashAt=(LOAD_FACTOR_PERCENT * length) / 100;
    ForwardingEntry forwardingEntry=new ForwardingEntry(newTable);
    int mask=getMask(newTable);
    int emptyEntries=0;
    for (int i=0, c=table.length(); i < c; i++) {
      ValueEntry head=null;
      do {
        ValueEntry runUntil=head;
        head=(ValueEntry)table.get(i);
        for (ValueEntry e=head, nextE; e != runUntil; e=nextE) {
          nextE=e.next;
          String s=e.get();
          if (s != null) {
            int index=s.hashCode() & mask;
            ValueEntry copiedEntry=new ValueEntry(s,(ValueEntry)newTable.get(index));
            newTable.set(index,copiedEntry);
          }
 else {
            emptyEntries+=1;
          }
        }
      }
 while (!table.compareAndSet(i,head,forwardingEntry));
    }
    entries.addAndGet(-emptyEntries);
    table=newTable;
    rehashing.set(false);
  }
}

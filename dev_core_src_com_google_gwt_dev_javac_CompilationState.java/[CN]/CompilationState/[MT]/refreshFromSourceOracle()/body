{
  Set<Resource> newSourceFiles=sourceOracle.getResources();
  if (cachedSourceFiles == newSourceFiles) {
    return;
  }
  Set<Resource> unchanged=new HashSet<Resource>(cachedSourceFiles);
  unchanged.retainAll(newSourceFiles);
  Set<Resource> changed=new HashSet<Resource>(newSourceFiles);
  changed.removeAll(unchanged);
  for (Iterator<CompilationUnit> it=unitMap.values().iterator(); it.hasNext(); ) {
    CompilationUnit unit=it.next();
    SourceFileCompilationUnit sourceFileUnit=(SourceFileCompilationUnit)unit;
    if (!unchanged.contains(sourceFileUnit.getSourceFile())) {
      unit.setFresh();
      it.remove();
    }
  }
  for (  Resource newSourceFile : changed) {
    String typeName=SourceFileCompilationUnit.getTypeName(newSourceFile);
    assert(!unitMap.containsKey(typeName));
    unitMap.put(typeName,new SourceFileCompilationUnit(newSourceFile));
    CompilationUnit graveyardUnit=graveyardUnits.remove(typeName);
    if (graveyardUnit != null) {
      graveyardUnit.setFresh();
    }
  }
  cachedSourceFiles=newSourceFiles;
}

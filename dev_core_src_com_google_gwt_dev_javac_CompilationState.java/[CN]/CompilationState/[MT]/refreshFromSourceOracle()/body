{
  Set<JavaSourceFile> newSourceFiles=sourceOracle.getSourceFiles();
  if (cachedSourceFiles == newSourceFiles) {
    return;
  }
  Set<JavaSourceFile> unchanged=new HashSet<JavaSourceFile>(cachedSourceFiles);
  unchanged.retainAll(newSourceFiles);
  Set<JavaSourceFile> changed=new HashSet<JavaSourceFile>(newSourceFiles);
  changed.removeAll(unchanged);
  for (Iterator<CompilationUnit> it=unitMap.values().iterator(); it.hasNext(); ) {
    CompilationUnit unit=it.next();
    SourceFileCompilationUnit sourceFileUnit=(SourceFileCompilationUnit)unit;
    if (!unchanged.contains(sourceFileUnit.getSourceFile())) {
      unit.setFresh();
      it.remove();
    }
  }
  for (  JavaSourceFile newSourceFile : changed) {
    String typeName=newSourceFile.getTypeName();
    assert(!unitMap.containsKey(typeName));
    unitMap.put(typeName,new SourceFileCompilationUnit(newSourceFile));
    CompilationUnit graveyardUnit=graveyardUnits.remove(typeName);
    if (graveyardUnit != null) {
      graveyardUnit.setFresh();
    }
  }
  cachedSourceFiles=newSourceFiles;
}

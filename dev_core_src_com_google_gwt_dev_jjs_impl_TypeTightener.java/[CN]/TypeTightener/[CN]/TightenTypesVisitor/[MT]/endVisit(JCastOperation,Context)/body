{
  JType argType=x.getExpr().getType();
  if (!(x.getCastType() instanceof JReferenceType) || !(argType instanceof JReferenceType)) {
    return;
  }
  JReferenceType toType=getSingleConcreteType(x.getCastType());
  if (toType == null) {
    toType=(JReferenceType)x.getCastType();
  }
  JReferenceType fromType=getSingleConcreteType(argType);
  if (fromType == null) {
    fromType=(JReferenceType)argType;
  }
  boolean triviallyTrue=false;
  boolean triviallyFalse=false;
  JTypeOracle typeOracle=program.typeOracle;
  if (typeOracle.canTriviallyCast(fromType,toType)) {
    triviallyTrue=true;
  }
 else   if (!typeOracle.isInstantiatedType(toType)) {
    triviallyFalse=true;
  }
 else   if (!typeOracle.canTheoreticallyCast(fromType,toType)) {
    triviallyFalse=true;
  }
  if (triviallyTrue) {
    ctx.replaceMe(x.getExpr());
  }
 else   if (triviallyFalse && toType != program.getTypeNull()) {
    JCastOperation newOp=new JCastOperation(x.getSourceInfo(),program.getTypeNull(),x.getExpr());
    ctx.replaceMe(newOp);
  }
 else {
    JReferenceType tighterType=getSingleConcreteType(toType);
    if (tighterType != null && tighterType != toType) {
      JCastOperation newOp=new JCastOperation(x.getSourceInfo(),tighterType,x.getExpr());
      ctx.replaceMe(newOp);
    }
  }
}

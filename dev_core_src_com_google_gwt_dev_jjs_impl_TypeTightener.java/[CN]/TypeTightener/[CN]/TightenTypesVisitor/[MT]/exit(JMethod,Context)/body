{
  if (program.codeGenTypes.contains(x.getEnclosingType())) {
    return;
  }
  if (!(x.getType() instanceof JReferenceType)) {
    return;
  }
  JReferenceType refType=(JReferenceType)x.getType();
  if (refType == program.getTypeNull()) {
    return;
  }
  if (!program.typeOracle.isInstantiatedType(refType)) {
    x.setType(program.getTypeNull());
    madeChanges();
    return;
  }
  JReferenceType concreteType=getSingleConcreteType(x.getType());
  if (concreteType != null) {
    x.setType(concreteType);
    madeChanges();
  }
  if (x.isNative() || program.typeOracle.isJsTypeMethod(x) || program.typeOracle.isJsFunctionMethod(x)) {
    return;
  }
  List<JReferenceType> typeList=new ArrayList<JReferenceType>();
  Collection<JExpression> myReturns=returns.get(x);
  if (myReturns != null) {
    for (    JExpression expr : myReturns) {
      typeList.add((JReferenceType)expr.getType());
    }
  }
  for (  JMethod method : x.getOverridingMethods()) {
    typeList.add((JReferenceType)method.getType());
  }
  JReferenceType resultType=program.strengthenType(refType,typeList);
  if (refType != resultType) {
    x.setType(resultType);
    madeChanges();
  }
}

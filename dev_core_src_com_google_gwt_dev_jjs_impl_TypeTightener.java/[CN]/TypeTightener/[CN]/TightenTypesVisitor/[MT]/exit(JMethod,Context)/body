{
  if (program.codeGenTypes.contains(x.getEnclosingType())) {
    return;
  }
  if (!(x.getType() instanceof JReferenceType)) {
    return;
  }
  JReferenceType returnType=(JReferenceType)x.getType();
  if (returnType.isNullType()) {
    return;
  }
  if (!program.typeOracle.isInstantiatedType(returnType)) {
    x.setType(JReferenceType.NULL_TYPE);
    madeChanges();
    return;
  }
  JReferenceType concreteType=getSingleConcreteType(returnType);
  if (concreteType != null) {
    x.setType(concreteType);
    madeChanges();
  }
  if (x.isNative() || x.isOrOverridesJsTypeMethod() || x.isOrOverridesJsFunctionMethod()) {
    return;
  }
  Iterable<JReferenceType> returnTypes=Iterables.concat(JjsUtils.getExpressionTypes(returns.get(x)),JjsUtils.getExpressionTypes(x.getOverridingMethods()));
  JReferenceType strengthenedType=strongerType(returnType,returnTypes);
  if (returnType != strengthenedType) {
    x.setType(strengthenedType);
    madeChanges();
  }
}

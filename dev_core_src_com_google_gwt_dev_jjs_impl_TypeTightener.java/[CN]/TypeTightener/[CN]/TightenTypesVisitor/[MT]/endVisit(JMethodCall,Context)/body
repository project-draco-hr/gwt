{
  JMethod target=x.getTarget();
  JMethod concreteMethod=getSingleConcreteMethod(target);
  if (concreteMethod != null) {
    JMethodCall newCall=new JMethodCall(program,x.getSourceInfo(),x.getInstance(),concreteMethod);
    newCall.getArgs().addAll(x.getArgs());
    ctx.replaceMe(newCall);
    target=concreteMethod;
    x=newCall;
  }
  if (x.canBePolymorphic()) {
    JExpression instance=x.getInstance();
    assert(instance != null);
    JReferenceType instanceType=(JReferenceType)instance.getType();
    Set<JMethod> myOverriders=overriders.get(target);
    for (    JMethod override : myOverriders) {
      JReferenceType overrideType=override.getEnclosingType();
      if (program.typeOracle.canTheoreticallyCast(instanceType,overrideType)) {
        return;
      }
    }
    x.setCannotBePolymorphic();
    didChange=true;
  }
}

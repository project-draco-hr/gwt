{
  OptimizerStats stats=new OptimizerStats(NAME);
  RecordVisitor recorder=new RecordVisitor();
  recorder.record(program);
  int lastStep=optimizerCtx.getLastStepFor(NAME);
  optimizerCtx.setLastStepFor(NAME,optimizerCtx.getOptimizationStep());
  while (true) {
    TightenTypesVisitor tightener=new TightenTypesVisitor(optimizerCtx);
    Set<JMethod> affectedMethods=computeAffectedMethods(optimizerCtx,lastStep);
    Set<JField> affectedFields=computeAffectedFields(optimizerCtx,lastStep);
    optimizerCtx.traverse(tightener,affectedFields);
    optimizerCtx.traverse(tightener,affectedMethods);
    stats.recordModified(tightener.getNumMods());
    lastStep=optimizerCtx.getOptimizationStep();
    optimizerCtx.incOptimizationStep();
    if (!tightener.didChange()) {
      break;
    }
  }
  if (stats.didChange()) {
    FixDanglingRefsVisitor fixer=new FixDanglingRefsVisitor(optimizerCtx);
    fixer.accept(program);
    optimizerCtx.incOptimizationStep();
    JavaAstVerifier.assertProgramIsConsistent(program);
  }
  return stats;
}

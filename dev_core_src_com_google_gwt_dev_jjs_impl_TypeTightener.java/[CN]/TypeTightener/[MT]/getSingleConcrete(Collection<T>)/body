{
  if (collection == null) {
    return null;
  }
  Iterator<T> concreteIterator=FluentIterable.from(collection).filter(new Predicate<T>(){
    @Override public boolean apply(    T element){
      return !element.isAbstract();
    }
  }
).iterator();
  if (!concreteIterator.hasNext()) {
    return null;
  }
  T firstConcrete=concreteIterator.next();
  if (concreteIterator.hasNext()) {
    return null;
  }
  return firstConcrete;
}

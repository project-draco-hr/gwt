{
  Class paramType=method.getParameterTypes()[paramIndex];
  Field[] fields=method.getDeclaringClass().getDeclaredFields();
  String fieldNamePrefix=normalizedTagName + "_" + (paramIndex + 1);
  Field matchingField=null;
  String fieldName=null;
  for (int i=0, n=fields.length; i < n; ++i) {
    Field testField=fields[i];
    fieldName=testField.getName();
    if (fieldName.startsWith(fieldNamePrefix)) {
      matchingField=testField;
      break;
    }
  }
  if (matchingField == null) {
    throw new IllegalArgumentException("Expecting a meta field with prefix '" + fieldNamePrefix + "'");
  }
  int under=fieldName.indexOf("_",fieldNamePrefix.length());
  if (under == -1) {
    throw new IllegalArgumentException("Expecting a normalized attribute name suffix (e.g. \"_attr_name\") on field '" + fieldName + "'");
  }
  String normalizedAttrName=fieldName.substring(under + 1);
  if (!String.class.equals(matchingField.getType())) {
    throw new IllegalArgumentException("GWT field '" + fieldName + "' must be of type String");
  }
  matchingField.setAccessible(true);
  HandlerParam handlerParam=new HandlerParam(paramType,matchingField,normalizedAttrName);
  return handlerParam;
}

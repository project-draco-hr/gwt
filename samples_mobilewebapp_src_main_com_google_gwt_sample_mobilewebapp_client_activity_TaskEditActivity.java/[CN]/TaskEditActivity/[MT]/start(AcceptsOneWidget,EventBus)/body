{
  this.container=container;
  SoundEffects.get().prefetchError();
  clientFactory.getShell().setAddButtonHandler(null);
  final TaskEditView editView=clientFactory.getTaskEditView();
  editView.setPresenter(this);
  editView.setNameViolation(null);
  final TaskReadView readView=clientFactory.getTaskReadView();
  readView.setPresenter(this);
  if (taskId == null) {
    editTask();
    return;
  }
 else {
    isEditing=true;
    editView.setEditing(true);
    if (readOnlyTask == null) {
      readOnlyTask=clientFactory.getTaskProxyLocalStorage().getTask(taskId);
    }
    if (readOnlyTask == null) {
      clientFactory.getRequestFactory().taskRequest().findTask(this.taskId).fire(new Receiver<TaskProxy>(){
        @Override public void onSuccess(        TaskProxy response){
          if (isDead) {
            return;
          }
          if (response == null) {
            Window.alert("The task with id '" + taskId + "' could not be found."+ " Please select a different task from the task list.");
            doCancelTask();
            return;
          }
          readOnlyTask=response;
          readView.getEditorDriver().edit(response);
        }
      }
);
    }
 else {
      readView.getEditorDriver().edit(readOnlyTask);
    }
  }
  container.setWidget(readView);
}

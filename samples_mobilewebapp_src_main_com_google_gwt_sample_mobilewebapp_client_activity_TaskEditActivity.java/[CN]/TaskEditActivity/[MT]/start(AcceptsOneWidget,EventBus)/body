{
  SoundEffects.get().prefetchError();
  clientFactory.getShell().setAddButtonHandler(null);
  final TaskEditView view=clientFactory.getTaskEditView();
  view.setPresenter(this);
  view.setNameViolation(null);
  if (taskId == null) {
    isEditing=false;
    view.setEditing(false);
    TaskRequest request=clientFactory.getRequestFactory().taskRequest();
    task=request.create(TaskProxy.class);
    view.getEditorDriver().edit(task,request);
  }
 else {
    isEditing=true;
    view.setEditing(true);
    if (task == null) {
      view.setLocked(true);
      clientFactory.getRequestFactory().taskRequest().findTask(this.taskId).fire(new Receiver<TaskProxy>(){
        @Override public void onFailure(        ServerFailure error){
          Window.alert("An error occurred on the server while loading this task." + " Please select a different task from the task list.");
          doCancelTask();
        }
        @Override public void onSuccess(        TaskProxy response){
          if (isDead) {
            return;
          }
          if (response == null) {
            Window.alert("The task with id '" + taskId + "' could not be found."+ " Please select a different task from the task list.");
            doCancelTask();
            return;
          }
          task=response;
          view.getEditorDriver().edit(response,clientFactory.getRequestFactory().taskRequest());
          view.setLocked(false);
        }
      }
);
    }
 else {
      view.getEditorDriver().edit(task,clientFactory.getRequestFactory().taskRequest());
    }
  }
  container.setWidget(view.asWidget());
}

{
  ArrayList l=new ArrayList();
  for (int i=0; i < 10; i++) {
    l.add(new Integer(i));
  }
{
    Object[] objArray=l.toArray();
    assertEquals(10,objArray.length);
    for (int i=0; i < 10; i++) {
      Integer elem=(Integer)objArray[i];
      assertEquals(i,elem.intValue());
    }
    objArray[0]=new Object();
  }
{
    Integer[] firstArray=new Integer[13];
    firstArray[10]=new Integer(10);
    firstArray[11]=new Integer(11);
    firstArray[12]=new Integer(12);
    Integer[] intArray=(Integer[])l.toArray(firstArray);
    assertTrue(firstArray == intArray);
    assertEquals(13,intArray.length);
    for (int i=0; i < 13; i++) {
      if (i == 10) {
        assertNull(intArray[i]);
      }
 else {
        Integer elem=intArray[i];
        assertEquals(i,elem.intValue());
      }
    }
    try {
      Object[] objArray=noOptimizeFalse() ? new Object[1] : intArray;
      assertTrue(objArray instanceof Integer[]);
      objArray[0]=new Object();
      fail("expected ArrayStoreException");
    }
 catch (    ArrayStoreException e) {
    }
  }
{
    Integer[] firstArray=new Integer[0];
    Integer[] intArray=(Integer[])l.toArray(firstArray);
    assertFalse(firstArray == intArray);
    assertEquals(10,intArray.length);
    for (int i=0; i < 10; i++) {
      Integer elem=intArray[i];
      assertEquals(i,elem.intValue());
    }
    try {
      Object[] objArray=noOptimizeFalse() ? new Object[1] : intArray;
      assertTrue(objArray instanceof Integer[]);
      objArray[0]=new Object();
      fail("expected ArrayStoreException");
    }
 catch (    ArrayStoreException e) {
    }
  }
}

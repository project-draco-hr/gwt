{
  if (signature != null) {
    if ((this.tagBits & TagBits.ContainsNestedTypesInSignature) != 0) {
      boolean isConstructor=isConstructor();
      TypeBinding[] targetParameters=this.parameters;
      boolean needSynthetics=isConstructor && declaringClass.isNestedType();
      if (needSynthetics) {
        ReferenceBinding[] syntheticArgumentTypes=declaringClass.syntheticEnclosingInstanceTypes();
        if (syntheticArgumentTypes != null) {
          for (int i=0, count=syntheticArgumentTypes.length; i < count; i++) {
            ReferenceBinding syntheticArgumentType=syntheticArgumentTypes[i];
            if (syntheticArgumentType.isNestedType()) {
              classFile.recordInnerClasses(syntheticArgumentType);
            }
          }
        }
        if (this instanceof SyntheticMethodBinding) {
          targetParameters=((SyntheticMethodBinding)this).targetMethod.parameters;
        }
      }
      if (targetParameters != Binding.NO_PARAMETERS) {
        for (int i=0; i < targetParameters.length; i++) {
          TypeBinding targetParameter=targetParameters[i];
          TypeBinding leafTargetParameterType=targetParameter.leafComponentType();
          if (leafTargetParameterType.isNestedType()) {
            classFile.recordInnerClasses(leafTargetParameterType);
          }
        }
      }
      if (needSynthetics) {
        for (int i=targetParameters.length, extraLength=parameters.length; i < extraLength; i++) {
          TypeBinding parameter=parameters[i];
          TypeBinding leafParameterType=parameter.leafComponentType();
          if (leafParameterType.isNestedType()) {
            classFile.recordInnerClasses(leafParameterType);
          }
        }
      }
      if (this.returnType != null) {
        TypeBinding ret=this.returnType.leafComponentType();
        if (ret.isNestedType()) {
          classFile.recordInnerClasses(ret);
        }
      }
    }
    return signature;
  }
  StringBuffer buffer=new StringBuffer(parameters.length + 1 * 20);
  buffer.append('(');
  TypeBinding[] targetParameters=this.parameters;
  boolean isConstructor=isConstructor();
  if (isConstructor && declaringClass.isEnum()) {
    buffer.append(ConstantPool.JavaLangStringSignature);
    buffer.append(TypeBinding.INT.signature());
  }
  boolean needSynthetics=isConstructor && declaringClass.isNestedType();
  if (needSynthetics) {
    ReferenceBinding[] syntheticArgumentTypes=declaringClass.syntheticEnclosingInstanceTypes();
    if (syntheticArgumentTypes != null) {
      for (int i=0, count=syntheticArgumentTypes.length; i < count; i++) {
        ReferenceBinding syntheticArgumentType=syntheticArgumentTypes[i];
        if (syntheticArgumentType.isNestedType()) {
          this.tagBits|=TagBits.ContainsNestedTypesInSignature;
          classFile.recordInnerClasses(syntheticArgumentType);
        }
        buffer.append(syntheticArgumentType.signature());
      }
    }
    if (this instanceof SyntheticMethodBinding) {
      targetParameters=((SyntheticMethodBinding)this).targetMethod.parameters;
    }
  }
  if (targetParameters != Binding.NO_PARAMETERS) {
    for (int i=0; i < targetParameters.length; i++) {
      TypeBinding targetParameter=targetParameters[i];
      TypeBinding leafTargetParameterType=targetParameter.leafComponentType();
      if (leafTargetParameterType.isNestedType()) {
        this.tagBits|=TagBits.ContainsNestedTypesInSignature;
        classFile.recordInnerClasses(leafTargetParameterType);
      }
      buffer.append(targetParameter.signature());
    }
  }
  if (needSynthetics) {
    SyntheticArgumentBinding[] syntheticOuterArguments=declaringClass.syntheticOuterLocalVariables();
    int count=syntheticOuterArguments == null ? 0 : syntheticOuterArguments.length;
    for (int i=0; i < count; i++) {
      buffer.append(syntheticOuterArguments[i].type.signature());
    }
    for (int i=targetParameters.length, extraLength=parameters.length; i < extraLength; i++) {
      TypeBinding parameter=parameters[i];
      TypeBinding leafParameterType=parameter.leafComponentType();
      if (leafParameterType.isNestedType()) {
        this.tagBits|=TagBits.ContainsNestedTypesInSignature;
        classFile.recordInnerClasses(leafParameterType);
      }
      buffer.append(parameter.signature());
    }
  }
  buffer.append(')');
  if (this.returnType != null) {
    TypeBinding ret=this.returnType.leafComponentType();
    if (ret.isNestedType()) {
      this.tagBits|=TagBits.ContainsNestedTypesInSignature;
      classFile.recordInnerClasses(ret);
    }
    buffer.append(this.returnType.signature());
  }
  int nameLength=buffer.length();
  signature=new char[nameLength];
  buffer.getChars(0,nameLength,signature,0);
  return signature;
}

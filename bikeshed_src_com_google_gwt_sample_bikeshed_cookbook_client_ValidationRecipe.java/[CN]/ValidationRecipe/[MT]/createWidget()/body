{
  final ListViewAdapter<Address> adapter=new ListViewAdapter<Address>();
  final List<Address> list=adapter.getList();
  for (int i=10; i < 50; i++) {
    if (zipInvalid(30000 + i)) {
      continue;
    }
    String zip="300" + i;
    list.add(new Address("GA",zip));
  }
  final ProvidesKey<Address> keyProvider=new ProvidesKey<Address>(){
    public Object getKey(    Address item){
      return item.key;
    }
  }
;
  CellTable<Address> table=new CellTable<Address>(10);
  table.setKeyProvider(keyProvider);
  adapter.addView(table);
  TextColumn<Address> stateColumn=new TextColumn<Address>(){
    @Override public String getValue(    Address object){
      return object.state;
    }
  }
;
  final ValidatableInputCell zipCell=new ValidatableInputCell();
  Column<Address,String> zipColumn=new Column<Address,String>(zipCell){
    @Override public String getValue(    Address object){
      return object.zip;
    }
  }
;
  zipColumn.setFieldUpdater(new FieldUpdater<Address,String>(){
    public void update(    final int index,    final Address address,    final String value){
      new Timer(){
        @Override public void run(){
          int zip;
          try {
            zip=Integer.parseInt(value);
          }
 catch (          NumberFormatException e) {
            zip=-1;
          }
          boolean zipInvalid=ValidationRecipe.zipInvalid(zip);
          final Address newAddress=new Address(address);
          newAddress.zipInvalid=zipInvalid;
          if (zipInvalid) {
            ValidatableField<String> vf=zipCell.getViewData(keyProvider.getKey(address));
            vf.setInvalid(true);
            adapter.refresh();
          }
 else {
            newAddress.zip=value;
          }
          list.set(index,newAddress);
        }
      }
.schedule(2000);
    }
  }
);
  TextColumn<Address> messageColumn=new TextColumn<Address>(){
    @Override public String getValue(    Address object){
      return object.zipInvalid ? "Please fix the zip code" : "";
    }
  }
;
  table.addColumn(stateColumn);
  table.addColumn(zipColumn);
  table.addColumn(messageColumn);
  return table;
}

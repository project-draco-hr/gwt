{
  assertFalse(Character.isHighSurrogate('\uDF46'));
  assertTrue(Character.isLowSurrogate('\uDF46'));
  assertTrue(Character.isHighSurrogate('\uD800'));
  assertFalse(Character.isLowSurrogate('\uD800'));
  assertFalse(Character.isHighSurrogate('X'));
  assertFalse(Character.isLowSurrogate('X'));
  assertTrue(Character.isSurrogatePair('\uD800','\uDF46'));
  assertFalse(Character.isSurrogatePair('\uDF46','\uD800'));
  assertFalse(Character.isSurrogatePair('A','\uDF46'));
  assertFalse(Character.isSurrogatePair('\uD800','A'));
  char[] chars=Character.toChars(0x10346);
  assertEquals(0xD800,chars[0]);
  assertEquals(0xDF46,chars[1]);
  assertEquals(2,Character.toChars(67328,chars,0));
  assertEquals(0xD801,chars[0]);
  assertEquals(0xDF00,chars[1]);
  assertEquals(1,Character.toChars(65,chars,0));
  assertEquals('A',chars[0]);
  assertTrue(Character.isSupplementaryCodePoint(0x10346));
  assertFalse(Character.isSupplementaryCodePoint(65));
  assertTrue(Character.isValidCodePoint(0x10346));
  assertTrue(Character.isValidCodePoint(65));
  assertFalse(Character.isValidCodePoint(0x1FFFFFFF));
  assertEquals(0x10346,Character.toCodePoint('\uD800','\uDF46'));
}

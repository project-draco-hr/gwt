{
  Map<String,String> outputMap=getMap(category,locale);
  Map<String,String> defaultMap=null;
  if (!locale.isDefault()) {
    defaultMap=getMap(category,localeFactory.getDefault());
  }
  Map<String,Currency> tempMap=new HashMap<String,Currency>();
  CLDRFile cldr=cldrFactory.make(allLocales.get(locale),true);
  XPathParts parts=new XPathParts();
  Iterator<String> iterator=cldr.iterator("//ldml/numbers/currencies");
  while (iterator.hasNext()) {
    String path=iterator.next();
    String fullPath=cldr.getFullXPath(path);
    if (fullPath == null) {
      fullPath=path;
    }
    parts.set(fullPath);
    Map<String,String> attr=parts.findAttributes("currency");
    if (attr == null) {
      continue;
    }
    String currencyCode=attr.get("type");
    Currency currency=tempMap.get(currencyCode);
    if (currency == null) {
      currency=new Currency(currencyCode);
      if (currencyFractions.containsKey(currencyCode)) {
        currency.setDecimalDigits(currencyFractions.get(currencyCode));
      }
 else {
        currency.setDecimalDigits(defaultCurrencyFraction);
      }
      currency.setInUse(stillInUse.contains(currencyCode));
      tempMap.put(currencyCode,currency);
      Integer roundingMult=rounding.get(currencyCode);
      if (roundingMult != null) {
        currency.setRounding(roundingMult);
      }
    }
    String field=parts.getElement(4);
    String value=cldr.getStringValue(fullPath);
    attr=parts.findAttributes(field);
    if (attr == null) {
      attr=Collections.emptyMap();
    }
    String draft=attr.get("draft");
    if ("symbol".equalsIgnoreCase(field)) {
      if (currency.getSymbol() == null || !"narrow".equals(parts.getAttributeValue(4,"alt"))) {
        currency.setSymbol(value);
      }
    }
 else     if ("displayName".equalsIgnoreCase(field)) {
      if (attr.get("count") != null) {
        continue;
      }
      if (draft == null || currency.getDisplayName() == null) {
        currency.setDisplayName(value);
      }
    }
 else     if ("pattern".equalsIgnoreCase(field)) {
      currency.setPattern(value);
    }
 else     if ("decimal".equalsIgnoreCase(field)) {
      currency.setDecimalSeparator(value);
    }
 else     if ("group".equalsIgnoreCase(field)) {
      currency.setGroupingSeparator(value);
    }
 else {
      System.err.println("Ignoring unknown field \"" + field + "\" on currency data for \""+ currencyCode+ "\"");
    }
  }
  for (  Currency currency : tempMap.values()) {
    String code=currency.getCode();
    outputMap.put(code,encodeCurrencyData(currency));
    if (defaultMap != null) {
      currency.setDisplayName(code);
      currency.setSymbol(null);
      defaultMap.put(code,encodeCurrencyData(currency));
    }
  }
}

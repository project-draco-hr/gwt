{
  ModuleDef module=compilerContext.getModule();
  this.compilationState=compilationState;
  permutations=new Permutation[perms.size()];
  propertyOracles=new StaticPropertyOracle[perms.size()];
  rebindOracles=new RebindOracle[perms.size()];
  generatorContext=new StandardGeneratorContext(compilerContext,compilationState,generatorArtifacts,true);
  BindingProperty[] orderedProps=perms.getOrderedProperties();
  SortedSet<ConfigurationProperty> configPropSet=module.getProperties().getConfigurationProperties();
  ConfigurationProperty[] configProps=configPropSet.toArray(new ConfigurationProperty[configPropSet.size()]);
  Rules rules=module.getRules();
  for (int i=0; i < rebindOracles.length; ++i) {
    String[] orderedPropValues=perms.getOrderedPropertyValues(i);
    propertyOracles[i]=new StaticPropertyOracle(orderedProps,orderedPropValues,configProps);
    rebindOracles[i]=new StandardRebindOracle(propertyOracles[i],rules,generatorContext);
    permutations[i]=new Permutation(i,propertyOracles[i]);
  }
}

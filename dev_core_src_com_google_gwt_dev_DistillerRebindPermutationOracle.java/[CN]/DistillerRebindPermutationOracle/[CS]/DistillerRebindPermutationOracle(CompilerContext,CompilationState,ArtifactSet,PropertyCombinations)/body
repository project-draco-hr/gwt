{
  ModuleDef module=compilerContext.getModule();
  this.compilationState=compilationState;
  permutations=new Permutation[perms.size()];
  rebindOracles=new RebindOracle[perms.size()];
  generatorContext=new StandardGeneratorContext(compilerContext,compilationState,generatorArtifacts,true);
  BindingProperty[] orderedProps=perms.getOrderedProperties();
  ConfigurationProperties config=new ConfigurationProperties(module);
  Deque<Rule> rules=module.getRules();
  for (int i=0; i < rebindOracles.length; ++i) {
    BindingProperties properties=new BindingProperties(orderedProps,perms.getOrderedPropertyValues(i),config);
    rebindOracles[i]=new StandardRebindOracle(properties.toPropertyOracle(),rules,generatorContext);
    permutations[i]=new Permutation(i,properties);
  }
}

{
  String userDir=System.getProperty("user.dir");
  assertNotNull(userDir);
  File curDir=new File(userDir);
  assertTrue(curDir.isDirectory());
  String moduleName=PublicTagTest.class.getName();
  File moduleDir=new File(curDir,"www/" + moduleName);
  if (moduleDir.exists()) {
    Util.recursiveDelete(moduleDir,false);
  }
  assertFalse(moduleDir.exists());
  Compiler.compile(new String[]{moduleName,"-logLevel","ERROR","-out","www"});
  assertTrue(new File(moduleDir,"good0.html").exists());
  assertTrue(new File(moduleDir,"good1.html").exists());
  assertTrue(new File(moduleDir,"bar/good.html").exists());
  assertTrue(new File(moduleDir,"good2.html").exists());
  assertTrue(new File(moduleDir,"good3.html").exists());
  assertTrue(new File(moduleDir,"good4.html").exists());
  assertTrue(new File(moduleDir,"good5.html").exists());
  assertTrue(new File(moduleDir,"good6.html").exists());
  assertTrue(new File(moduleDir,"good7.html").exists());
  assertTrue(new File(moduleDir,"good8.html").exists());
  assertTrue(new File(moduleDir,"good10.html").exists());
  assertTrue(new File(moduleDir,"good11.html").exists());
  assertTrue(new File(moduleDir,"good9.html").exists());
  assertTrue(new File(moduleDir,"bar/CVS/good.html").exists());
  assertTrue(new File(moduleDir,"CVS/good.html").exists());
  assertTrue(new File(moduleDir,"GOOD/bar/GOOD/good.html").exists());
  assertTrue(new File(moduleDir,"GOOD/good.html").exists());
  assertFalse(new File(moduleDir,"bad.Html").exists());
  assertFalse(new File(moduleDir,"bar/CVS/bad.html").exists());
  assertFalse(new File(moduleDir,"CVS/bad.html").exists());
  assertFalse(new File(moduleDir,"bad1.html").exists());
  assertFalse(new File(moduleDir,"bad2.html").exists());
  assertFalse(new File(moduleDir,"bad3.html").exists());
  assertFalse(new File(moduleDir,"bad.html").exists());
  assertFalse(new File(moduleDir,"bar/bad.html").exists());
  assertFalse(new File(moduleDir,"GOOD/bar/bad.html").exists());
  assertFalse(new File(moduleDir,"GOOD/bar/GOOD/bar/bad.html").exists());
}

{
  if (expression instanceof MagicLiteral) {
    if (expression instanceof FalseLiteral) {
      return Boolean.FALSE;
    }
 else     if (expression instanceof NullLiteral) {
    }
 else     if (expression instanceof TrueLiteral) {
      return Boolean.TRUE;
    }
  }
 else   if (expression instanceof NumberLiteral) {
    Object value=evaluateNumericExpression(expression);
    if (value != null) {
      return value;
    }
  }
 else   if (expression instanceof StringLiteral) {
    StringLiteral stringLiteral=(StringLiteral)expression;
    return stringLiteral.constant.stringValue();
  }
 else   if (expression instanceof ClassLiteralAccess) {
    ClassLiteralAccess classLiteral=(ClassLiteralAccess)expression;
    Class<?> clazz=getClassLiteral(logger,classLiteral.targetType);
    if (clazz != null) {
      return clazz;
    }
  }
 else   if (expression instanceof ArrayInitializer) {
    Object value=evaluateArrayInitializerExpression(logger,expression);
    if (value != null) {
      return value;
    }
  }
 else   if (expression instanceof QualifiedNameReference) {
    QualifiedNameReference qualifiedNameRef=(QualifiedNameReference)expression;
    Class clazz=getClassLiteral(logger,qualifiedNameRef.actualReceiverType);
    assert(clazz.isEnum());
    if (clazz != null) {
      FieldBinding fieldBinding=qualifiedNameRef.fieldBinding();
      String enumName=String.valueOf(fieldBinding.name);
      return Enum.valueOf(clazz,enumName);
    }
  }
 else   if (expression instanceof Annotation) {
    Object annotationInstance=evaluateAnnotationExpression(logger,expression);
    if (annotationInstance != null) {
      return annotationInstance;
    }
  }
  assert(false);
  return null;
}

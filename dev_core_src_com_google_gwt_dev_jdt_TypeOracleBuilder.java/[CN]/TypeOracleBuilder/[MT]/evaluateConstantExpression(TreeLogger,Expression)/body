{
  if (expression instanceof MagicLiteral) {
    if (expression instanceof FalseLiteral) {
      return Boolean.FALSE;
    }
 else     if (expression instanceof NullLiteral) {
    }
 else     if (expression instanceof TrueLiteral) {
      return Boolean.TRUE;
    }
  }
 else   if (expression instanceof NumberLiteral) {
    Object value=getNumericLiteralValue((NumberLiteral)expression);
    if (value != null) {
      return value;
    }
  }
 else   if (expression instanceof StringLiteral) {
    StringLiteral stringLiteral=(StringLiteral)expression;
    return stringLiteral.constant.stringValue();
  }
 else   if (expression instanceof ClassLiteralAccess) {
    ClassLiteralAccess classLiteral=(ClassLiteralAccess)expression;
    Class<?> clazz=getClassLiteral(logger,classLiteral.targetType);
    if (clazz != null) {
      return clazz;
    }
  }
 else   if (expression instanceof ArrayInitializer) {
    Object value=createArrayConstant(logger,(ArrayInitializer)expression);
    if (value != null) {
      return value;
    }
  }
 else   if (expression instanceof NameReference) {
    NameReference nameRef=(NameReference)expression;
    if (nameRef.constant != Constant.NotAConstant) {
      return getConstantValue(nameRef.constant);
    }
 else {
      Class clazz=getClassLiteral(logger,nameRef.actualReceiverType);
      if (clazz.isEnum()) {
        String enumName=String.valueOf(nameRef.fieldBinding().name);
        return Enum.valueOf(clazz,enumName);
      }
 else {
      }
    }
  }
 else   if (expression instanceof Annotation) {
    Object annotationInstance=createAnnotationInstance(logger,expression);
    if (annotationInstance != null) {
      return annotationInstance;
    }
  }
 else   if (expression instanceof ConditionalExpression) {
    ConditionalExpression condExpression=(ConditionalExpression)expression;
    assert(condExpression.constant != Constant.NotAConstant);
    return getConstantValue(condExpression.constant);
  }
  assert(false);
  return null;
}

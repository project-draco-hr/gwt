{
  if (resolvedType instanceof BaseTypeBinding) {
    return getClassLiteralForPrimitive((BaseTypeBinding)resolvedType);
  }
 else {
    try {
      String className=String.valueOf(resolvedType.constantPoolName());
      className=className.replace('/','.');
      return Class.forName(className,false,TypeOracleBuilder.class.getClassLoader());
    }
 catch (    ClassNotFoundException e) {
      logger.log(TreeLogger.ERROR,"",e);
      return null;
    }
  }
}

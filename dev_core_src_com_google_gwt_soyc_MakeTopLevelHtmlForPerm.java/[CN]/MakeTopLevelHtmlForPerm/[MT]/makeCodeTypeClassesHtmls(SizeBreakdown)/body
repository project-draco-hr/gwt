{
  HashMap<String,CodeCollection> nameToCodeColl=breakdown.nameToCodeColl;
  for (  String codeType : nameToCodeColl.keySet()) {
    String outFileName=breakdown.getId() + "_" + codeType+ "-"+ getPermutationId()+ "Classes.html";
    float maxSize=0f;
    TreeMap<Float,String> sortedClasses=new TreeMap<Float,String>(Collections.reverseOrder());
    for (    String className : nameToCodeColl.get(codeType).classes) {
      if (breakdown.classToSize.containsKey(className)) {
        float curSize=0f;
        if (breakdown.classToSize.containsKey(className)) {
          curSize=breakdown.classToSize.get(className);
        }
        if (curSize != 0f) {
          sortedClasses.put(curSize,className);
          if (curSize > maxSize) {
            maxSize=curSize;
          }
        }
      }
    }
    final PrintWriter outFile=new PrintWriter(getOutFile(outFileName));
    addHeaderWithBreakdownContext(breakdown,outFile,"Classes in package " + codeType);
    outFile.println("<hr>");
    outFile.println("</div>");
    outFile.println("<div class='abs mainContent' style='overflow:auto'>");
    outFile.println("<table style='width:100%'>");
    outFile.println("<thead>");
    outFile.println("<th class='barlabel'>Size</th>");
    outFile.println("<th class='barlabel'></th>");
    outFile.println("<th style='width:100%' class='barlabel'></th>");
    outFile.println("</thead>");
    for (    Float size : sortedClasses.keySet()) {
      String className=sortedClasses.get(size);
      float ratio=(size / maxSize) * 85;
      if (ratio < 1) {
        ratio=1;
      }
      outFile.println("<tr>");
      outFile.println("<td class=\"barlabel\">" + size + "</td>");
      outFile.println("<td class=\"barlabel\">" + className + "</td>");
      outFile.println("<td class=\"box\">");
      outFile.println("<div style=\"width:" + ratio + "%;\" class=\"lb\"><div class=\"rb\"><div class=\"bb\"><div class=\"blc\"><div class=\"brc\"><div class=\"tb\"><div class=\"tlc\"><div class=\"trc\"><div class=\"content\"></div></div></div></div></div></div></div></div>");
      outFile.println("</td>");
      outFile.println("</tr>");
    }
    addStandardHtmlEnding(outFile);
    outFile.close();
  }
}

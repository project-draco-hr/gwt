{
  HashMap<String,CodeCollection> nameToCodeColl=breakdown.nameToCodeColl;
  for (  String codeType : nameToCodeColl.keySet()) {
    String outFileName=breakdown.getId() + "_" + codeType+ "-"+ getPermutationId()+ "Classes.html";
    float sumSize=0f;
    TreeMap<Float,String> sortedClasses=new TreeMap<Float,String>(Collections.reverseOrder());
    for (    String className : nameToCodeColl.get(codeType).classes) {
      if (breakdown.classToSize.containsKey(className)) {
        float curSize=0f;
        if (breakdown.classToSize.containsKey(className)) {
          curSize=breakdown.classToSize.get(className);
        }
        if (curSize != 0f) {
          sortedClasses.put(curSize,className);
          sumSize+=curSize;
        }
      }
    }
    final PrintWriter outFile=new PrintWriter(getOutFile(outFileName));
    addStandardHtmlProlog(outFile,"Classes in package " + codeType,"Classes in package " + codeType,headerLineForBreakdown(breakdown));
    outFile.println("<table class=\"soyc-table\">");
    outFile.println("<colgroup>");
    outFile.println("<col id=\"soyc-splitpoint-type-col\">");
    outFile.println("<col id=\"soyc-splitpoint-size-col\">");
    outFile.println("</colgroup>");
    outFile.println("<thead>");
    outFile.println("<th>Code type</th>");
    outFile.println("<th>Size <span class=\"soyc-th-units\">Bytes (% All Code)</span></th>");
    outFile.println("</thead>");
    for (    Float size : sortedClasses.keySet()) {
      String className=sortedClasses.get(size);
      float perc=(size / sumSize) * 100;
      outFile.println("<tr>");
      outFile.println("<td>" + className + "</a></td>");
      outFile.println("<td>");
      outFile.println("<div class=\"soyc-bar-graph goog-inline-block\">");
      outFile.println("<div style=\"width:" + perc + "%;\" class=\"soyc-bar-graph-fill goog-inline-block\"></div>");
      outFile.println("</div>");
      outFile.println(size + " (" + formatNumber(perc)+ "%)");
      outFile.println("</td>");
      outFile.println("</tr>");
    }
    addStandardHtmlEnding(outFile);
    outFile.close();
  }
}

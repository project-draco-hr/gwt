{
  String outFileName=breakdown.getId() + "-" + getPermutationId()+ "-"+ "packageBreakdown.html";
  Map<String,Integer> packageToPartialSize=breakdown.packageToSize;
  TreeMap<Integer,String> sortedPackages=new TreeMap<Integer,String>(Collections.reverseOrder());
  float sumSize=0f;
  for (  String packageName : packageToPartialSize.keySet()) {
    sortedPackages.put(packageToPartialSize.get(packageName),packageName);
    sumSize+=packageToPartialSize.get(packageName);
  }
  final PrintWriter outFile=new PrintWriter(getOutFile(outFileName));
  addSmallHtmlProlog(outFile,"Package breakdown");
  outFile.println("<body class=\"soyc-breakdown\">");
  outFile.println("<div class=\"g-doc\">");
  outFile.println("<table class=\"soyc-table\">");
  outFile.println("<colgroup>");
  outFile.println("<col id=\"soyc-splitpoint-type-col\">");
  outFile.println("<col id=\"soyc-splitpoint-size-col\">");
  outFile.println("</colgroup>");
  outFile.println("<thead>");
  outFile.println("<th>Package</th>");
  outFile.println("<th>Size <span class=\"soyc-th-units\">Bytes (% All Code)</span></th>");
  outFile.println("</thead>");
  for (  int size : sortedPackages.keySet()) {
    String packageName=sortedPackages.get(size);
    String drillDownFileName=classesInPackageFileName(breakdown,packageName,getPermutationId());
    float perc=(size / sumSize) * 100;
    outFile.println("<tr>");
    outFile.println("<td><a href=\"" + drillDownFileName + "\" target=\"_top\">"+ packageName+ "</a></td>");
    outFile.println("<td>");
    outFile.println("<div class=\"soyc-bar-graph goog-inline-block\">");
    outFile.println("<div style=\"width:" + perc + "%;\" class=\"soyc-bar-graph-fill goog-inline-block\"></div>");
    outFile.println("</div>");
    outFile.println(size + " (" + formatNumber(perc)+ "%)");
    outFile.println("</td>");
    outFile.println("</tr>");
  }
  outFile.println("</table>");
  addStandardHtmlEnding(outFile);
  outFile.close();
  return outFileName;
}

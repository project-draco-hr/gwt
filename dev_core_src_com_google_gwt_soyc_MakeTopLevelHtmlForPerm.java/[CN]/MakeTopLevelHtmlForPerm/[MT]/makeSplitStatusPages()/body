{
  PrintWriter outFile=new PrintWriter(getOutFile(splitStatusFileName()));
  addStandardHtmlProlog(outFile,"Split point status","Split point status","");
  outFile.println("<div id=\"bd\">");
  String curPackageName="";
  for (  String className : globalInformation.getClassToPackage().keySet()) {
    String packageName=globalInformation.getClassToPackage().get(className);
    if (packageName.compareTo("") == 0 || packageName.compareTo(curPackageName) != 0) {
      curPackageName=packageName;
      outFile.println("<div class='soyc-pkg-break'>Package: " + packageName + "</div>");
    }
    outFile.println("<a name=\"" + filename(className) + "\"></a><h3>"+ className+ "</h3>");
    if (globalInformation.getInitialCodeBreakdown().classToSize.containsKey(className)) {
      if (globalInformation.dependencies != null) {
        outFile.println("<p>Some code is included in the initial fragment (<a href=\"" + dependenciesFileName("initial",packageName) + "#"+ className+ "\">see why</a>)</p>");
      }
 else {
        outFile.println("<p>Some code is included in the initial fragment</p>");
      }
    }
    for (    int sp : splitPointsWithClass(className)) {
      outFile.println("<p>Some code downloads with split point " + sp + ": "+ globalInformation.getSplitPointToLocation().get(sp)+ "</p>");
    }
    if (globalInformation.getLeftoversBreakdown().classToSize.containsKey(className)) {
      outFile.println("<p>Some code is left over:</p>");
      addLefttoversStatus(className,packageName,outFile);
    }
  }
  addStandardHtmlEnding(outFile);
  outFile.close();
}

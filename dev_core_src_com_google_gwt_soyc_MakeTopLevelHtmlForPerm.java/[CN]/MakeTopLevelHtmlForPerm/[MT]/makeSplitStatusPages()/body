{
  PrintWriter outFile=new PrintWriter(getOutFile(splitStatusFileName()));
  addStandardHtmlProlog(outFile,"Split point status","Split point status","");
  outFile.println("<div id=\"bd\">");
  HtmlInterner interner=new HtmlInterner();
  for (  String className : globalInformation.getClassToPackage().keySet()) {
    String packageName=globalInformation.getClassToPackage().get(className);
    interner.intern(packageName);
    interner.intern(getClassSubstring(className));
    interner.intern(hashedFilenameFragment(packageName));
  }
  interner.freeze();
  outFile.println("<script language=\"javascript\">");
  interner.printInternedDataAsJs(outFile);
  String curPackageName="";
  for (  String className : globalInformation.getClassToPackage().keySet()) {
    String packageName=globalInformation.getClassToPackage().get(className);
    if (packageName.compareTo("") == 0 || packageName.compareTo(curPackageName) != 0) {
      curPackageName=packageName;
      interner.printPackageHeader(outFile,packageName);
    }
    interner.printClassHeader(outFile,className);
    if (globalInformation.getInitialCodeBreakdown().classToSize.containsKey(className)) {
      if (globalInformation.dependencies != null) {
        interner.printHasInitialFragment(outFile,className);
      }
 else {
        interner.printHasInitialFragment(outFile);
      }
    }
    for (    int sp : splitPointsWithClass(className)) {
      interner.printHasCodeInSplitPoint(outFile,className,sp);
    }
    if (globalInformation.getLeftoversBreakdown().classToSize.containsKey(className)) {
      interner.printSomeCodeLeftover(outFile);
      interner.printLeftoversStatus(outFile,packageName,className);
    }
  }
  outFile.println("</script>");
  addStandardHtmlEnding(outFile);
  outFile.close();
}

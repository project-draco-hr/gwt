{
  Map<String,CodeCollection> nameToCodeColl=breakdown.nameToCodeColl;
  Map<String,LiteralsCollection> nameToLitColl=breakdown.nameToLitColl;
  String packageBreakdownFileName=makePackageHtml(breakdown);
  String codeTypeBreakdownFileName=makeCodeTypeHtml(breakdown,nameToCodeColl,nameToLitColl);
  PrintWriter outFile=new PrintWriter(getOutFile(shellFileName(breakdown,getPermutationId())));
  addStandardHtmlProlog(outFile,"Application breakdown analysis","Application breakdown analysis","");
  String popupName="packageBreakdownPopup";
  String popupTitle="Package breakdown";
  String popupBody="The package breakdown blames pieces of JavaScript " + "code on Java packages wherever possible.  Note that this is not possible for all " + "code, so the sizes of the packages here will not normally add up to the full code "+ "size.  More specifically, the sum will exclude strings, whitespace, and a few pieces "+ "of JavaScript code that are produced during compilation but cannot be attributed to "+ "any Java package.";
  outFile.println("<h2>");
  addPopupLink(outFile,popupName,popupTitle,null);
  outFile.println("</h2></div>");
  addPopup(outFile,popupName,popupTitle,popupBody);
  outFile.println("<iframe class='soyc-iframe-package' src=\"" + packageBreakdownFileName + "\" scrolling=auto></iframe>");
  popupName="codeTypeBreakdownPopup";
  popupTitle="Code Type Breakdown";
  popupBody="The code type breakdown breaks down the JavaScript code according to its " + "type or function.  For example, it tells you how much of your code can be attributed to " + "JRE, GWT-RPC, etc.  As above, strings and some other JavaScript snippets are not "+ "included in the breakdown.";
  outFile.println("<h2>");
  addPopupLink(outFile,popupName,popupTitle,null);
  outFile.println("</h2>");
  addPopup(outFile,popupName,popupTitle,popupBody);
  outFile.println("<iframe class='soyc-iframe-code' src=\"" + codeTypeBreakdownFileName + "\" scrolling=auto></iframe>");
  outFile.println("</div>");
  addStandardHtmlEnding(outFile);
  outFile.close();
}

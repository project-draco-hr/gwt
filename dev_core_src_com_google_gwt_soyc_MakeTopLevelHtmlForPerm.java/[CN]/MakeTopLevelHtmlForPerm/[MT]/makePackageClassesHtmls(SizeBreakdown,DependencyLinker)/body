{
  PrintWriter outFile=new PrintWriter(getOutFile(classesInPackageFileName(breakdown,getPermutationId())));
  addStandardHtmlProlog(outFile,"Classes in  " + breakdown.getDescription(),"Classes in " + breakdown.getDescription(),headerLineForBreakdown(breakdown));
  String[] packageNames=globalInformation.getPackageToClasses().keySet().toArray(new String[0]);
  Arrays.sort(packageNames);
  for (  String packageName : packageNames) {
    TreeMap<Integer,Set<String>> sortedClasses=new TreeMap<Integer,Set<String>>(Collections.reverseOrder());
    int sumSize=0;
    for (    String className : globalInformation.getPackageToClasses().get(packageName)) {
      int curSize=0;
      if (!breakdown.classToSize.containsKey(className)) {
      }
 else {
        curSize=breakdown.classToSize.get(className);
      }
      if (curSize != 0f) {
        if (sortedClasses.containsKey(curSize)) {
          Set<String> existingSet=sortedClasses.get(curSize);
          existingSet.add(className);
          sortedClasses.put(curSize,existingSet);
        }
 else {
          Set<String> newSet=new TreeSet<String>();
          newSet.add(className);
          sortedClasses.put(curSize,newSet);
        }
        sumSize+=curSize;
      }
    }
    if (sortedClasses.size() > 0) {
      outFile.println("<p>");
      outFile.println("<table class=\"soyc-table\">");
      outFile.print("<colgroup>");
      outFile.print("<col id=\"soyc-splitpoint-type-col\">");
      outFile.print("<col id=\"soyc-splitpoint-size-col\">");
      outFile.println("</colgroup>");
      outFile.print("<thead>");
      outFile.print("<a name=\"" + filename(packageName) + "\"></a><th>Package: "+ packageName+ "</th>");
      outFile.print("<th>Size <span class=\"soyc-th-units\">(Bytes)</span></th>");
      outFile.print("</thead>");
      for (      Integer size : sortedClasses.keySet()) {
        Set<String> classNames=sortedClasses.get(size);
        for (        String className : classNames) {
          String drillDownFileName=depLinker.dependencyLinkForClass(className);
          float perc=((float)size / (float)sumSize) * 100;
          outFile.println("<tr>");
          if (drillDownFileName == null) {
            outFile.println("<td>" + className + "</td>");
          }
 else {
            outFile.println("<td><a href=\"" + drillDownFileName + "\" target=\"_top\">"+ className+ "</a></td>");
          }
          outFile.print("<td>");
          outFile.print("<div class=\"soyc-bar-graph goog-inline-block\">");
          outFile.print("<div style=\"width:" + perc + "%;\" class=\"soyc-bar-graph-fill goog-inline-block\"></div>");
          outFile.print("</div>");
          outFile.print(size + " (" + formatNumber(perc)+ "%)");
          outFile.print("</td>");
          outFile.println("</tr>");
        }
      }
      outFile.println("</table>");
      outFile.println("</p>");
    }
  }
  addStandardHtmlEnding(outFile);
  outFile.close();
}

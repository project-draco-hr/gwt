{
  if (frozen == null) {
    throw new RuntimeException("freeze() not called.");
  }
  outFile.println("  var internedStrings = [");
  for (  String key : frozen.keySet()) {
    outFile.print("\"" + key + "\",");
  }
  outFile.println("];");
  outFile.println("  var spl = [");
  for (int sp=1; sp <= globalInformation.getNumSplitPoints(); sp++) {
    outFile.println("        '" + globalInformation.getSplitPointToLocation().get(sp) + "',");
  }
  outFile.println("  ];");
  outFile.println("  var methodSizes = {");
  for (  SizeBreakdown breakdown : globalInformation.allSizeBreakdowns()) {
    for (    Entry<String,Integer> methodEntry : breakdown.methodToSize.entrySet()) {
      String methodSignature=methodEntry.getKey();
      String method=methodSignature.substring(0,methodSignature.indexOf("("));
      outFile.println("    \"" + method + "\" : "+ methodEntry.getValue()+ ",");
    }
  }
  outFile.println("};");
  outFile.println("  var images = {");
  outFile.println("    \"closed\" : \"images/play-g16.png\",");
  outFile.println("    \"open\" : \"images/play-g16-down.png\",");
  outFile.println("  };");
  outFile.println("  function a(packageRef, classRef) {");
  outFile.println("    var className = internedStrings[packageRef] + \".\" + " + "internedStrings[classRef];");
  outFile.println("    document.write(\"<div class='main'>\");");
  outFile.println("    document.write(\"<table class='soyc-table'>\");");
  outFile.println("    document.write(\"<thead>\");");
  outFile.println("    document.write(\"<th><a class='soyc-class-name' " + "name='\" + className + \"'>" + "Class: \" + className + \"</a></th>\");");
  outFile.println("    document.write(\"<th class='soyc-numerical-col-header'>Size " + "<span class='soyc-th-units'>(bytes)</span></th>\");");
  outFile.println("    document.write(\"</thead>\");");
  outFile.println("  }");
  outFile.println("  function swapShowHide(elementName) {");
  outFile.println("    hp = document.getElementById(elementName);");
  outFile.println("    arrow = document.getElementById(\"dropdown-\" + elementName);");
  outFile.println("    if (hp.style.display !== \"none\" && hp.style.display " + "!== \"inline\") {");
  outFile.println("      hp.style.display = \"inline\";");
  outFile.println("      arrow.src = images[\"open\"];");
  outFile.println("    } else if (hp.style.display === \"none\") {");
  outFile.println("      hp.style.display = \"inline\";");
  outFile.println("      arrow.src = images[\"open\"];");
  outFile.println("    } else {");
  outFile.println("      hp.style.display = \"none\";");
  outFile.println("      arrow.src = images[\"closed\"];");
  outFile.println("    }");
  outFile.println("  }");
  outFile.println("  function b(c, deps) {");
  outFile.println("    var methodName = internedStrings[c[0]] + \".\" + internedStrings[c[1]] " + "+ \"::\" + internedStrings[c[2]];");
  outFile.println("    var methodSize = methodSizes[methodName];");
  outFile.println("    if (methodSize === undefined) methodSize = \"--\";");
  outFile.println("    var callstackId = \"callstack-\" + methodName;");
  outFile.println("    document.write(\"<tr>\");");
  outFile.println("    document.write(\"<td>\");");
  outFile.println("    document.write(\"<img onclick='swapShowHide(\\\"\" + " + "callstackId + \"\\\")'" + "id='dropdown-\" + callstackId + \"' "+ "class='dropdown-img' "+ "src=\" + images[\"closed\"] + \">\");");
  outFile.println("    document.write(\"<a class='toggle soyc-call-stack-link' " + "onclick='swapShowHide(\\\"\" + callstackId + \"\\\")'>\" + methodName + \"</a>\");");
  outFile.println("    document.write(\"<ul id='\" + callstackId + \"' " + "class='soyc-call-stack-list'>\");");
  outFile.println("    for (var i = 0; i < deps.length ; i++) {");
  outFile.println("      var s = deps[i];");
  outFile.println("      document.write(\"<li>\" + internedStrings[s[0]] + \".\" + " + "internedStrings[s[1]] + \"::\" + internedStrings[s[2]] + \"</li>\");");
  outFile.println("    }");
  outFile.println("    document.write(\"</ul>\");");
  outFile.println("    document.write(\"</td>\");");
  outFile.println("    document.write(\"<td class='soyc-numerical-col'>\" + " + "methodSize + \"</td>\");");
  outFile.println("    document.write(\"</tr>\");");
  outFile.println("  }");
  outFile.println("  function j() {");
  outFile.println("    document.write(\"</div></table>\");");
  outFile.println("  }");
  outFile.println("  function c(packageRef,classRef,packageHashRef) {");
  outFile.println("    var packageName = internedStrings[packageRef];");
  outFile.println("    var className = packageName + \".\" + internedStrings[classRef];");
  outFile.println("    var d1 = 'methodDependencies-total-" + getPermutationId() + ".html';");
  outFile.println("    document.write(\"<ul class='soyc-excl'>\");");
  outFile.println("    document.write(\"<li><a href='\" + d1 + \"#\" + className + \"'>" + "See why it's live</a></li>\");");
  outFile.println("    for (var sp = 1; sp <= " + globalInformation.getNumSplitPoints() + "; sp++) {");
  outFile.println("      var d2 = 'methodDependencies-sp' + sp + '-" + getPermutationId() + ".html';");
  outFile.println("      document.write(\"<li><a href='\" + d2 + \"#\" + className +\"'>" + " See why it's not exclusive to s.p. #\" + sp + \" (\" + spl[sp - 1] + \")" + "</a></li>\");");
  outFile.println("    }");
  outFile.println("    document.write(\"</ul>\");");
  outFile.println("  }");
  outFile.println("  function d(packageRef) {");
  outFile.println("    document.write(\"<div class='soyc-pkg-break'>Package: \" + " + "internedStrings[packageRef] + \"</div>\");");
  outFile.println("  }");
  outFile.println("  function e(packageRef,classRef,classHashRef) {");
  outFile.println("    document.write(\"<a name='\" + classHashRef + \"'></a><h3>\" + " + "internedStrings[packageRef] + \".\" + internedStrings[classRef] + \"</h3>\");");
  outFile.println("  }");
  outFile.println("  function f() {");
  outFile.println("    document.write(\"<p>Some code is included in the initial fragment" + "</p>\");");
  outFile.println("  }");
  outFile.println("  function g(packageRef, classRef, packageHashRef) {");
  outFile.println("    document.write(\"<p>Some code is included in the initial fragment " + "(<a href='methodDependencies-initial-\" + internedStrings[packageHashRef] + \"-" + getPermutationId() + ".html#\" + internedStrings[packageRef] + \".\" + "+ "internedStrings[classRef] + \"'> See why</a>)</p>\");");
  outFile.println("  }");
  outFile.println("  function h(packageRef, classRef, sp) {");
  outFile.println("    document.write(\"<p>Some code downloads with split point \" + sp + " + "\": \" + spl[sp - 1] + \"</p>\");");
  outFile.println("  }");
  outFile.println("  function i() {");
  outFile.println("    document.write(\"<p>Some code is left over:</p>\");");
  outFile.println("  }");
}

{
  sw.println("public ResourcePrototype[] getResources() {");
  sw.indent();
  sw.println("return new ResourcePrototype[] {");
  sw.indent();
  for (  List<JMethod> methods : taskList.values()) {
    for (    JMethod m : methods) {
      sw.println(m.getName() + "(), ");
    }
  }
  sw.outdent();
  sw.println("};");
  sw.outdent();
  sw.println("}");
  sw.println("public ResourcePrototype getResource(String name) {");
  sw.indent();
  sw.println("if (GWT.isScript()) {");
  sw.indent();
  sw.println("return getResourceNative(name);");
  sw.outdent();
  sw.println("} else {");
  sw.indent();
  sw.println("if (" + resourceMapField + " == null) {");
  sw.indent();
  sw.println(resourceMapField + " = new " + resourceMapType.getParameterizedQualifiedSourceName()+ "();");
  for (  List<JMethod> list : taskList.values()) {
    for (    JMethod m : list) {
      sw.println(resourceMapField + ".put(\"" + m.getName()+ "\", "+ m.getName()+ "());");
    }
  }
  sw.outdent();
  sw.println("}");
  sw.println("return resourceMap.get(name);");
  sw.outdent();
  sw.println("}");
  sw.outdent();
  sw.println("}");
  sw.println("private native ResourcePrototype " + "getResourceNative(String name) /*-{");
  sw.indent();
  sw.println("switch (name) {");
  sw.indent();
  for (  List<JMethod> list : taskList.values()) {
    for (    JMethod m : list) {
      sw.println("case '" + m.getName() + "': return this."+ m.getJsniSignature()+ "();");
    }
  }
  sw.outdent();
  sw.println("}");
  sw.println("return null;");
  sw.outdent();
  sw.println("}-*/;");
}

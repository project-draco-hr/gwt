{
  MockNetwork network=createMockNetwork();
  RequestProcessor requestProcessor=new RequestProcessor(){
    public Response execute(    Request request) throws Exception {
      fail("Should not reach here.");
      return null;
    }
  }
;
  MessageTransport messageTransport=new MessageTransport(network.getClientSocket().getInputStream(),network.getClientSocket().getOutputStream(),requestProcessor);
  Message.Request.Builder requestMessageBuilder=Message.Request.newBuilder();
  requestMessageBuilder.setRequestId(0);
  requestMessageBuilder.setServiceType(Message.Request.ServiceType.DEV_MODE);
  Message.Request request=requestMessageBuilder.build();
  Future<Response> responseFuture=messageTransport.executeRequestAsync(request);
  assertNotNull(responseFuture);
  Message receivedRequest=Message.parseDelimitedFrom(network.getServerSocket().getInputStream());
  assertEquals(receivedRequest.getRequest(),request);
  Message.Response.Builder responseBuilder=Message.Response.newBuilder();
  responseBuilder.setRequestId(20);
  Message.Response response=responseBuilder.build();
  Message.Builder responseMsgBuilder=Message.newBuilder();
  responseMsgBuilder.setMessageType(Message.MessageType.RESPONSE);
  responseMsgBuilder.setResponse(response);
  Message responseMsg=responseMsgBuilder.build();
  responseMsg.writeDelimitedTo(network.getServerSocket().getOutputStream());
  try {
    responseFuture.get(2,TimeUnit.SECONDS);
    fail("Should have thrown an exception");
  }
 catch (  TimeoutException te) {
  }
  network.shutdown();
}

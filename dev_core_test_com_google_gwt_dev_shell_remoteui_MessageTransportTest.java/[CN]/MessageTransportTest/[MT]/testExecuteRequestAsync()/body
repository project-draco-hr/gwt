{
  MockNetwork network=createMockNetwork();
  RequestProcessor requestProcessor=new RequestProcessor(){
    public Response execute(    Request request) throws Exception {
      fail("Should not reach here.");
      return null;
    }
  }
;
  MessageTransport messageTransport=new MessageTransport(network.getClientSocket().getInputStream(),network.getClientSocket().getOutputStream(),requestProcessor,null);
  DevModeRequest.Builder devModeRequestBuilder=DevModeRequest.newBuilder();
  devModeRequestBuilder.setRequestType(RequestType.CAPABILITY_EXCHANGE);
  Message.Request.Builder requestMessageBuilder=Message.Request.newBuilder();
  requestMessageBuilder.setServiceType(Message.Request.ServiceType.DEV_MODE);
  requestMessageBuilder.setDevModeRequest(devModeRequestBuilder);
  Message.Request request=requestMessageBuilder.build();
  Future<Response> responseFuture=messageTransport.executeRequestAsync(request);
  assertNotNull(responseFuture);
  Message receivedRequest=Message.parseDelimitedFrom(network.getServerSocket().getInputStream());
  assertEquals(receivedRequest.getRequest(),request);
  DevModeResponse.CapabilityExchange.Capability.Builder capabilityBuilder=DevModeResponse.CapabilityExchange.Capability.newBuilder();
  capabilityBuilder.setCapability(DevModeRequest.RequestType.RESTART_WEB_SERVER);
  DevModeResponse.CapabilityExchange.Builder capabilityExchangeResponseBuilder=DevModeResponse.CapabilityExchange.newBuilder();
  capabilityExchangeResponseBuilder.addCapabilities(capabilityBuilder);
  DevModeResponse.Builder devModeResponseBuilder=DevModeResponse.newBuilder();
  devModeResponseBuilder.setResponseType(DevModeResponse.ResponseType.CAPABILITY_EXCHANGE);
  devModeResponseBuilder.setCapabilityExchange(capabilityExchangeResponseBuilder);
  Response.Builder responseBuilder=Response.newBuilder();
  responseBuilder.setDevModeResponse(devModeResponseBuilder);
  Response response=responseBuilder.build();
  Message.Builder responseMsgBuilder=Message.newBuilder();
  responseMsgBuilder.setMessageType(Message.MessageType.RESPONSE);
  responseMsgBuilder.setMessageId(receivedRequest.getMessageId());
  responseMsgBuilder.setResponse(response);
  Message responseMsg=responseMsgBuilder.build();
  responseMsg.writeDelimitedTo(network.getServerSocket().getOutputStream());
  assertEquals(responseFuture.get(2,TimeUnit.SECONDS),response);
  network.shutdown();
}

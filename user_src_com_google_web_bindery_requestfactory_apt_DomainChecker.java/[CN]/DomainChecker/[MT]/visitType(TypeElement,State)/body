{
  TypeMirror clientType=clientTypeElement.asType();
  checkedElement=clientTypeElement;
  boolean isEntityProxy=state.types.isSubtype(clientType,state.entityProxyType);
  currentTypeIsProxy=isEntityProxy || state.types.isSubtype(clientType,state.valueProxyType);
  domainElement=state.getClientToDomainMap().get(clientTypeElement);
  if (domainElement == null) {
    return null;
  }
  requireInstanceDomainMethods=false;
  requireStaticDomainMethods=false;
  if (currentTypeIsProxy) {
    requireInstanceDomainMethods=true;
    if (!hasProxyLocator(clientTypeElement,state)) {
      if (!hasNoArgConstructor(domainElement)) {
        state.warn(clientTypeElement,Messages.domainNoDefaultConstructor(domainElement.getSimpleName(),clientTypeElement.getSimpleName(),state.requestContextType.asElement().getSimpleName()));
      }
      if (isEntityProxy && !state.types.isSameType(clientType,state.entityProxyType)) {
        checkDomainEntityMethods(state);
      }
    }
  }
 else   if (!hasServiceLocator(clientTypeElement,state)) {
    requireStaticDomainMethods=true;
  }
  scanAllInheritedMethods(clientTypeElement,state);
  return null;
}

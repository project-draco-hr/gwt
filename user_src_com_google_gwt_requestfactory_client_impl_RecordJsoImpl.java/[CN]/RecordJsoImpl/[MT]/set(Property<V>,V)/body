{
  if (value instanceof String) {
    setString(property.getName(),(String)value);
    return;
  }
  if (value instanceof Character) {
    setString(property.getName(),String.valueOf(value));
    return;
  }
  if (value instanceof Long || value instanceof BigDecimal || value instanceof BigInteger) {
    setString(property.getName(),String.valueOf(value));
    return;
  }
  if (value instanceof Integer || value instanceof Short || value instanceof Byte) {
    setInt(property.getName(),((Number)value).intValue());
    return;
  }
  if (value instanceof Date) {
    double millis=((Date)value).getTime();
    setString(property.getName(),String.valueOf(millis));
    return;
  }
  if (value instanceof Double || value instanceof Float) {
    setDouble(property.getName(),((Number)value).doubleValue());
    return;
  }
  if (value instanceof Enum<?>) {
    setInt(property.getName(),((Enum<?>)value).ordinal());
    return;
  }
  if (value instanceof Boolean) {
    setBoolean(property.getName(),((Boolean)value).booleanValue());
  }
  if (value instanceof Record) {
    setString(property.getName(),getRequestFactory().getSchema(value.getClass().getName()).getToken().getName() + "-" + String.valueOf(((Record)value).getId()));
  }
  throw new UnsupportedOperationException("Can't yet set properties of type " + value.getClass().getName());
}

{
  final int headerSize=getHeaderLines().length;
  final int fileSize=getLines().length;
  if (headerSize - mMultiLines.length > fileSize) {
    if (logHandler != null) {
      logHandler.log(1,"gwtheader.missing",null);
    }
  }
 else {
    int headerLineNo=0;
    int i;
    for (i=0; (headerLineNo < headerSize) && (i < fileSize); i++) {
      boolean isMatch=isMatch(i,headerLineNo);
      while (!isMatch && isMultiLine(headerLineNo)) {
        headerLineNo++;
        isMatch=(headerLineNo == headerSize) || isMatch(i,headerLineNo);
      }
      if (!isMatch) {
        if (logHandler != null) {
          logHandler.log(i + 1,"gwtheader.mismatch",getHeaderLines()[headerLineNo]);
        }
        break;
      }
      if (!isMultiLine(headerLineNo)) {
        headerLineNo++;
      }
    }
    if (i == fileSize) {
      for (; headerLineNo < headerSize; headerLineNo++) {
        if (!isMultiLine(headerLineNo)) {
          if (logHandler != null) {
            logHandler.log(1,"gwtheader.missing");
          }
          break;
        }
      }
    }
  }
}

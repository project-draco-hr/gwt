{
  Stack searchStack=new Stack();
  checkEmptiness(searchStack);
  for (int stackSizeIncreasing=0; stackSizeIncreasing < TEST_SEARCH_SIZE; stackSizeIncreasing++) {
    for (int theInt=0; theInt < stackSizeIncreasing; theInt++) {
      assertEquals("Increasing search found",searchStack.search(new Integer(theInt)),searchStack.size() - theInt);
    }
    for (int theInt=stackSizeIncreasing; theInt < TEST_SEARCH_SIZE; theInt++) {
      assertEquals("Increasing not found",searchStack.search(new Integer(theInt)),-1);
    }
    searchStack.push(new Integer(stackSizeIncreasing));
  }
  for (int stackSizeDecreasing=TEST_SEARCH_SIZE - 1; stackSizeDecreasing >= 0; stackSizeDecreasing--) {
    for (int theInt=TEST_SEARCH_SIZE - 1; theInt > stackSizeDecreasing; theInt--) {
      assertEquals("Search decreasing not found",searchStack.search(new Integer(theInt)),-1);
    }
    for (int theInt=stackSizeDecreasing; theInt >= 0; theInt--) {
      assertEquals("Search decreasing found",searchStack.search(new Integer(theInt)),searchStack.size() - theInt);
    }
    searchStack.pop();
  }
  checkEmptiness(searchStack);
}

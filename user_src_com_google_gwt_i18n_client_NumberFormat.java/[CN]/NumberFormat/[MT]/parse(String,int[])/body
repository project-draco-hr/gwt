{
  int start=inOutPos[0];
  boolean gotPositive, gotNegative;
  double ret=0.0;
  gotPositive=(text.indexOf(positivePrefix,inOutPos[0]) == inOutPos[0]);
  gotNegative=(text.indexOf(negativePrefix,inOutPos[0]) == inOutPos[0]);
  if (gotPositive && gotNegative) {
    if (positivePrefix.length() > negativePrefix.length()) {
      gotNegative=false;
    }
 else     if (positivePrefix.length() < negativePrefix.length()) {
      gotPositive=false;
    }
  }
  if (gotPositive) {
    inOutPos[0]+=positivePrefix.length();
  }
 else   if (gotNegative) {
    inOutPos[0]+=negativePrefix.length();
  }
  if (text.indexOf(numberConstants.infinity(),inOutPos[0]) == inOutPos[0]) {
    inOutPos[0]+=numberConstants.infinity().length();
    ret=Double.POSITIVE_INFINITY;
  }
 else   if (text.indexOf(numberConstants.notANumber(),inOutPos[0]) == inOutPos[0]) {
    inOutPos[0]+=numberConstants.notANumber().length();
    ret=Double.NaN;
  }
 else {
    ret=parseNumber(text,inOutPos);
  }
  if (gotPositive) {
    if (!(text.indexOf(positiveSuffix,inOutPos[0]) == inOutPos[0])) {
      inOutPos[0]=start;
      return 0.0;
    }
    inOutPos[0]+=positiveSuffix.length();
  }
 else   if (gotNegative) {
    if (!(text.indexOf(negativeSuffix,inOutPos[0]) == inOutPos[0])) {
      inOutPos[0]=start;
      return 0.0;
    }
    inOutPos[0]+=negativeSuffix.length();
  }
  if (gotNegative) {
    ret=-ret;
  }
  return ret;
}

{
  StringBuffer b=new StringBuffer();
  b.append("<g:Grid>");
  b.append("  <g:row>");
  b.append("    <g:cell>");
  b.append("      <div>foo HTML element</div>");
  b.append("    </g:cell>");
  b.append("    <g:cell>");
  b.append("      <div>bar HTML element</div>");
  b.append("    </g:cell>");
  b.append("  </g:row>");
  b.append("  <g:row>");
  b.append("    <g:customCell>");
  b.append("      <g:Label/>");
  b.append("    </g:customCell>");
  b.append("    <g:customCell>");
  b.append("      <g:Label/>");
  b.append("    </g:customCell>");
  b.append("  </g:row>");
  b.append("</g:Grid>");
  String[] expected={"fieldName.resize(2, 2);","fieldName.setHTML(0, 0, \"@mockToken-" + ElementParserTester.FIELD_NAME + "-<div>foo HTML element</div>\");","fieldName.setHTML(0, 1, \"@mockToken-" + ElementParserTester.FIELD_NAME + "-<div>bar HTML element</div>\");","fieldName.setWidget(1, 0, <g:Label>);","fieldName.setWidget(1, 1, <g:Label>);"};
  FieldWriter w=tester.parse(b.toString());
  assertNull(w.getInitializer());
  Iterator<String> i=tester.writer.statements.iterator();
  for (  String e : expected) {
    assertEquals(e,i.next());
  }
  assertFalse(i.hasNext());
  assertNull(tester.logger.died);
}

{
  assertSuperHierarchy(classObject,classObject);
  assertSuperHierarchy(classString,classString,classObject);
  assertSuperHierarchy(classJso,classJso,classObject);
  assertSuperHierarchy(intfSerializable,intfSerializable);
  assertSuperHierarchy(intfCloneable,intfCloneable);
  assertSuperHierarchy(intfIBase,intfIBase);
  assertSuperHierarchy(intfI,intfI,intfIBase);
  assertSuperHierarchy(intfJ,intfJ);
  assertSuperHierarchy(intfK,intfK);
  assertSuperHierarchy(classBase,classBase,classObject);
  assertSuperHierarchy(classA,classA,classObject,classBase);
  assertSuperHierarchy(classB,classB,classObject,classBase,intfIBase,intfI);
  assertSuperHierarchy(classC,classC,classObject,intfIBase,intfI);
  assertSuperHierarchy(classBSub,classBSub,classObject,classBase,classB,intfIBase,intfI);
  assertSuperHierarchy(classJso1,classJso1,classObject,classJso,intfJ);
  assertSuperHierarchy(classJso2,classJso2,classObject,classJso,intfK);
  assertSuperHierarchy(intfIterable,intfIterable);
  assertSuperHierarchy(intfCollection,intfCollection,intfIterable);
  assertSuperHierarchy(intfList,intfList,intfIterable,intfCollection);
  assertSuperHierarchy(classArrayList,classArrayList,intfList,classObject,intfIterable,intfCollection);
  assertSuperHierarchy(arrayOfB,arrayOfB,arrayOfBase,arrayOfObject,arrayOfIntfI,arrayOfIntfIBase,classObject);
  assertSuperHierarchy(arrayOfArrayOfB,arrayOfArrayOfB,arrayOfArrayOfBase,arrayOfArrayOfObject,arrayOfArrayOfIntfI,arrayOfArrayOfIntfIBase,classObject);
  assertSuperHierarchy(arrayOfInt,arrayOfInt,classObject);
  intfCollection=createInterface("java.util.Collection");
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(classArrayList,intfList,intfCollection,classObject),Sets.<JDeclaredType>newHashSet(intfIterable));
  assertSuperHierarchy(intfCollection,intfCollection);
  assertSuperHierarchy(intfList,intfList,intfCollection);
  assertSuperHierarchy(classArrayList,classArrayList,intfList,classObject,intfCollection);
  classA=createClass("A",classObject,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(classA,classObject),Sets.<JDeclaredType>newHashSet(classBase));
  assertSuperHierarchy(classA,classA,classObject);
  JClassType classASub=createClass("ASub",classA,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(classASub,classA,classObject),Sets.<JDeclaredType>newHashSet());
  assertSuperHierarchy(classASub,classASub,classA,classObject);
}

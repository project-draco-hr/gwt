{
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes());
  JClassType jso=createClass("SomeJSO",classJso,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(jso),Collections.<JDeclaredType>emptySet());
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jso));
  program.typeOracle.updateImmediateTypeRelations(Collections.<JDeclaredType>emptySet(),Sets.<JDeclaredType>newHashSet(jso));
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jso));
  jso=createClass("SomeJSO",classJso,false,false);
  JClassType jsoChild=createClass("SomeJSOChild",jso,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(jso,jsoChild),Collections.<JDeclaredType>emptySet());
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jsoChild));
  jsoChild=createClass("SomeJSOChild",classObject,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(jsoChild),Collections.<JDeclaredType>emptySet());
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jsoChild));
  jso=createClass("SomeJSO",classJso,false,false);
  jsoChild=createClass("SomeJSOChild",jso,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(jsoChild),Collections.<JDeclaredType>emptySet());
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jsoChild));
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jso));
  jso=createClass("SomeJSO",classObject,false,false);
  program.typeOracle.updateImmediateTypeRelations(Sets.<JDeclaredType>newHashSet(jso),Collections.<JDeclaredType>emptySet());
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jsoChild));
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jso));
}

{
  List<String> emptyList=Lists.<String>newArrayList();
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),program.getModuleDeclaredTypes(),emptyList);
  JClassType jso=createClass("SomeJSO",classJso,false,false);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Sets.<JDeclaredType>newHashSet(jso),emptyList);
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jso));
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Collections.<JDeclaredType>emptySet(),Lists.newArrayList(jso.getName()));
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jso));
  jso=createClass("SomeJSO",classJso,false,false);
  JClassType jsoChild=createClass("SomeJSOChild",jso,false,false);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Sets.<JDeclaredType>newHashSet(jso,jsoChild),emptyList);
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jsoChild));
  jsoChild=createClass("SomeJSOChild",classObject,false,false);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Sets.<JDeclaredType>newHashSet(jsoChild),emptyList);
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jsoChild));
  jso=createClass("SomeJSO",classJso,false,false);
  jsoChild=createClass("SomeJSOChild",jso,false,false);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Sets.<JDeclaredType>newHashSet(jsoChild),emptyList);
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jsoChild));
  Assert.assertTrue(program.typeOracle.isJavaScriptObject(jso));
  jso=createClass("SomeJSO",classObject,false,false);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),Sets.<JDeclaredType>newHashSet(jso),emptyList);
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jsoChild));
  Assert.assertFalse(program.typeOracle.isJavaScriptObject(jso));
}

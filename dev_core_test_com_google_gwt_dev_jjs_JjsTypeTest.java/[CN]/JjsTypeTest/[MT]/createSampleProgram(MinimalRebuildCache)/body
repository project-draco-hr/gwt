{
  program=new JProgram(minimalRebuildCache);
  typeOracle=program.typeOracle;
  synthSource=SourceOrigin.UNKNOWN;
  classObject=createClass("java.lang.Object",null,false,false);
  classString=createClass("java.lang.String",classObject,false,true);
  createClass("com.google.gwt.lang.Array",classObject,false,true);
  classJso=createClass("com.google.gwt.core.client.JavaScriptObject",classObject,false,false);
  intfSerializable=createInterface("java.io.Serializable");
  intfCloneable=createInterface("java.lang.Cloneable");
  intfIBase=createInterface("IBase");
  intfI=createInterface("I");
  intfI.addImplements(intfIBase);
  intfJ=createInterface("J");
  intfK=createInterface("K");
  classBase=createClass("Base",classObject,false,false);
  classA=createClass("A",classBase,false,false);
  classB=createClass("B",classBase,false,false);
  classB.addImplements(intfI);
  classC=createClass("C",classObject,false,false);
  classC.addImplements(intfI);
  classBSub=createClass("BSub",classB,false,false);
  classJso1=createClass("Jso1",classJso,false,false);
  classJso1.addImplements(intfJ);
  classJso2=createClass("Jso2",classJso,false,false);
  classJso2.addImplements(intfK);
  intfIterable=createInterface("java.util.Iterable");
  intfCollection=createInterface("java.util.Collection");
  intfCollection.addImplements(intfIterable);
  intfList=createInterface("java.util.List");
  intfList.addImplements(intfCollection);
  classArrayList=createClass("java.util.ArrayList",classObject,false,false);
  classArrayList.addImplements(intfList);
  classBnn=classB.getNonNull();
  classBaseNn=classBase.getNonNull();
  arrayOfObject=program.getTypeArray(classObject);
  arrayOfBase=program.getTypeArray(classBase);
  arrayOfA=program.getTypeArray(classA);
  arrayOfB=program.getTypeArray(classB);
  arrayOfBSub=program.getTypeArray(classBSub);
  arrayOfIntfIBase=program.getTypeArray(intfIBase);
  arrayOfIntfI=program.getTypeArray(intfI);
  arrayOfC=program.getTypeArray(classC);
  arrayOfInt=program.getTypeArray(program.getTypePrimitiveInt());
  arrayOfJso=program.getTypeArray(classJso);
  arrayOfJso1=program.getTypeArray(classJso1);
  arrayOfJso2=program.getTypeArray(classJso2);
  arrayOfIntfJ=program.getTypeArray(intfJ);
  arrayOfIntfK=program.getTypeArray(intfK);
  arrayOfIntfClonable=program.getTypeArray(intfCloneable);
  arrayOfIntfSerializable=program.getTypeArray(intfSerializable);
  arrayOfArrayOfBase=program.getOrCreateArrayType(classBase,2);
  arrayOfArrayOfObject=program.getOrCreateArrayType(classObject,2);
  arrayOfArrayOfIntfI=program.getOrCreateArrayType(intfI,2);
  arrayOfArrayOfIntfIBase=program.getOrCreateArrayType(intfIBase,2);
  arrayOfArrayOfInt=program.getOrCreateArrayType(program.getTypePrimitiveInt(),2);
  arrayOfArrayOfB=program.getOrCreateArrayType(classB,2);
  program.typeOracle.computeBeforeAST(StandardTypes.createFrom(program),program.getDeclaredTypes(),program.getModuleDeclaredTypes(),EMPTY_LIST);
  typeNull=program.getTypeNull();
}

{
  super.process(cud,i);
  ClassFile[] classFiles=cud.compilationResult().getClassFiles();
  Map<ClassFile,CompiledClass> results=new LinkedHashMap<ClassFile,CompiledClass>();
  for (  ClassFile classFile : classFiles) {
    createCompiledClass(classFile,results);
  }
  List<CompiledClass> compiledClasses=new ArrayList<CompiledClass>(results.values());
  addBinaryTypes(compiledClasses);
  ICompilationUnit icu=cud.compilationResult().compilationUnit;
  Adapter adapter=(Adapter)icu;
  CompilationUnitBuilder builder=adapter.getBuilder();
  processor.process(builder,cud,compiledClasses);
}

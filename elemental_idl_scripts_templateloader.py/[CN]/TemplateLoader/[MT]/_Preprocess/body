def _Preprocess(self, template, filename):

    def error(lineno, message):
        raise Exception(('%s:%s: %s' % (filename, lineno, message)))
    lines = template.splitlines(True)
    out = []
    condition_stack = []
    active = True
    seen_else = False
    for (lineno, full_line) in enumerate(lines):
        line = full_line.strip()
        if line.startswith('$'):
            words = line.split()
            directive = words[0]
            if (directive == '$if'):
                if (len(words) != 2):
                    error(lineno, '$if does not have single variable')
                variable = words[1]
                if (variable in self._conditions):
                    condition_stack.append((active, seen_else))
                    active = self._conditions[variable]
                    seen_else = False
                else:
                    error(lineno, ("Unknown $if variable '%s'" % variable))
            elif (directive == '$else'):
                if (not condition_stack):
                    error(lineno, '$else without $if')
                if seen_else:
                    raise error(lineno, 'Double $else')
                seen_else = True
                active = (not active)
            elif (directive == '$endif'):
                if (not condition_stack):
                    error(lineno, '$endif without $if')
                (active, seen_else) = condition_stack.pop()
            elif active:
                out.append(full_line)
        else:
            if active:
                out.append(full_line)
            continue
    if condition_stack:
        error(len(lines), 'Unterminated $if')
    return ''.join(out)

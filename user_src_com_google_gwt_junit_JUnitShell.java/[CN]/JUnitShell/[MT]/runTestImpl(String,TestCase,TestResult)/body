{
  String newTestCaseClassName=testCase.getClass().getName();
  boolean sameTest=newTestCaseClassName.equals(testCaseClassName);
  if (sameTest && lastLaunchFailed) {
    throw new UnableToCompleteException();
  }
  messageQueue.setNextTestName(newTestCaseClassName,testCase.getName());
  try {
    lastLaunchFailed=false;
    testCaseClassName=newTestCaseClassName;
    currentModuleName=moduleName;
    runStyle.maybeLaunchModule(moduleName,!sameTest);
  }
 catch (  UnableToCompleteException e) {
    lastLaunchFailed=true;
    testResult.addError(testCase,e);
    return;
  }
  try {
    testBeginTimeout=System.currentTimeMillis() + TEST_BEGIN_TIMEOUT_MILLIS;
    pumpEventLoop();
  }
 catch (  TimeoutException e) {
    lastLaunchFailed=true;
    testResult.addError(testCase,e);
    return;
  }
  List<TestResults> results=messageQueue.getResults(testCaseClassName);
  if (results == null) {
    return;
  }
  boolean parallelTesting=numClients > 1;
  for (  TestResults result : results) {
    Trial firstTrial=result.getTrials().get(0);
    Throwable exception=firstTrial.getException();
    if (parallelTesting && exception != null) {
      String msg="Remote test failed at " + result.getHost() + " on "+ result.getAgent();
      if (exception instanceof AssertionFailedError) {
        AssertionFailedError newException=new AssertionFailedError(msg + "\n" + exception.getMessage());
        newException.setStackTrace(exception.getStackTrace());
        exception=newException;
      }
 else {
        exception=new RuntimeException(msg,exception);
      }
    }
    if (exception instanceof AssertionFailedError) {
      testResult.addFailure(testCase,(AssertionFailedError)exception);
    }
 else     if (exception != null) {
      testResult.addError(testCase,exception);
    }
    if (testCase instanceof Benchmark) {
      report.addBenchmarkResults(testCase,result);
    }
  }
}

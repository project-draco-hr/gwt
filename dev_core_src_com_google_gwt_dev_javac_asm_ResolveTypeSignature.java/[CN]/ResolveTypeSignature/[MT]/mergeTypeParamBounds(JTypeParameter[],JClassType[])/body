{
  int n=typeArgs.length;
  for (int i=0; i < n; ++i) {
    JWildcardType wildcard=typeArgs[i].isWildcard();
    if (wildcard != null && wildcard.getBoundType() == BoundType.UNBOUND && wildcard.getBaseType() == resolver.getTypeOracle().getJavaLangObject() && typeParams[i].getBaseType() != null) {
      typeArgs[i]=resolver.getTypeOracle().getWildcardType(BoundType.UNBOUND,typeParams[i].getBaseType());
    }
  }
}

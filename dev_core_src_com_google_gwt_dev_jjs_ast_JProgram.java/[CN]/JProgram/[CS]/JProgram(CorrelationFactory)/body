{
  super(null,correlator.makeSourceInfo(SourceOrigin.create(0,JProgram.class.getName())));
  this.correlator=correlator;
  intrinsic=createSourceInfo(0,getClass().getName());
  literalAbsentArrayDim=new JAbsentArrayDimension(this,createLiteralSourceInfo("Absent array dimension"));
  literalFalse=new JBooleanLiteral(this,createLiteralSourceInfo("false literal",Literal.BOOLEAN),false);
  literalIntNegOne=new JIntLiteral(this,createLiteralSourceInfo("-1 literal",Literal.INT),-1);
  literalIntOne=new JIntLiteral(this,createLiteralSourceInfo("1 literal",Literal.INT),1);
  literalIntZero=new JIntLiteral(this,createLiteralSourceInfo("0 literal",Literal.INT),0);
  literalNull=new JNullLiteral(this,createLiteralSourceInfo("null literal",Literal.NULL));
  literalTrue=new JBooleanLiteral(this,createLiteralSourceInfo("true literal",Literal.BOOLEAN),true);
  typeBoolean=new JPrimitiveType(this,"boolean","Z","java.lang.Boolean",literalFalse);
  typeByte=new JPrimitiveType(this,"byte","B","java.lang.Byte",literalIntZero);
  typeChar=new JPrimitiveType(this,"char","C","java.lang.Character",getLiteralChar((char)0));
  typeDouble=new JPrimitiveType(this,"double","D","java.lang.Double",getLiteralDouble(0));
  typeFloat=new JPrimitiveType(this,"float","F","java.lang.Float",getLiteralFloat(0));
  typeInt=new JPrimitiveType(this,"int","I","java.lang.Integer",literalIntZero);
  typeLong=new JPrimitiveType(this,"long","J","java.lang.Long",getLiteralLong(0));
  typeNull=new JNullType(this,createLiteralSourceInfo("null type"));
  typeShort=new JPrimitiveType(this,"short","S","java.lang.Short",literalIntZero);
  typeVoid=new JPrimitiveType(this,"void","V","java.lang.Void",null);
  stringPoolSourceInfo=createLiteralSourceInfo("String pool",Literal.STRING);
}

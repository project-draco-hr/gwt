{
  if (frag1 == frag2) {
    return frag1;
  }
  if (frag1 == 0) {
    return 0;
  }
  if (frag2 == 0) {
    return 0;
  }
  int sp1=frag1;
  int sp2=frag2;
  if (result != null) {
    sp1=result.getSplitPointFromFragmnet(sp1);
    sp2=result.getSplitPointFromFragmnet(sp2);
  }
  int initPos1=initialSeq.indexOf(sp1);
  int initPos2=initialSeq.indexOf(sp2);
  if (initPos1 >= 0 && initPos2 >= 0) {
    if (initPos1 < initPos2) {
      return frag1;
    }
    return frag2;
  }
  if (initPos1 >= 0) {
    return frag1;
  }
  if (initPos2 >= 0) {
    return frag2;
  }
  assert(initPos1 < 0 && initPos2 < 0);
  assert(frag1 != frag2);
  if (result != null) {
    return result.getLeftoverFragmentIndex();
  }
 else {
    return CodeSplitter.getLeftoversFragmentNumber(numSps);
  }
}

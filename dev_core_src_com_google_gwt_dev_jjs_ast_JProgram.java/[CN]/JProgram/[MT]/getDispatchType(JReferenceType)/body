{
  if (!typeOracle.isInstantiatedType(type)) {
    return EnumSet.noneOf(DispatchType.class);
  }
  if (type == getTypeJavaLangObject()) {
    return EnumSet.allOf(DispatchType.class);
  }
  EnumSet<DispatchType> dispatchSet=EnumSet.noneOf(DispatchType.class);
  DispatchType dispatchType=getRepresentedAsNativeTypesDispatchMap().get(type);
  if (dispatchType != null) {
    dispatchSet=EnumSet.of(dispatchType);
  }
 else   if (typeOracle.isDualJsoInterface(type)) {
    dispatchSet=EnumSet.of(DispatchType.HAS_JAVA_VIRTUAL_DISPATCH,DispatchType.JSO);
  }
 else   if (typeOracle.isSingleJsoImpl(type) || type.isJsoType()) {
    dispatchSet=EnumSet.of(DispatchType.JSO);
  }
  for (  JDeclaredType potentialNativeDispatchType : getRepresentedAsNativeTypes()) {
    if (typeOracle.isInstantiatedType(potentialNativeDispatchType) && typeOracle.castSucceedsTrivially(potentialNativeDispatchType,type)) {
      dispatchSet.add(getRepresentedAsNativeTypesDispatchMap().get(potentialNativeDispatchType));
      dispatchSet.add(DispatchType.HAS_JAVA_VIRTUAL_DISPATCH);
    }
  }
  return dispatchSet;
}

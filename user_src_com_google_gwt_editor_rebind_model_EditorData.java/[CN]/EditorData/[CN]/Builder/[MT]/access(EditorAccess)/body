{
  this.access=access;
  data.declaredPath=access.getPath();
  data.editorType=access.getEditorType();
  data.editedType=EditorModel.calculateEditedType(logger,data.editorType);
  data.simpleExpression=access.getExpresson();
  TypeOracle oracle=data.editorType.getOracle();
  JClassType leafType=oracle.findType(LeafValueEditor.class.getName());
  data.isLeaf=leafType.isAssignableFrom(data.editorType);
  JClassType composedType=oracle.findType(CompositeEditor.class.getName());
  data.isCompositeEditor=composedType.isAssignableFrom(data.editorType);
  JClassType hasDelegateType=oracle.findType(HasEditorDelegate.class.getName());
  JClassType hasEditorErrorsType=oracle.findType(HasEditorErrors.class.getName());
  data.isDelegateRequired=hasDelegateType.isAssignableFrom(data.editorType) || hasEditorErrorsType.isAssignableFrom(data.editorType) || !ModelUtils.isValueType(oracle,data.editedType);
  JClassType valueAwareType=oracle.findType(ValueAwareEditor.class.getName());
  data.isValueAware=valueAwareType.isAssignableFrom(data.editorType);
  return this;
}

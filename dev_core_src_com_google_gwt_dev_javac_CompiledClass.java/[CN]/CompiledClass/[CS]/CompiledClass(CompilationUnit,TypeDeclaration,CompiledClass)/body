{
  this.unit=unit;
  this.typeDeclaration=typeDeclaration;
  this.enclosingClass=enclosingClass;
  SourceTypeBinding binding=typeDeclaration.binding;
  this.binaryName=CharOperation.charToString(binding.constantPoolName());
  this.packageName=Shared.getPackageNameFromBinary(binaryName);
  if (binding instanceof LocalTypeBinding) {
    String qualifiedName=binaryName.replace('/','.');
    this.sourceName=qualifiedName.replace('$','.');
  }
 else {
    this.sourceName=getPackagePrefix(packageName) + String.valueOf(binding.qualifiedSourceName());
  }
  ClassFile classFile=getClassFile(typeDeclaration,binaryName);
  this.bytes=classFile.getBytes();
  this.location=String.valueOf(classFile.fileName());
}

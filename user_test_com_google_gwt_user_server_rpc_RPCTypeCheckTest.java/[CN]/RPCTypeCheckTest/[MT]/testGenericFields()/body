{
  try {
    RPC.decodeRequest(generateJClassValid());
  }
 catch (  Exception e) {
    fail("Unexpected assertion from testGenericFields (1a): " + e.getMessage());
  }
  try {
    RPC.decodeRequest(generateJClassRaw1());
  }
 catch (  Exception e) {
    fail("Unexpected assertion from testGenericFields (1b): " + e.getMessage());
  }
  try {
    RPC.decodeRequest(generateJClassRaw2());
  }
 catch (  Exception e) {
    fail("Unexpected assertion from testGenericFields (1c): " + e.getMessage());
  }
  try {
    RPC.decodeRequest(generateJClassSpoofing1());
    fail("Expected IncompatibleRemoteServiceException from testGenericFields (2)");
  }
 catch (  IncompatibleRemoteServiceException e) {
    assertEquals(SerializedTypeViolationException.class,e.getCause().getClass());
    assertTrue(e.getCause().getMessage().matches(".*HashSet.*Long.*"));
  }
  try {
    RPC.decodeRequest(generateJClassSpoofing2());
    fail("Expected IncompatibleRemoteServiceException from testGenericFields (3)");
  }
 catch (  IncompatibleRemoteServiceException e) {
    assertEquals(SerializedTypeViolationException.class,e.getCause().getClass());
    assertTrue(e.getCause().getMessage().matches(".*HashSet.*Short.*"));
  }
  try {
    RPC.decodeRequest(generateJClassSpoofing3());
    fail("Expected IncompatibleRemoteServiceException from testGenericFields (4)");
  }
 catch (  IncompatibleRemoteServiceException e) {
    assertEquals(SerializedTypeViolationException.class,e.getCause().getClass());
    assertTrue(e.getCause().getMessage().matches(".*HashSet.*Integer.*"));
  }
  try {
    RPC.decodeRequest(generateJClassSpoofing4());
    fail("Expected IncompatibleRemoteServiceException from testGenericFields (5)");
  }
 catch (  IncompatibleRemoteServiceException e) {
    assertEquals(SerializedTypeViolationException.class,e.getCause().getClass());
    assertTrue(e.getCause().getMessage().matches(".*HashSet.*String.*"));
  }
  try {
    RPC.decodeRequest(generateJClassSpoofing5());
    fail("Expected IncompatibleRemoteServiceException from testGenericFields (6)");
  }
 catch (  IncompatibleRemoteServiceException e) {
    assertEquals(SerializedTypeViolationException.class,e.getCause().getClass());
    assertTrue(e.getCause().getMessage().matches(".*HashSet.*Integer.*"));
  }
}

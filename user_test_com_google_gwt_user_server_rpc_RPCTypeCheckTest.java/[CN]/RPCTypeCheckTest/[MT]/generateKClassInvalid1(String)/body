{
  try {
    RPCTypeCheckFactory strFactory=new RPCTypeCheckFactory(ClassesParamTestClass.class,methodName);
    DClass<Integer,Integer> field1=new DClass<Integer,Integer>();
    field1.setY(12);
    field1.add(90);
    DClass<String,Integer> field2=new DClass<String,Integer>();
    field2.setY(34);
    field2.add("bar");
    DClass<String,Integer>[] field3=new DClass[1];
    field3[0]=new DClass<String,Integer>();
    field3[0].setY(56);
    field3[0].add("oof");
    DClass<String,Integer>[] field4=new DClass[1];
    field4[0]=new DClass<String,Integer>();
    field4[0].setY(78);
    field4[0].add("rab");
    KClass arg1=new KClass();
    arg1.field1=field1;
    arg1.field2=field2;
    arg1.field3=field3;
    arg1.field4=field4;
    strFactory.write(arg1);
    return strFactory.toString();
  }
 catch (  Exception e) {
    fail(e.getMessage());
    return null;
  }
}

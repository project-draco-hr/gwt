{
  if (!(event.getNewPlace() instanceof EntityListPlace)) {
    return;
  }
  EntityListPlace newPlace=(EntityListPlace)event.getNewPlace();
  final String name=listNameFilter.render(newPlace);
  final ExpensesEntityKey<?> key=newPlace.getKey();
  key.accept(new ExpensesEntityVisitor(){
    public void visit(    EmployeeKey employeeKey){
      List<Property<EmployeeKey,?>> columns=getEmployeeColumns();
      EntityListPresenter<EmployeeKey> presenter=new EntityListPresenter<EmployeeKey>(name,entitiesView,columns,places);
      requests.employeeRequest().findAllEmployees().forProperties(columns).to(presenter).fire();
    }
    public void visit(    ReportKey reportKey){
      List<Property<ReportKey,?>> columns=getReportColumns();
      EntityListPresenter<ReportKey> presenter=new EntityListPresenter<ReportKey>(name,entitiesView,columns,places);
      requests.reportRequest().findAllReports().forProperties(columns).to(presenter).fire();
    }
  }
);
  if (entitiesView.getParent() == null) {
    panel.clear();
    panel.add(entitiesView);
  }
}

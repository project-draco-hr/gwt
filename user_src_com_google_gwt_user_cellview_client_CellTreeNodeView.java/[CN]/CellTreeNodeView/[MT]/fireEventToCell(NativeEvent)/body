{
  if (parentNodeInfo == null) {
    return;
  }
  Cell<T> parentCell=parentNodeInfo.getCell();
  String eventType=event.getType();
  boolean isMouseDown="mousedown".equals(eventType);
  SelectionModel<? super T> selectionModel=parentNodeInfo.getSelectionModel();
  Element cellParent=getCellParent();
  Object key=getValueKey();
  if (selectionModel != null && isMouseDown && !parentCell.handlesSelection()) {
    selectionModel.setSelected(value,true);
  }
  if (!cellParent.isOrHasChild(Element.as(event.getEventTarget()))) {
    return;
  }
  Set<String> consumedEvents=parentCell.getConsumedEvents();
  if (consumedEvents != null && consumedEvents.contains(eventType)) {
    boolean cellWasEditing=parentCell.isEditing(cellParent,value,key);
    parentCell.onBrowserEvent(cellParent,value,key,event,parentNodeInfo.getValueUpdater());
    tree.cellIsEditing=parentCell.isEditing(cellParent,value,key);
    if (cellWasEditing && !tree.cellIsEditing) {
      CellBasedWidgetImpl.get().resetFocus(new Scheduler.ScheduledCommand(){
        public void execute(){
          tree.setFocus(true);
        }
      }
);
    }
  }
}

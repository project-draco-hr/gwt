{
  if (parentNodeInfo == null) {
    return;
  }
  Cell<T> parentCell=parentNodeInfo.getCell();
  String eventType=event.getType();
  Element cellParent=getCellParent();
  Object key=getValueKey();
  boolean cellWasEditing=parentCell.isEditing(cellParent,value,key);
  boolean isSelectionHandled=parentCell.handlesSelection() || KeyboardSelectionPolicy.BOUND_TO_SELECTION == tree.getKeyboardSelectionPolicy();
  HasData<T> display=(HasData<T>)parentNode.listView;
  CellPreviewEvent<T> previewEvent=CellPreviewEvent.fire(display,event,display,getIndex(),value,cellWasEditing,isSelectionHandled);
  if (previewEvent.isCanceled() || !cellParent.isOrHasChild(Element.as(event.getEventTarget()))) {
    return;
  }
  Set<String> consumedEvents=parentCell.getConsumedEvents();
  if (consumedEvents != null && consumedEvents.contains(eventType)) {
    parentCell.onBrowserEvent(cellParent,value,key,event,parentNodeInfo.getValueUpdater());
    tree.cellIsEditing=parentCell.isEditing(cellParent,value,key);
    if (cellWasEditing && !tree.cellIsEditing) {
      CellBasedWidgetImpl.get().resetFocus(new Scheduler.ScheduledCommand(){
        public void execute(){
          tree.setFocus(true);
        }
      }
);
    }
  }
}

{
  evalBooleanContext.remove(x.getIfExpr());
  JsExpression expr=x.getIfExpr();
  JsStatement thenStmt=x.getThenStmt();
  JsStatement elseStmt=x.getElseStmt();
  if (expr instanceof CanBooleanEval) {
    SourceInfo sourceInfo;
    CanBooleanEval cond=(CanBooleanEval)expr;
    JsStatement onlyStmtToExecute;
    JsStatement removed;
    if (cond.isBooleanTrue()) {
      onlyStmtToExecute=thenStmt;
      removed=elseStmt;
      sourceInfo=makeSourceInfo(x,"Simplified always-true condition");
    }
 else     if (cond.isBooleanFalse()) {
      onlyStmtToExecute=elseStmt;
      removed=thenStmt;
      sourceInfo=makeSourceInfo(x,"Simplified always-false condition");
    }
 else {
      return;
    }
    JsBlock block=new JsBlock(sourceInfo);
    block.getStatements().add(expr.makeStmt());
    if (onlyStmtToExecute != null) {
      block.getStatements().add(onlyStmtToExecute);
    }
    JsStatement decls=ensureDeclarations(removed);
    if (decls != null) {
      block.getStatements().add(decls);
    }
    ctx.replaceMe(accept(block));
  }
 else {
    boolean thenIsEmpty=isEmpty(thenStmt);
    boolean elseIsEmpty=isEmpty(elseStmt);
    JsExpression thenExpr=extractExpression(thenStmt);
    JsExpression elseExpr=extractExpression(elseStmt);
    if (thenIsEmpty && elseIsEmpty) {
      ctx.replaceMe(expr.makeStmt());
    }
 else     if (thenExpr != null && elseExpr != null) {
      JsConditional cond=new JsConditional(makeSourceInfo(x,"Replaced if statement with conditional"),x.getIfExpr(),thenExpr,elseExpr);
      ctx.replaceMe(accept(cond.makeStmt()));
    }
 else     if (thenIsEmpty && elseExpr != null) {
      JsBinaryOperation op=new JsBinaryOperation(makeSourceInfo(x,"Replaced if statement with ||"),JsBinaryOperator.OR,x.getIfExpr(),elseExpr);
      ctx.replaceMe(accept(op.makeStmt()));
    }
 else     if (thenIsEmpty && !elseIsEmpty) {
      JsUnaryOperation negatedOperation=new JsPrefixOperation(makeSourceInfo(x,"Simplified if with empty then statement"),JsUnaryOperator.NOT,x.getIfExpr());
      JsIf newIf=new JsIf(makeSourceInfo(x,"Simplified if with empty then statement"),negatedOperation,elseStmt,null);
      ctx.replaceMe(accept(newIf));
    }
 else     if (elseIsEmpty && thenExpr != null) {
      JsBinaryOperation op=new JsBinaryOperation(makeSourceInfo(x,"Replaced if statement with &&"),JsBinaryOperator.AND,x.getIfExpr(),thenExpr);
      ctx.replaceMe(accept(op.makeStmt()));
    }
 else     if (elseIsEmpty && elseStmt != null) {
      JsIf newIf=new JsIf(makeSourceInfo(x,"Pruned empty else statement"),x.getIfExpr(),thenStmt,null);
      ctx.replaceMe(accept(newIf));
    }
  }
}

def test_merge(self):
    file_name1 = self._create_input('input1.idl', '\n      module M {\n        interface I {\n          const int CONST_BOTH = 0;\n          const int CONST_ONLY_FIRST = 0;\n          const int CONST_BOTH_DIFFERENT_VALUE = 0;\n\n          readonly attribute int attr_only_first;\n          readonly attribute int attr_both;\n          readonly attribute int attr_both_readonly_difference;\n          readonly attribute int attr_both_int_long_difference;\n\n          int op_only_first();\n          int op_both(int a);\n          int op_both_optionals_difference(int a,\n            in optional int b);\n          int op_both_arg_rename(int arg);\n        };\n      };')
    self._builder.import_idl_file(file_name1, DatabaseBuilderOptions(source='1st', idl_syntax=idlparser.FREMONTCUT_SYNTAX))
    file_name2 = self._create_input('input2.idl', '\n      module M {\n        interface I {\n          const int CONST_BOTH = 0;\n          const int CONST_ONLY_SECOND = 0;\n          const int CONST_BOTH_DIFFERENT_VALUE = 1;\n\n          readonly attribute int attr_only_second;\n          readonly attribute int attr_both;\n          readonly attribute long attr_both_int_long_difference;\n          attribute int attr_both_readonly_difference;\n\n          int op_only_second();\n          int op_both(int a);\n          int op_both_optionals_difference(int a,\n            optional boolean b);\n          int op_both_arg_rename(int betterName);\n        };\n      };')
    self._builder.import_idl_file(file_name2, DatabaseBuilderOptions(source='2nd', idl_syntax=idlparser.FREMONTCUT_SYNTAX))
    self._builder.set_same_signatures({'int': 'long', })
    self._builder.merge_imported_interfaces([])
    self._db.Save()
    self._assert_content_equals('I.idl', '\n      @1st(module=M) @2nd(module=M) interface I {\n        /* Constants */\n        @1st @2nd const int CONST_BOTH = 0;\n        @1st const int CONST_BOTH_DIFFERENT_VALUE = 0;\n        @2nd const int CONST_BOTH_DIFFERENT_VALUE = 1;\n        @1st const int CONST_ONLY_FIRST = 0;\n        @2nd const int CONST_ONLY_SECOND = 0;\n\n        /* Attributes */\n        @1st @2nd getter attribute int attr_both;\n        @1st @2nd getter attribute int attr_both_int_long_difference;\n        @1st @2nd getter attribute int attr_both_readonly_difference;\n        @2nd setter attribute int attr_both_readonly_difference;\n        @1st getter attribute int attr_only_first;\n        @2nd getter attribute int attr_only_second;\n\n        /* Operations */\n        @1st @2nd int op_both(in t a);\n        @1st @2nd int op_both_arg_rename(in t betterName);\n        @1st @2nd int op_both_optionals_difference(in t a);\n        @1st int op_both_optionals_difference(in t a, in int b);\n        @2nd int op_both_optionals_difference(in t a, in boolean b);\n        @1st int op_only_first();\n        @2nd int op_only_second();\n      };')

def test_mergeDartName(self):
    file_name1 = self._create_input('input1.idl', '\n      module M {\n        interface I {\n          [ImplementationFunction=foo] int member(in int a);\n        };\n      };')
    self._builder.import_idl_file(file_name1, DatabaseBuilderOptions(source='1st', idl_syntax=idlparser.FREMONTCUT_SYNTAX))
    file_name2 = self._create_input('input2.idl', '\n      module M {\n        interface I {\n          [DartName=bar] int member(in int a);\n        };\n      };')
    self._builder.import_idl_file(file_name2, DatabaseBuilderOptions(source='2nd', idl_syntax=idlparser.FREMONTCUT_SYNTAX))
    self._builder.merge_imported_interfaces([])
    self._db.Save()
    self._assert_content_equals('I.idl', '\n      @1st(module=M) @2nd(module=M) interface I {\n        /* Operations */\n        @1st @2nd [DartName=bar, ImplementationFunction=foo] int member(in int a);\n      };')

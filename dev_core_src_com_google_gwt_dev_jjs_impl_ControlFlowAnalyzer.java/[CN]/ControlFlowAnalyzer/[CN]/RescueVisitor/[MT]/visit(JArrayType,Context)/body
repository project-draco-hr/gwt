{
  assert(referencedTypes.contains(type));
  boolean isInstantiated=instantiatedTypes.contains(type);
  JType leafType=type.getLeafType();
  int dims=type.getDims();
  boolean didSuperType=false;
  if (leafType instanceof JClassType) {
    JClassType superClass=((JClassType)leafType).getSuperClass();
    if (superClass != null) {
      rescue(program.getTypeArray(superClass,dims),true,isInstantiated);
      didSuperType=true;
    }
  }
  if (!didSuperType) {
    if (dims > 1) {
      rescue(program.getTypeArray(program.getTypeJavaLangObject(),dims - 1),true,isInstantiated);
    }
 else {
      rescue(program.getTypeJavaLangObject(),true,isInstantiated);
    }
  }
  if (leafType instanceof JDeclaredType) {
    JDeclaredType dLeafType=(JDeclaredType)leafType;
    for (    JInterfaceType intfType : dLeafType.getImplements()) {
      JArrayType intfArray=program.getTypeArray(intfType,dims);
      rescue(intfArray,true,isInstantiated);
    }
  }
  rescue(program.getIndexedType("Array"),true,isInstantiated);
  return false;
}

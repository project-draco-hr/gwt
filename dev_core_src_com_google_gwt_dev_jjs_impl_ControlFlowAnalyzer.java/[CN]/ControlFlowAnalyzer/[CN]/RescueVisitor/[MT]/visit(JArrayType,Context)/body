{
  assert(referencedTypes.contains(type));
  boolean isInstantiated=instantiatedTypes.contains(type);
  JType leafType=type.getLeafType();
  int dims=type.getDims();
  boolean didSuperType=false;
  if (leafType instanceof JClassType) {
    JClassType superClass=((JClassType)leafType).getSuperClass();
    if (superClass != null) {
      rescue(program.getOrCreateArrayType(superClass,dims),isInstantiated);
      didSuperType=true;
    }
  }
 else   if (leafType instanceof JInterfaceType) {
    rescue(program.getOrCreateArrayType(program.getTypeJavaLangObject(),dims),isInstantiated);
    didSuperType=true;
  }
  if (!didSuperType) {
    if (dims > 1) {
      rescue(program.getOrCreateArrayType(program.getTypeJavaLangObject(),dims - 1),isInstantiated);
    }
 else {
      rescue(program.getTypeJavaLangObject(),isInstantiated);
    }
  }
  if (leafType instanceof JDeclaredType) {
    JDeclaredType dLeafType=(JDeclaredType)leafType;
    for (    JInterfaceType intfType : dLeafType.getImplements()) {
      JArrayType intfArray=program.getOrCreateArrayType(intfType,dims);
      rescue(intfArray,isInstantiated);
    }
  }
  return false;
}

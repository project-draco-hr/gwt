{
  if (method == null) {
    return;
  }
  if (!liveFieldsAndMethods.contains(method)) {
    liveFieldsAndMethods.add(method);
    membersToRescueIfTypeIsInstantiated.remove(method);
    if (dependencyRecorder != null) {
      curMethodStack.add(method);
      dependencyRecorder.methodIsLiveBecause(method,curMethodStack);
    }
    accept(method);
    if (dependencyRecorder != null) {
      curMethodStack.remove(curMethodStack.size() - 1);
    }
    if (method.isNative() || program.typeOracle.isJsTypeMethod(method)) {
      maybeRescueJavaScriptObjectPassingIntoJava(method.getType());
    }
    if (program.typeOracle.isExportedMethod(method) || program.typeOracle.isJsTypeMethod(method)) {
      for (      JParameter param : method.getParams()) {
        rescue(param);
        if (param.getType() == program.getTypeJavaLangString() || program.typeOracle.canBeInstantiatedInJavascript(param.getType())) {
          rescue((JReferenceType)param.getType(),true,true);
        }
      }
    }
    rescueOverridingMethods(method);
    if (method == getClassMethod) {
      rescueClassLiteralsIfGetClassIsLive();
    }
    if (program.isJsTypePrototype(method.getEnclosingType())) {
      for (      JParameter param : method.getParams()) {
        rescue(param);
      }
    }
    if (method.getSpecialization() != null) {
      rescue(method.getSpecialization().getTargetMethod());
    }
  }
}

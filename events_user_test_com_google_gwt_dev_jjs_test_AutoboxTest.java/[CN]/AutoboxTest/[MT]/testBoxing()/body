{
  Boolean boolean_=unboxedBoolean;
  assertTrue(boolean_.booleanValue() == unboxedBoolean);
  Byte byte_=unboxedByte;
  assertTrue(byte_.byteValue() == unboxedByte);
  Character char_=unboxedChar;
  assertTrue(char_.charValue() == unboxedChar);
  Short short_=unboxedShort;
  assertTrue(short_.shortValue() == unboxedShort);
  Integer int_=unboxedInt;
  assertTrue(int_.intValue() == unboxedInt);
  Long long_=unboxedLong;
  assertTrue(long_.longValue() == unboxedLong);
  Float float_=unboxedFloat;
  assertTrue(float_.floatValue() == unboxedFloat);
  Double double_=unboxedDouble;
  assertTrue(double_.doubleValue() == unboxedDouble);
  assertTrue(box(unboxedBoolean).booleanValue() == unboxedBoolean);
  assertTrue(box(unboxedByte).byteValue() == unboxedByte);
  assertTrue(box(unboxedShort).shortValue() == unboxedShort);
  assertTrue(box(unboxedChar).charValue() == unboxedChar);
  assertTrue(box(unboxedInt).intValue() == unboxedInt);
  assertTrue(box(unboxedLong).longValue() == unboxedLong);
  assertTrue(box(unboxedFloat).floatValue() == unboxedFloat);
  assertTrue(box(unboxedDouble).doubleValue() == unboxedDouble);
  assertTrue(unbox(unboxedBoolean) == unboxedBoolean);
  assertTrue(unbox(unboxedByte) == unboxedByte);
  assertTrue(unbox(unboxedShort) == unboxedShort);
  assertTrue(unbox(unboxedChar) == unboxedChar);
  assertTrue(unbox(unboxedInt) == unboxedInt);
  assertTrue(unbox(unboxedLong) == unboxedLong);
  assertTrue(unbox(unboxedFloat) == unboxedFloat);
  assertTrue(unbox(unboxedDouble) == unboxedDouble);
}

{
  int[] monthDayHour=new int[3];
  if (!findClockForwardTime(2009,monthDayHour)) {
    return;
  }
  Date d;
  int month=monthDayHour[0];
  int day=monthDayHour[1];
  int hour=monthDayHour[2];
  d=new Date(2009 - 1900,month,day,hour,0,0);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2008 - 1900,month,day,hour,0,0);
  assertEquals(hour,d.getHours());
  d.setYear(2009 - 1900);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month + 1,day,hour,0,0);
  assertEquals(hour,d.getHours());
  d.setMonth(month);
  assertEquals(3,d.getHours());
  d=new Date(2009 - 1900,month,day + 1,hour,0,0);
  assertEquals(hour,d.getHours());
  d.setDate(day);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  assertEquals(hour + 2,d.getHours());
  d.setHours(hour);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  assertEquals(hour + 2,d.getHours());
  d.setMinutes(-60);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour - 1,0,0);
  assertEquals(hour - 1,d.getHours());
  d.setMinutes(60);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  assertEquals(hour + 2,d.getHours());
  d.setMinutes(-120);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour - 2,0,0);
  assertEquals(hour - 2,d.getHours());
  d.setMinutes(120);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  assertEquals(hour + 2,d.getHours());
  d.setSeconds(-3600);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour - 1,0,0);
  assertEquals(hour - 1,d.getHours());
  d.setSeconds(3600);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  assertEquals(hour + 2,d.getHours());
  d.setSeconds(-7200);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour - 2,0,0);
  assertEquals(hour - 2,d.getHours());
  d.setSeconds(7200);
  assertEquals(hour + 1,d.getHours());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  d.setHours(hour);
  d.setMinutes(30);
  assertEquals(hour + 1,d.getHours());
  assertEquals(30,d.getMinutes());
  d=new Date(2009 - 1900,month,day,hour + 2,0,0);
  d.setMinutes(30);
  d.setHours(hour);
  assertEquals(hour + 1,d.getHours());
  assertEquals(30,d.getMinutes());
}

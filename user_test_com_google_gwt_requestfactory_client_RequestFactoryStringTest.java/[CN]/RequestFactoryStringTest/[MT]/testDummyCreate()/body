{
  delayTestFinish(5000);
  final SimpleFooStringProxy foo=req.create(SimpleFooStringProxy.class);
  Object futureId=foo.getId();
  assertEquals(futureId,foo.getId());
  assertTrue(((ProxyImpl)foo).isFuture());
  Request<SimpleFooStringProxy> fooReq=req.simpleFooStringRequest().persistAndReturnSelf(foo);
  fooReq.fire(new Receiver<SimpleFooStringProxy>(){
    @Override public void onSuccess(    final SimpleFooStringProxy returned){
      Object futureId=foo.getId();
      assertEquals(futureId,foo.getId());
      assertTrue(((ProxyImpl)foo).isFuture());
      checkStableIdEquals(foo,returned);
      finishTestAndReset();
    }
  }
);
}

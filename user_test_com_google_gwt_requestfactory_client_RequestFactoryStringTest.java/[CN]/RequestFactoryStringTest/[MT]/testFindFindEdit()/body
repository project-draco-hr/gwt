{
  delayTestFinish(5000);
  final SimpleFooEventHandler<SimpleFooStringProxy> handler=new SimpleFooEventHandler<SimpleFooStringProxy>();
  EntityProxyChange.registerForProxyType(req.getEventBus(),SimpleFooStringProxy.class,handler);
  req.simpleFooStringRequest().findSimpleFooStringById("999x").fire(new Receiver<SimpleFooStringProxy>(){
    @Override public void onSuccess(    SimpleFooStringProxy newFoo){
      assertEquals(1,handler.updateEventCount);
      assertEquals(1,handler.totalEventCount);
      req.simpleFooStringRequest().findSimpleFooStringById("999x").fire(new Receiver<SimpleFooStringProxy>(){
        @Override public void onSuccess(        SimpleFooStringProxy newFoo){
          assertEquals(1,handler.updateEventCount);
          assertEquals(1,handler.totalEventCount);
          SimpleFooStringRequest context=req.simpleFooStringRequest();
          final Request<Void> mutateRequest=context.persist().using(newFoo);
          newFoo=context.edit(newFoo);
          newFoo.setUserName("Ray");
          mutateRequest.fire(new Receiver<Void>(){
            @Override public void onSuccess(            Void response){
              assertEquals(2,handler.updateEventCount);
              assertEquals(2,handler.totalEventCount);
              finishTestAndReset();
            }
          }
);
        }
      }
);
    }
  }
);
}

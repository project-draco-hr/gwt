{
  int aLen=a.numberLength;
  int bLen=b.numberLength;
  int resLength=aLen + bLen;
  int resSign=(a.sign != b.sign) ? -1 : 1;
  if (resLength == 2) {
    long val=unsignedMultAddAdd(a.digits[0],b.digits[0],0,0);
    int valueLo=(int)val;
    int valueHi=(int)(val >>> 32);
    return ((valueHi == 0) ? new BigInteger(resSign,valueLo) : new BigInteger(resSign,2,new int[]{valueLo,valueHi}));
  }
  int[] aDigits=a.digits;
  int[] bDigits=b.digits;
  int resDigits[]=new int[resLength];
  multArraysPAP(aDigits,aLen,bDigits,bLen,resDigits);
  BigInteger result=new BigInteger(resSign,resLength,resDigits);
  result.cutOffLeadingZeroes();
  return result;
}

{
  Event event=SpeedTracerLogger.start(CompilerEventType.JAVA_NORMALIZERS);
  try {
    Devirtualizer.exec(jprogram);
    CatchBlockNormalizer.exec(jprogram);
    PostOptimizationCompoundAssignmentNormalizer.exec(jprogram);
    LongCastNormalizer.exec(jprogram);
    LongEmulationNormalizer.exec(jprogram);
    TypeCoercionNormalizer.exec(jprogram);
    if (options.shouldCompilePerFile()) {
      ComputeExhaustiveCastabilityInformation.exec(jprogram,options.isCastCheckingDisabled());
    }
 else {
      ComputeCastabilityInformation.exec(jprogram,options.isCastCheckingDisabled(),!shouldOptimize());
    }
    ComputeInstantiatedJsoInterfaces.exec(jprogram);
    ImplementCastsAndTypeChecks.exec(jprogram,options.isCastCheckingDisabled(),shouldOptimize());
    ArrayNormalizer.exec(jprogram,options.isCastCheckingDisabled());
    EqualityNormalizer.exec(jprogram);
    TypeOrder typeIdOrder=options.shouldCompilePerFile() ? TypeOrder.ALPHABETICAL : TypeOrder.FREQUENCY;
    return ResolveRuntimeTypeReferences.IntoIntLiterals.exec(jprogram,typeIdOrder,compilerContext.getMinimalRebuildCache().getIntTypeIdGenerator());
  }
  finally {
    event.end();
  }
}

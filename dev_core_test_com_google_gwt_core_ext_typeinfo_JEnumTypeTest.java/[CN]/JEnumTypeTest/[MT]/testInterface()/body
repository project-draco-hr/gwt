{
  JClassType type=typeOracle.getType(EnumOfInterface.class.getName());
  JEnumType enumType=validateTypeIsEnum(type);
  JClassType[] intf=enumType.getImplementedInterfaces();
  assertEquals(1,intf.length);
  assertEquals(EnumInterface.class.getName(),intf[0].getQualifiedSourceName());
  JMethod getExtra=intf[0].getMethod("getExtra",new JType[0]);
  TestAnnotation annotation=getExtra.getAnnotation(TestAnnotation.class);
  assertNotNull(annotation);
  assertEquals("EnumInterface getExtra",annotation.value());
  JEnumConstant[] constants=enumType.getEnumConstants();
  assertEquals(2,constants.length);
  assertEquals("A",constants[0].getName());
  annotation=constants[0].getAnnotation(TestAnnotation.class);
  assertNotNull(annotation);
  assertEquals("A",annotation.value());
  JClassType aClass=constants[0].getType().isClass();
  JMethod[] methods=aClass.getOverridableMethods();
  assertEquals(7,methods.length);
  boolean found=false;
  for (  JMethod method : methods) {
    if ("name".equals(method.getName())) {
      found=true;
    }
  }
  assertTrue(found);
}

{
  OptimizerStats stats=new OptimizerStats(NAME);
  FindStaticDispatchSitesVisitor finder=new FindStaticDispatchSitesVisitor();
  Set<JMethod> modifiedMethods=optimizerCtx.getModifiedMethodsSince(optimizerCtx.getLastStepFor(NAME));
  Set<JMethod> affectedMethods=affectedMethods(modifiedMethods,optimizerCtx);
  optimizerCtx.traverse(finder,affectedMethods);
  CreateStaticImplsVisitor creator=new CreateStaticImplsVisitor(program,optimizerCtx);
  for (  JMethod method : toBeMadeStatic) {
    creator.accept(method);
  }
  for (  JMethod method : toBeMadeStatic) {
    Specialization specialization=method.getSpecialization();
    if (specialization != null) {
      JMethod staticMethod=program.getStaticImpl(method);
      List<JType> params=Lists.newArrayList(specialization.getParams());
      params.add(0,staticMethod.getParams().get(0).getType());
      staticMethod.setSpecialization(params,specialization.getReturns(),staticMethod.getName());
      staticMethod.getSpecialization().resolve(params,specialization.getReturns(),program.getStaticImpl(specialization.getTargetMethod()));
    }
  }
  RewriteCallSites rewriter=new RewriteCallSites(optimizerCtx);
  rewriter.accept(program);
  stats.recordModified(rewriter.getNumMods());
  assert(rewriter.didChange() || toBeMadeStatic.isEmpty());
  JavaAstVerifier.assertProgramIsConsistent(program);
  return stats;
}

{
  int i, j, n;
  if (annotationDefault != null) {
    AnnotationVisitor av=mv.visitAnnotationDefault();
    AnnotationNode.accept(av,null,annotationDefault);
    if (av != null) {
      av.visitEnd();
    }
  }
  n=visibleAnnotations == null ? 0 : visibleAnnotations.size();
  for (i=0; i < n; ++i) {
    AnnotationNode an=visibleAnnotations.get(i);
    an.accept(mv.visitAnnotation(an.desc,true));
  }
  n=invisibleAnnotations == null ? 0 : invisibleAnnotations.size();
  for (i=0; i < n; ++i) {
    AnnotationNode an=invisibleAnnotations.get(i);
    an.accept(mv.visitAnnotation(an.desc,false));
  }
  n=visibleParameterAnnotations == null ? 0 : visibleParameterAnnotations.length;
  for (i=0; i < n; ++i) {
    List<?> l=visibleParameterAnnotations[i];
    if (l == null) {
      continue;
    }
    for (j=0; j < l.size(); ++j) {
      AnnotationNode an=(AnnotationNode)l.get(j);
      an.accept(mv.visitParameterAnnotation(i,an.desc,true));
    }
  }
  n=invisibleParameterAnnotations == null ? 0 : invisibleParameterAnnotations.length;
  for (i=0; i < n; ++i) {
    List<?> l=invisibleParameterAnnotations[i];
    if (l == null) {
      continue;
    }
    for (j=0; j < l.size(); ++j) {
      AnnotationNode an=(AnnotationNode)l.get(j);
      an.accept(mv.visitParameterAnnotation(i,an.desc,false));
    }
  }
  if (visited) {
    instructions.resetLabels();
  }
  n=attrs == null ? 0 : attrs.size();
  for (i=0; i < n; ++i) {
    mv.visitAttribute(attrs.get(i));
  }
  if (instructions.size() > 0) {
    mv.visitCode();
    n=tryCatchBlocks == null ? 0 : tryCatchBlocks.size();
    for (i=0; i < n; ++i) {
      tryCatchBlocks.get(i).accept(mv);
    }
    instructions.accept(mv);
    n=localVariables == null ? 0 : localVariables.size();
    for (i=0; i < n; ++i) {
      localVariables.get(i).accept(mv);
    }
    mv.visitMaxs(maxStack,maxLocals);
    visited=true;
  }
  mv.visitEnd();
}

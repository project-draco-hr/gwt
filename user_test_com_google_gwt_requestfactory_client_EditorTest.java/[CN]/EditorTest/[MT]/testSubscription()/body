{
  delayTestFinish(TEST_TIMEOUT);
  final SimpleFooEditorWithDelegate editor=new SimpleFooEditorWithDelegate();
  final SimpleFooDriver driver=GWT.create(SimpleFooDriver.class);
  driver.initialize(req,editor);
  assertEquals(Arrays.asList("barField.userName","barField"),Arrays.asList(driver.getPaths()));
  req.simpleFooRequest().findSimpleFooById(0L).with(driver.getPaths()).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy response){
      driver.edit(response,null);
      assertNotNull(editor.delegate.subscribe());
      ProxyRequest<SimpleFooProxy> request=req.simpleFooRequest().persistAndReturnSelf(response);
      SimpleBarProxy newBar=req.create(SimpleBarProxy.class);
      newBar=request.edit(newBar);
      newBar.setUserName("newBar");
      response=request.edit(response);
      response.setBarField(newBar);
      response.setUserName("updated");
      request.fire(new Receiver<SimpleFooProxy>(){
        @Override public void onSuccess(        SimpleFooProxy response){
          Scheduler.get().scheduleFixedDelay(new RepeatingCommand(){
            public boolean execute(){
              if ("updated".equals(editor.userName.getValue())) {
                assertEquals("updated",editor.userName.getValue());
                assertEquals("newBar",editor.barEditor().userName.getValue());
                finishTestAndReset();
                return false;
              }
              return true;
            }
          }
,50);
        }
      }
);
    }
  }
);
}

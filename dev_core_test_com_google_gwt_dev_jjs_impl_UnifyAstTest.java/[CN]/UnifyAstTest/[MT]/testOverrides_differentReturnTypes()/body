{
  addAll(A_A,A_I,A_J,A_B,B_C,B_D,B_E);
  Result result=optimize("void","");
  assertOverrides(result,"a.B.m1()La/A;","a.I.m1()La/A;","a.A.m1()La/A;");
  assertOverrides(result,"a.A.m1()La/A;");
  assertOverrides(result,"b.C.m1()La/A;","a.A.m1()La/A;");
  assertOverrides(result,"b.D.m1()La/A;","a.I.m1()La/A;","a.A.m1()La/A;","a.B.m1()La/A;");
  assertOverrides(result,"b.C.m1()Lb/C;");
  assertOverrides(result,"b.D.m1()Lb/D;");
  assertOverrides(result,"b.E.m1()Lb/C;","b.C.m1()Lb/C;");
  assertOverrides(result,"b.E.m1()Lb/E;");
}

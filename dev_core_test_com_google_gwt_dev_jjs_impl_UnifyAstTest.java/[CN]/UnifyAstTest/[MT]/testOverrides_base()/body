{
  addAll(A_A,A_I,A_J,A_B,B_C,B_D,B_E);
  Result result=optimize("void","");
  assertOverrides(result,"a.B.m()V","a.I.m()V","a.A.m()V");
  assertOverrides(result,"a.B.m1()La/A;","a.I.m1()La/A;","a.A.m1()La/A;");
  assertOverrides(result,"a.B.pp()V","a.I.pp()V","a.A.pp()V");
  assertOverrides(result,"b.C.m1()La/A;","a.A.m1()La/A;");
  assertEquals("a.A.m()V",findMethod(result,"b.C.m()V").toString());
  assertEquals("a.B.m()V",findMethod(result,"b.D.m()V").toString());
}

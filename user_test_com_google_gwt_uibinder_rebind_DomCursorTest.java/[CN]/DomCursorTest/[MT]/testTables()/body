{
  verifyInitAssignment(writer,intermediate(1),"UiBinderUtil.getNonTextChild","parent",0);
  verifyInitAssignment(writer,"UiBinderUtil.getTableChild(intermediate1, 0).cast()",2);
  verifyInitAssignment(writer,"UiBinderUtil.getNonTextChild(intermediate2, 0).cast()",3);
  verifyInitAssignment(writer,intermediate(4),"UiBinderUtil.getNonTextChild","parent",1);
  verifyInitAssignment(writer,"UiBinderUtil.getNonTextChild(intermediate4, 0).cast()",5);
  verifyInitAssignment(writer,"UiBinderUtil.getNonTextChild(intermediate5, 0).cast()",6);
  org.easymock.classextension.EasyMock.replay(writer);
  XMLElement div=makeElement("div");
  cursor.visitChild(div);
  XMLElement table1=makeElement("table");
  cursor.visitChild(table1);
  assertEquals(intermediate(2),cursor.getAccessExpression());
  XMLElement tr=makeElement("tr");
  cursor.visitChild(tr);
  assertEquals(intermediate(3),cursor.getAccessExpression());
  cursor.finishChild(tr);
  cursor.finishChild(table1);
  cursor.advanceChild();
  XMLElement table2=makeElement("table");
  cursor.visitChild(table2);
  XMLElement tbody=makeElement("tbody");
  cursor.visitChild(tbody);
  cursor.finishChild(tbody);
  assertEquals(intermediate(5),cursor.getAccessExpression());
  XMLElement tr2=makeElement("tr");
  cursor.visitChild(tr2);
  assertEquals(intermediate(6),cursor.getAccessExpression());
  cursor.finishChild(tr2);
  XMLElement td=makeElement("td");
  try {
    cursor.visitChild(td);
    fail("Expected exception about tds inside tables without trs");
  }
 catch (  Exception e) {
  }
  org.easymock.classextension.EasyMock.verify(writer);
}

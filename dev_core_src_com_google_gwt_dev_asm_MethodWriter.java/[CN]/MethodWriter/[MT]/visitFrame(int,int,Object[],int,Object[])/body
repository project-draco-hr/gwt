{
  if (!ClassReader.FRAMES || compute == FRAMES) {
    return;
  }
  if (type == Opcodes.F_NEW) {
    if (previousFrame == null) {
      visitImplicitFirstFrame();
    }
    currentLocals=nLocal;
    int frameIndex=startFrame(code.length,nLocal,nStack);
    for (int i=0; i < nLocal; ++i) {
      if (local[i] instanceof String) {
        frame[frameIndex++]=Frame.OBJECT | cw.addType((String)local[i]);
      }
 else       if (local[i] instanceof Integer) {
        frame[frameIndex++]=((Integer)local[i]).intValue();
      }
 else {
        frame[frameIndex++]=Frame.UNINITIALIZED | cw.addUninitializedType("",((Label)local[i]).position);
      }
    }
    for (int i=0; i < nStack; ++i) {
      if (stack[i] instanceof String) {
        frame[frameIndex++]=Frame.OBJECT | cw.addType((String)stack[i]);
      }
 else       if (stack[i] instanceof Integer) {
        frame[frameIndex++]=((Integer)stack[i]).intValue();
      }
 else {
        frame[frameIndex++]=Frame.UNINITIALIZED | cw.addUninitializedType("",((Label)stack[i]).position);
      }
    }
    endFrame();
  }
 else {
    int delta;
    if (stackMap == null) {
      stackMap=new ByteVector();
      delta=code.length;
    }
 else {
      delta=code.length - previousFrameOffset - 1;
      if (delta < 0) {
        if (type == Opcodes.F_SAME) {
          return;
        }
 else {
          throw new IllegalStateException();
        }
      }
    }
switch (type) {
case Opcodes.F_FULL:
      currentLocals=nLocal;
    stackMap.putByte(FULL_FRAME).putShort(delta).putShort(nLocal);
  for (int i=0; i < nLocal; ++i) {
    writeFrameType(local[i]);
  }
stackMap.putShort(nStack);
for (int i=0; i < nStack; ++i) {
writeFrameType(stack[i]);
}
break;
case Opcodes.F_APPEND:
currentLocals+=nLocal;
stackMap.putByte(SAME_FRAME_EXTENDED + nLocal).putShort(delta);
for (int i=0; i < nLocal; ++i) {
writeFrameType(local[i]);
}
break;
case Opcodes.F_CHOP:
currentLocals-=nLocal;
stackMap.putByte(SAME_FRAME_EXTENDED - nLocal).putShort(delta);
break;
case Opcodes.F_SAME:
if (delta < 64) {
stackMap.putByte(delta);
}
 else {
stackMap.putByte(SAME_FRAME_EXTENDED).putShort(delta);
}
break;
case Opcodes.F_SAME1:
if (delta < 64) {
stackMap.putByte(SAME_LOCALS_1_STACK_ITEM_FRAME + delta);
}
 else {
stackMap.putByte(SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED).putShort(delta);
}
writeFrameType(stack[0]);
break;
}
previousFrameOffset=code.length;
++frameCount;
}
maxStack=Math.max(maxStack,nStack);
maxLocals=Math.max(maxLocals,currentLocals);
}

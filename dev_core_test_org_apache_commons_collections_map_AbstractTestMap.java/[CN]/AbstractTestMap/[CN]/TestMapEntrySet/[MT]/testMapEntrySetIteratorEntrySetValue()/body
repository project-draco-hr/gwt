{
  Object key1=getSampleKeys()[0];
  Object key2=(getSampleKeys().length == 1 ? getSampleKeys()[0] : getSampleKeys()[1]);
  Object newValue1=getNewSampleValues()[0];
  Object newValue2=(getNewSampleValues().length == 1 ? getNewSampleValues()[0] : getNewSampleValues()[1]);
  resetFull();
  Iterator it=TestMapEntrySet.this.collection.iterator();
  Map.Entry entry1=getEntry(it,key1);
  it=TestMapEntrySet.this.collection.iterator();
  Map.Entry entry2=getEntry(it,key2);
  Iterator itConfirmed=TestMapEntrySet.this.confirmed.iterator();
  Map.Entry entryConfirmed1=getEntry(itConfirmed,key1);
  itConfirmed=TestMapEntrySet.this.confirmed.iterator();
  Map.Entry entryConfirmed2=getEntry(itConfirmed,key2);
  verify();
  if (isSetValueSupported() == false) {
    try {
      entry1.setValue(newValue1);
    }
 catch (    UnsupportedOperationException ex) {
    }
    return;
  }
  entry1.setValue(newValue1);
  entryConfirmed1.setValue(newValue1);
  assertEquals(newValue1,entry1.getValue());
  assertEquals(true,AbstractTestMap.this.map.containsKey(entry1.getKey()));
  assertEquals(true,AbstractTestMap.this.map.containsValue(newValue1));
  assertEquals(newValue1,AbstractTestMap.this.map.get(entry1.getKey()));
  verify();
  entry1.setValue(newValue1);
  entryConfirmed1.setValue(newValue1);
  assertEquals(newValue1,entry1.getValue());
  assertEquals(true,AbstractTestMap.this.map.containsKey(entry1.getKey()));
  assertEquals(true,AbstractTestMap.this.map.containsValue(newValue1));
  assertEquals(newValue1,AbstractTestMap.this.map.get(entry1.getKey()));
  verify();
  entry2.setValue(newValue2);
  entryConfirmed2.setValue(newValue2);
  assertEquals(newValue2,entry2.getValue());
  assertEquals(true,AbstractTestMap.this.map.containsKey(entry2.getKey()));
  assertEquals(true,AbstractTestMap.this.map.containsValue(newValue2));
  assertEquals(newValue2,AbstractTestMap.this.map.get(entry2.getKey()));
  verify();
}

{
  try {
    Method m=loader.getClass().getMethod("getClasspath",new Class[]{});
    if (log.isTraceEnabled())     log.trace("getClasspath " + m);
    if (m == null)     return null;
    Object o=m.invoke(loader,new Object[]{});
    if (log.isDebugEnabled())     log.debug("gotClasspath " + o);
    if (o instanceof String)     return (String)o;
    return null;
  }
 catch (  Exception ex) {
    if (log.isDebugEnabled())     log.debug("getClasspath ",ex);
  }
  return null;
}

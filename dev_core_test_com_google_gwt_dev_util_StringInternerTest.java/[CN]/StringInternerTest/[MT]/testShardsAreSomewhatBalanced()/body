{
  int meanShardSize=1000;
  int shardSizes[]=new int[StringInterner.SHARD_COUNT];
  int stringsToAdd=StringInterner.SHARD_COUNT * meanShardSize;
  for (int i=0; i < stringsToAdd; i++) {
    int shardId=interner.getShardId("foo" + i);
    shardSizes[shardId]++;
  }
  int expectedMaxShardSize=meanShardSize * 2;
  int maxShardSize=0;
  int tooBigShardCount=0;
  for (  int shardSize : shardSizes) {
    maxShardSize=Math.max(maxShardSize,shardSize);
    if (shardSize > expectedMaxShardSize) {
      tooBigShardCount++;
    }
  }
  if (tooBigShardCount > 0) {
    fail(tooBigShardCount + " of " + shardSizes.length+ " shards are too big (more than "+ expectedMaxShardSize+ " entries); largest shard has "+ maxShardSize+ " entries.");
  }
}

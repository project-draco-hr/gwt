{
  final StandardGeneratorContext genCtx=new StandardGeneratorContext(compilationState,module,null,new ArtifactSet(),true);
  RebindPermutationOracle rpo=new RebindPermutationOracle(){
    public void clear(){
    }
    public String[] getAllPossibleRebindAnswers(    TreeLogger logger,    String sourceTypeName) throws UnableToCompleteException {
      return new String[0];
    }
    public CompilationState getCompilationState(){
      return compilationState;
    }
    public StandardGeneratorContext getGeneratorContext(){
      return genCtx;
    }
  }
;
  List<String> allRootTypes=new ArrayList<String>();
  for (  CompilationUnit unit : compilationState.getCompilationUnits()) {
    allRootTypes.add(unit.getTypeName());
  }
  CompilationUnitDeclaration[] goldenCuds=WebModeCompilerFrontEnd.getCompilationUnitDeclarations(logger,allRootTypes.toArray(new String[allRootTypes.size()]),rpo,TypeLinker.NULL_TYPE_LINKER).compiledUnits;
  CorrelationFactory correlator=DummyCorrelationFactory.INSTANCE;
  JsProgram jsProgram=new JsProgram(correlator);
  JProgram jprogram=new JProgram(correlator);
  TypeMap typeMap=new TypeMap(jprogram);
  TypeDeclaration[] allTypeDeclarations=BuildTypeMap.exec(typeMap,goldenCuds,jsProgram);
  checkForErrors(logger,goldenCuds);
  jprogram.typeOracle.computeBeforeAST();
  GenerateJavaAST.exec(allTypeDeclarations,typeMap,jprogram,new JJSOptionsImpl());
  checkForErrors(logger,goldenCuds);
  return jprogram;
}

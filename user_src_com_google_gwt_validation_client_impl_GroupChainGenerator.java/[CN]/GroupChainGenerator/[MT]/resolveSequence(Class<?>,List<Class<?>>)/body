{
  if (processedSequences.contains(group)) {
    throw new GroupDefinitionException("Cyclic dependency in groups definition");
  }
 else {
    processedSequences.add(group);
  }
  List<Group> resolvedGroupSequence=new ArrayList<Group>();
  List<Class<?>> sequenceList=validationGroupsMetadata.getSequenceList(group);
  for (  Class<?> clazz : sequenceList) {
    if (isGroupSequence(clazz)) {
      List<Group> tmpSequence=resolveSequence(clazz,processedSequences);
      addGroups(resolvedGroupSequence,tmpSequence);
    }
 else {
      List<Group> list=new ArrayList<Group>();
      list.add(new Group(clazz,group));
      addGroups(resolvedGroupSequence,list);
    }
  }
  resolvedSequences.put(group,resolvedGroupSequence);
  return resolvedGroupSequence;
}

{
  ConcreteJsType concreteJsType=new ConcreteJsType();
  ConcreteJsTypeSubclass concreteJsTypeSubclass=new ConcreteJsTypeSubclass();
  assertFalse(hasField(concreteJsTypeSubclass,"publicSubclassMethod"));
  assertFalse(hasField(concreteJsTypeSubclass,"publicSubclassField"));
  assertFalse(hasField(concreteJsTypeSubclass,"publicStaticSubclassMethod"));
  assertFalse(hasField(concreteJsTypeSubclass,"privateSubclassMethod"));
  assertFalse(hasField(concreteJsTypeSubclass,"protectedSubclassMethod"));
  assertFalse(hasField(concreteJsTypeSubclass,"packageSubclassMethod"));
  assertFalse(hasField(concreteJsTypeSubclass,"publicStaticSubclassField"));
  assertFalse(hasField(concreteJsTypeSubclass,"privateSubclassField"));
  assertFalse(hasField(concreteJsTypeSubclass,"protectedSubclassField"));
  assertFalse(hasField(concreteJsTypeSubclass,"packageSubclassField"));
  assertTrue(hasField(concreteJsType,"publicMethod"));
  assertTrue(hasField(concreteJsTypeSubclass,"publicMethod"));
  assertFalse(areSameFunction(concreteJsType,"publicMethod",concreteJsTypeSubclass,"publicMethod"));
  assertFalse(callIntFunction(concreteJsType,"publicMethod") == callIntFunction(concreteJsTypeSubclass,"publicMethod"));
}

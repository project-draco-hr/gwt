{
  PlainParentType plainParentType=new PlainParentType();
  RevealedOverrideSubType revealedOverrideSubType=new RevealedOverrideSubType();
  assertFalse(hasField(plainParentType,"run"));
  assertTrue(hasField(revealedOverrideSubType,"run"));
  ConcreteJsTypeJsSubclass subclass=new ConcreteJsTypeJsSubclass();
  assertEquals(100,subclass.publicMethodAlsoExposedAsNonJsMethod());
  SubclassInterface subclassInterface=alwaysTrue() ? subclass : new SubclassInterface(){
    @Override public int publicMethodAlsoExposedAsNonJsMethod(){
      return 0;
    }
  }
;
  assertEquals(100,subclassInterface.publicMethodAlsoExposedAsNonJsMethod());
}

{
  if (DEBUG_VERSION_CHECK) {
    System.out.println("Parsing response (length " + response.length + ")");
  }
  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
  DocumentBuilder builder=factory.newDocumentBuilder();
  ByteArrayInputStream bais=new ByteArrayInputStream(response);
  builder.setErrorHandler(new ErrorHandler(){
    public void error(    SAXParseException exception) throws SAXException {
    }
    public void fatalError(    SAXParseException exception) throws SAXException {
    }
    public void warning(    SAXParseException exception) throws SAXException {
    }
  }
);
  Document doc=builder.parse(bais);
  String version=getTextOfLastElementHavingTag(doc,"latest-version");
  if (version == null) {
    if (DEBUG_VERSION_CHECK) {
      System.out.println("Failed to find <latest-version>");
    }
    return;
  }
 else {
    version=version.trim();
  }
  String[] versionParts=version.split("\\.");
  if (versionParts.length != 3) {
    if (DEBUG_VERSION_CHECK) {
      System.out.println("Bad version format: " + version);
    }
    return;
  }
  try {
    Integer.parseInt(versionParts[0]);
    Integer.parseInt(versionParts[1]);
    Integer.parseInt(versionParts[2]);
  }
 catch (  NumberFormatException e) {
    if (DEBUG_VERSION_CHECK) {
      System.out.println("Bad version number: " + version);
    }
    return;
  }
  String pingDelaySecsStr=getTextOfLastElementHavingTag(doc,"min-wait-seconds");
  int pingDelaySecs=0;
  if (pingDelaySecsStr == null) {
    if (DEBUG_VERSION_CHECK) {
      System.out.println("Missing <min-wait-seconds>");
    }
    return;
  }
 else {
    try {
      pingDelaySecs=Integer.parseInt(pingDelaySecsStr.trim());
    }
 catch (    NumberFormatException e) {
      if (DEBUG_VERSION_CHECK) {
        System.out.println("Bad min-wait-seconds number: " + pingDelaySecsStr);
      }
      return;
    }
  }
  String html=getTextOfLastElementHavingTag(doc,"notification");
  if (html == null) {
    if (DEBUG_VERSION_CHECK) {
      System.out.println("Missing <notification>");
    }
    return;
  }
  processResponse(prefs,version,pingDelaySecs,html,callback);
}

def GenerateDOM(systems, generate_html_systems, output_dir, database_dir, use_database_cache):
    current_dir = os.path.dirname(__file__)
    generator = elementalgenerator.ElementalGenerator(auxiliary_dir=os.path.join(current_dir, '..', 'src'), template_dir=os.path.join(current_dir, '..', 'templates'), base_package='')
    generator.LoadAuxiliary()
    common_database = database.Database(database_dir)
    if use_database_cache:
        common_database.LoadFromCache()
    else:
        common_database.Load()
    generator.FilterMembersWithUnidentifiedTypes(common_database)
    webkit_database = common_database.Clone()
    generator.FilterInterfaces(database=webkit_database, or_annotations=['WebKit', 'Dart'], exclude_displaced=['WebKit'], exclude_suppressed=['WebKit', 'Dart'])
    generator.RenameTypes(webkit_database, _webkit_renames, True)
    html_renames = _MakeHtmlRenames(common_database)
    generator.RenameTypes(webkit_database, html_renames, True)
    html_renames_inverse = dict(((v, k) for (k, v) in html_renames.iteritems()))
    webkit_renames_inverse = dict(((v, k) for (k, v) in _webkit_renames.iteritems()))
    generator.Generate(database=webkit_database, output_dir=output_dir, lib_dir=output_dir, module_source_preference=['WebKit', 'Dart'], source_filter=['WebKit', 'Dart'], super_database=common_database, common_prefix='common', super_map=webkit_renames_inverse, html_map=html_renames_inverse, systems=systems)
    generator.Flush()

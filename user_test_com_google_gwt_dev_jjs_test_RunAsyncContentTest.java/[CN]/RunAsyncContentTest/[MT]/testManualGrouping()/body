{
  delayTestFinish(RUNASYNC_TIMEOUT);
  GWT.runAsync(RunAsyncContentTest.class,new RunAsyncCallback(){
    @Override public void onFailure(    Throwable caught){
      reportUncaughtException(caught);
    }
    @Override public void onSuccess(){
      String sharedContent="Same String in multiple asyncs but ends not in the leftovers.";
      assertFalse(LoggingXhrLoadingStrategy.getLeftOverFragmentText().contains(sharedContent));
      finishTest();
    }
  }
);
  GWT.runAsync(RunAsyncContentTest.class,new RunAsyncCallback(){
    @Override public void onFailure(    Throwable caught){
      reportUncaughtException(caught);
    }
    @Override public void onSuccess(){
      String sharedContent="Same String in multiple asyncs but ends not in the leftovers.";
      assertFalse(LoggingXhrLoadingStrategy.getLeftOverFragmentText().contains(sharedContent));
      finishTest();
    }
  }
);
}

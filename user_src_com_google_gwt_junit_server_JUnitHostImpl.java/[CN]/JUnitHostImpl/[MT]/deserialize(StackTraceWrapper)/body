{
  StackTraceElement ste=null;
  Object[] args=new Object[]{stw.className,stw.methodName,stw.fileName,stw.lineNumber};
  try {
    try {
      Constructor<StackTraceElement> ctor=StackTraceElement.class.getDeclaredConstructor(String.class,String.class,String.class,int.class);
      ctor.setAccessible(true);
      ste=ctor.newInstance(args);
    }
 catch (    NoSuchMethodException e) {
      Constructor<StackTraceElement> ctor=StackTraceElement.class.getDeclaredConstructor();
      ctor.setAccessible(true);
      ste=ctor.newInstance();
      setField(StackTraceElement.class,"declaringClass",ste,args[0]);
      setField(StackTraceElement.class,"methodName",ste,args[1]);
      setField(StackTraceElement.class,"fileName",ste,args[2]);
      setField(StackTraceElement.class,"lineNumber",ste,args[3]);
    }
  }
 catch (  Throwable e) {
    this.log("Error creating stack trace",e);
  }
  return ste;
}

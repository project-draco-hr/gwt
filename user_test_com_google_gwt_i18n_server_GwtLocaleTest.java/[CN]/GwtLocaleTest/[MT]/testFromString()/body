{
  GwtLocale ha=factory.fromString("ha_Arab_NG");
  assertEquals("ha",ha.getLanguage());
  assertEquals("Arab",ha.getScript());
  assertEquals("NG",ha.getRegion());
  assertNull(ha.getVariant());
  GwtLocale us1=factory.fromString("en-us");
  GwtLocale us2=factory.fromString("en_US");
  assertSame(us1,us2);
  GwtLocale us3=factory.fromString("EN_uS");
  assertSame(us1,us3);
  assertEquals("en",us3.getLanguageNotNull());
  assertNull(us3.getScript());
  assertEquals("US",us3.getRegionNotNull());
  assertNull(us3.getVariant());
  GwtLocale en=factory.fromString("en-VARIANT");
  assertEquals("en",en.getLanguage());
  assertNull(en.getScript());
  assertNull(en.getRegion());
  assertEquals("VARIANT",en.getVariantNotNull());
  en=factory.fromString("en_variant");
  assertEquals("en",en.getLanguage());
  assertNull(en.getScript());
  assertNull(en.getRegion());
  assertEquals("VARIANT",en.getVariant());
  GwtLocale zh=factory.fromString("zh-min-nan-Hant-CN");
  assertEquals("zh-min-nan",zh.getLanguage());
  assertEquals("Hant",zh.getScriptNotNull());
  assertEquals("CN",zh.getRegion());
  assertNull(zh.getVariant());
  assertFalse(ha.usesSameScript(zh));
  zh=factory.fromString("zh_min_nan_Hant_CN");
  assertEquals("zh-min-nan",zh.getLanguage());
  GwtLocale variant4=factory.fromString("en-1234");
  assertNull(variant4.getScript());
  assertEquals("1234",variant4.getVariant());
  GwtLocale extLang=factory.fromString("en-ext");
  assertEquals("en-ext",extLang.getLanguage());
  try {
    factory.fromString("english_USA");
    fail("Should have thrown IllegalArgumentException on english_USA");
  }
 catch (  IllegalArgumentException expected) {
  }
}

{
  if ((this.tagBits & TagBits.AreMethodsSorted) == 0) {
    int length=this.methods.length;
    if (length > 1)     ReferenceBinding.sortMethods(this.methods,0,length);
    this.tagBits|=TagBits.AreMethodsSorted;
  }
  int argCount=argumentTypes.length;
  boolean foundNothing=true;
  long range;
  if ((range=ReferenceBinding.binarySearch(selector,this.methods)) >= 0) {
    nextMethod:     for (int imethod=(int)range, end=(int)(range >> 32); imethod <= end; imethod++) {
      MethodBinding method=methods[imethod];
      foundNothing=false;
      if (method.parameters.length == argCount) {
        resolveTypesFor(method);
        TypeBinding[] toMatch=method.parameters;
        for (int iarg=0; iarg < argCount; iarg++)         if (toMatch[iarg] != argumentTypes[iarg])         continue nextMethod;
        return method;
      }
    }
  }
  if (foundNothing) {
    if (isInterface()) {
      if (superInterfaces().length == 1) {
        if (refScope != null)         refScope.recordTypeReference(superInterfaces[0]);
        return superInterfaces[0].getExactMethod(selector,argumentTypes,refScope);
      }
    }
 else     if (superclass() != null) {
      if (refScope != null)       refScope.recordTypeReference(superclass);
      return superclass.getExactMethod(selector,argumentTypes,refScope);
    }
  }
  return null;
}

{
  if (numberFactory.maxDecimalPoints() == 0) {
    assertEquals((long)positive(),numberFactory.decode(positiveString()));
    assertEquals((long)positive(),numberFactory.decode(octalString()));
    assertEquals((long)positive(),numberFactory.decode(lowerHexString()));
    assertEquals((long)negative(),numberFactory.decode(upperNegativeHexString()));
    assertEquals((long)positive(),numberFactory.decode(sharpString()));
    try {
      numberFactory.decode(wrongOctalString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
    try {
      numberFactory.decode(wrongUpperHexString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
    try {
      numberFactory.decode(wrongLowerHexString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
    try {
      numberFactory.decode(wrongSharpString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
    try {
      numberFactory.decode(totallyWrongString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
    try {
      numberFactory.decode(wrongString());
      fail();
    }
 catch (    NumberFormatException e) {
    }
  }
}

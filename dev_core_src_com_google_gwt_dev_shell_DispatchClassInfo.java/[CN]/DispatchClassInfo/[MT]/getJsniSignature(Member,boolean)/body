{
  String name;
  Class<?>[] paramTypes;
  if (member instanceof Field) {
    return member.getName();
  }
 else   if (member instanceof SyntheticClassMember) {
    return member.getName();
  }
 else   if (member instanceof Method) {
    name=member.getName();
    paramTypes=((Method)member).getParameterTypes();
  }
 else   if (member instanceof Constructor<?>) {
    name="new";
    paramTypes=((Constructor<?>)member).getParameterTypes();
  }
 else {
    throw new RuntimeException("Unexpected member type " + member.getClass().getName());
  }
  StringBuffer sb=new StringBuffer();
  sb.append(name);
  sb.append("(");
  if (wildcardParamList) {
    sb.append(JsniRef.WILDCARD_PARAM_LIST);
  }
 else {
    for (int i=0; i < paramTypes.length; ++i) {
      Class<?> type=paramTypes[i];
      String typeSig=getTypeSig(type);
      sb.append(typeSig);
    }
  }
  sb.append(")");
  String mangledName=StringInterner.get().intern(sb.toString());
  return mangledName;
}

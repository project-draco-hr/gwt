{
  boolean isReferenced=referencedTypes.contains(type);
  boolean isInstantiated=program.typeOracle.isInstantiatedType(type);
  for (Iterator<JField> it=type.fields.iterator(); it.hasNext(); ) {
    JField field=it.next();
    if (!isReferenced || !referencedNonTypes.contains(field)) {
      it.remove();
      didChange=true;
    }
  }
  Iterator<JMethod> it=type.methods.iterator();
  if (it.hasNext()) {
    it.next();
  }
  while (it.hasNext()) {
    JMethod method=it.next();
    if (!isInstantiated || !methodIsReferenced(method)) {
      it.remove();
      didChange=true;
    }
  }
  return false;
}

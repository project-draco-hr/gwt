{
  JModTypeVisitor replacer=new JModTypeVisitor(){
    @Override public void endVisit(    JWildcardType wildcardType){
      com.google.gwt.dev.javac.typemodel.JTypeParameter newParam=new com.google.gwt.dev.javac.typemodel.JTypeParameter("TP$" + freshTypeVariableCounter++,-1);
      newParam.setBounds(new com.google.gwt.dev.javac.typemodel.JClassType[]{(com.google.gwt.dev.javac.typemodel.JClassType)typeOracle.getJavaLangObject()});
      constraints.put(newParam,wildcardType.getUpperBound());
      replacement=newParam;
    }
  }
;
  return replacer.transform(type);
}

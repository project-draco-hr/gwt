{
  int exp=(int)((value & EXPONENT_MASK) >> MANTISSA_BITSIZE);
  int denorm=(exp == 0 ? 1 : 0);
  exp=exp - EXPONENT_BIAS + denorm;
  long mantissa=(value & MANTISSA_MASK);
  int sign=(value & SIGN_BIT) != 0 ? -1 : 1;
  if (exp == EXPONENT_BIAS + 1) {
    if (mantissa != 0) {
      return Double.NaN;
    }
 else {
      return sign < 0 ? Double.NEGATIVE_INFINITY : Double.POSITIVE_INFINITY;
    }
  }
  return sign * ((mantissa / MAX_MANTISSA_VALUE + (1 - denorm)) * Math.pow(2,exp));
}

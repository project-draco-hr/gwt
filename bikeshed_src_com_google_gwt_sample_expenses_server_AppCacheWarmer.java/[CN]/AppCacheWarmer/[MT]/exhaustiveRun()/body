{
  readStaticResources(BASE_URL);
  String departments[]=new String[]{"Engineering","Finance","Marketing","Operations","Sales"};
  List<RequestObject> queuedRequestObjects=new ArrayList<RequestObject>();
  queuedRequestObjects.add(new CountReportsBySearch(-1,"",""));
  for (  String department : departments) {
    for (    int lastIndex : new int[]{25,50,75}) {
      RequestObject employeeEntries=new FindEmployeeEntriesByDepartment(department,0,lastIndex);
      JSONArray employees=new JSONArray(employeeEntries.getResponseString(POST_URL));
      for (int i=0; i < employees.length(); i++) {
        JSONObject employee=(JSONObject)employees.get(i);
        RequestObject reportsForAnEmployee=new FindReportEntriesBySearch(Long.parseLong(employee.getString("id")),"","","created DESC",0,20);
        JSONArray expenses=new JSONArray(reportsForAnEmployee.getResponseString(POST_URL));
        if (GET_REPORTS_FOR_SORTED_LISTS) {
          for (int j=0; j < expenses.length(); j++) {
            JSONObject expense=(JSONObject)expenses.get(j);
            RequestObject expensesForReport=new FindExpensesByReport(expense.getString("id"));
            expensesForReport.getResponseString(POST_URL);
          }
        }
      }
    }
    queuedRequestObjects.add(new CountEmployeesByDepartment(department));
    queuedRequestObjects.add(new CountReportsBySearch(-1,department,""));
  }
  String searchText="";
  for (  String field : new String[]{"purpose","notes","department","created"}) {
    for (    String sortOrder : new String[]{"asc","desc"}) {
      for (      int startIndex : new int[]{0,20}) {
        RequestObject reportsBySearch=new FindReportEntriesBySearch(-1L,"",searchText,field + " " + sortOrder.toUpperCase(),startIndex,20);
        JSONArray expenses=new JSONArray(reportsBySearch.getResponseString(POST_URL));
        if (GET_REPORTS_FOR_SORTED_LISTS) {
          for (int j=0; j < expenses.length(); j++) {
            JSONObject expense=(JSONObject)expenses.get(j);
            RequestObject expensesForReport=new FindExpensesByReport(expense.getString("id"));
            expensesForReport.getResponseString(POST_URL);
          }
        }
      }
    }
  }
  for (  RequestObject requestObject : queuedRequestObjects) {
    requestObject.getResponseString(POST_URL);
  }
}

{
  delayTestFinish(TEST_DELAY);
  Context ctx=factory.ctx();
  checkA(ctx,AProxy.class);
  checkB(ctx,B1Proxy.class);
  checkB(ctx,B2Proxy.class);
  checkC(ctx,C1Proxy.class);
  checkC(ctx,C2Proxy.class);
  checkD(ctx,D1Proxy.class);
  checkD(ctx,D2Proxy.class);
  checkD(ctx,D3Proxy.class);
  checkD(ctx,MoreDerivedProxy.class);
  checkW(ctx,WProxy.class);
  checkW(ctx,WZProxy.class);
  checkZ(ctx,ZProxy.class);
  checkZ(ctx,ZWProxy.class);
  ctx.fire(new Receiver<Void>(){
    @Override public void onSuccess(    Void response){
      finishTest();
    }
  }
);
}

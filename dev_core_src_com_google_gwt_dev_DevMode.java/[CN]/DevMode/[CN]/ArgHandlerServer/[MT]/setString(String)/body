{
  options.setNoServer(false);
  String sclClassName;
  String sclArgs;
  int idx=arg.indexOf(':');
  if (idx >= 0) {
    sclArgs=arg.substring(idx + 1);
    sclClassName=arg.substring(0,idx);
  }
 else {
    sclArgs=null;
    sclClassName=arg;
  }
  if (sclClassName.length() == 0) {
    sclClassName=DEFAULT_SCL;
  }
  Throwable t;
  try {
    Class<?> clazz=Class.forName(sclClassName,true,Thread.currentThread().getContextClassLoader());
    Class<? extends ServletContainerLauncher> sclClass=clazz.asSubclass(ServletContainerLauncher.class);
    options.setServletContainerLauncher(sclClass.newInstance());
    options.setServletContainerLauncherArgs(sclArgs);
    return true;
  }
 catch (  ClassCastException e) {
    t=e;
  }
catch (  ClassNotFoundException e) {
    t=e;
  }
catch (  InstantiationException e) {
    t=e;
  }
catch (  IllegalAccessException e) {
    t=e;
  }
  System.err.println("Unable to load server class '" + sclClassName + "'");
  t.printStackTrace();
  return false;
}

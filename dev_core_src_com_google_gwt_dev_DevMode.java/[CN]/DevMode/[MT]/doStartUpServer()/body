{
  boolean clearCallback=true;
  try {
    ui.setCallback(RestartServerEvent.getType(),this);
    ServletContainerLauncher scl=options.getServletContainerLauncher();
    TreeLogger serverLogger=ui.getWebServerLogger(getWebServerName(),scl.getIconBytes());
    String sclArgs=options.getServletContainerLauncherArgs();
    if (sclArgs != null) {
      if (!scl.processArguments(serverLogger,sclArgs)) {
        return -1;
      }
    }
    if (scl instanceof JettyLauncher) {
      JettyLauncher jetty=(JettyLauncher)scl;
      jetty.setBaseRequestLogLevel(getBaseLogLevelForUI());
    }
    scl.setBindAddress(bindAddress);
    serverLogger.log(TreeLogger.TRACE,"Starting HTTP on port " + getPort(),null);
    server=scl.start(serverLogger,getPort(),options.getWarDir());
    assert(server != null);
    clearCallback=false;
    return server.getPort();
  }
 catch (  BindException e) {
    System.err.println("Port " + bindAddress + ':'+ getPort()+ " is already is use; you probably still have another session active");
  }
catch (  Exception e) {
    System.err.println("Unable to start embedded HTTP server");
    e.printStackTrace();
  }
 finally {
    if (clearCallback) {
      ui.setCallback(RestartServerEvent.getType(),null);
    }
  }
  return -1;
}

{
  Supplier<A> supplier=collector.supplier();
  BiConsumer<A,T> accumulator=collector.accumulator();
  BinaryOperator<A> combiner=collector.combiner();
  Function<A,R> finisher=collector.finisher();
  A a1=supplier.get();
  accumulator.accept(a1,item);
  R actual=finisher.apply(a1);
  assertTrue(equals,expected,actual);
  actual=finisher.apply(combiner.apply(a1,supplier.get()));
  assertTrue(equals,expected,actual);
  actual=finisher.apply(combiner.apply(supplier.get(),a1));
  assertTrue(equals,expected,actual);
}

{
  SourceTypeBinding binding=type.binding;
  checkJsFunction(type,binding);
  if (!JdtUtil.isJsoSubclass(binding)) {
    return ClassState.NORMAL;
  }
  if (type.enclosingType != null && !binding.isStatic()) {
    errorOn(type,ERR_IS_NONSTATIC_NESTED);
  }
  ReferenceBinding[] interfaces=binding.superInterfaces();
  if (interfaces != null) {
    for (    ReferenceBinding interf : interfaces) {
      if (interf.methods() == null) {
        continue;
      }
      if (interf.methods().length > 0) {
        ReferenceBinding superclass=binding.superclass();
        if (superclass == null || !superclass.implementsInterface(interf,true)) {
          state.addJsoInterface(type,cud,interf);
        }
      }
    }
  }
  return ClassState.JSO;
}

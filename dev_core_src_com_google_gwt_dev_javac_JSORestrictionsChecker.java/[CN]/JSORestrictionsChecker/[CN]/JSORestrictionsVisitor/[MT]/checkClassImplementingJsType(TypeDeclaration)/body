{
  ReferenceBinding jsInterface=findNearestJsTypeRecursive(type.binding);
  if (jsInterface == null) {
    return false;
  }
  for (  MethodBinding mb : type.binding.methods()) {
    checkJsExport(mb,true);
    checkJsProperty(mb,false);
  }
  AnnotationBinding jsinterfaceAnn=JdtUtil.getAnnotation(jsInterface,JsInteropUtil.JSTYPE_CLASS);
  String jsPrototype=JdtUtil.getAnnotationParameterString(jsinterfaceAnn,"prototype");
  boolean isNative=JdtUtil.getAnnotationParameterBoolean(jsinterfaceAnn,"isNative");
  if (!Strings.isNullOrEmpty(jsPrototype)) {
    checkClassExtendsMagicPrototype(type,jsInterface,!isNative,isNative);
  }
 else {
    checkClassExtendsMagicPrototype(type,jsInterface,false,isNative);
  }
  return true;
}

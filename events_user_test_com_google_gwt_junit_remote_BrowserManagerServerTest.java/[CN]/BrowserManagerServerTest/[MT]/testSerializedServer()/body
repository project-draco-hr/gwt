{
  BrowserManager browserManager=startBrowserManagerServer(true);
  final int NUM_BROWSERS=4;
  int tokens[]=new int[NUM_BROWSERS];
  for (int i=0; i < NUM_BROWSERS; i++) {
    tokens[i]=launchBrowser(browserManager,i);
  }
  Thread.sleep(TIMEOUT_MS / 4);
  int numQueued=server.numQueued();
  int numRunning=server.numRunning();
  assertEquals("Did not find the number of expected browsers queued up",NUM_BROWSERS - 1,numQueued);
  assertEquals("Expected only one running at a time for serialized.",1,numRunning);
  outer:   for (int runningBrowser=0; runningBrowser < NUM_BROWSERS; ++runningBrowser) {
    long shouldBeDeadBy=System.currentTimeMillis() + (TIMEOUT_MS * 2);
    while (System.currentTimeMillis() < shouldBeDeadBy) {
      assertTrue(server.numRunning() <= 1);
      for (int i=runningBrowser; i < NUM_BROWSERS; ++i) {
        try {
          browserManager.keepAlive(tokens[runningBrowser],TIMEOUT_MS);
        }
 catch (        IllegalStateException ise) {
          assertEquals("The wrong browser is dead",runningBrowser,i);
          if (LOG) {
            System.out.println("Browser token: " + tokens[i] + " exited sucessfully");
          }
          browserManager.killBrowser(tokens[i]);
          continue outer;
        }
      }
      Thread.sleep(PING_INTERVAL_MS);
    }
    fail("Browser " + runningBrowser + " failed to exit in a timely manner");
  }
}

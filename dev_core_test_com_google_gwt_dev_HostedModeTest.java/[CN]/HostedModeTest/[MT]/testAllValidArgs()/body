{
  assertProcessSuccess(argProcessor,"-port","8080","-whitelist","white","-blacklist","black","-logLevel","DEBUG","-noserver","-server",MySCL.class.getName(),"-gen","myGen","-war","myWar","-workDir","myWork","-extra","myExtra","-startupUrl","http://www.google.com/","-startupUrl","foo","c.g.g.h.H","my.Module");
  assertNotNull(BrowserWidgetHostChecker.matchWhitelisted("white"));
  assertNotNull(BrowserWidgetHostChecker.matchBlacklisted("black"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1.40"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1.40:88"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1.40:88/"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1.40:88/foo"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org:88"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org:88/"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org:88/foo"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org/"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://localhost.evildomain.org/foo"));
  assertFalse(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://www.evildomain.org/foo?http://localhost"));
  assertTrue(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1"));
  assertTrue(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1:88"));
  assertTrue(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1:88/"));
  assertTrue(BrowserWidgetHostChecker.isAlwaysWhitelisted("http://127.0.0.1:88/foo"));
  assertEquals(new File("myGen").getAbsoluteFile(),options.getGenDir().getAbsoluteFile());
  assertEquals(new File("myWar"),options.getWarDir());
  assertEquals(new File("myWork"),options.getWorkDir());
  assertEquals(new File("myExtra"),options.getExtraDir());
  assertEquals(TreeLogger.DEBUG,options.getLogLevel());
  assertEquals(8080,options.getPort());
  assertFalse(options.isNoServer());
  assertSame(MySCL.class,options.getServletContainerLauncher().getClass());
  assertEquals(2,options.getStartupURLs().size());
  assertEquals("http://www.google.com/",options.getStartupURLs().get(0));
  assertEquals("foo",options.getStartupURLs().get(1));
  assertEquals(2,options.getModuleNames().size());
  assertEquals("c.g.g.h.H",options.getModuleNames().get(0));
  assertEquals("my.Module",options.getModuleNames().get(1));
}

{
  MockLibrary rootLibrary=new MockLibrary("RootLibrary");
  rootLibrary.getDependencyLibraryNames().addAll(Lists.newArrayList("SubLibrary1","SubLibrary2"));
  rootLibrary.getNewBindingPropertyValuesByName().putAll("user.agent",Lists.newArrayList("webkit_phone","webkit_tablet"));
  rootLibrary.getNewBindingPropertyValuesByName().putAll("locale",Lists.newArrayList("ru"));
  MockLibrary subLibrary1=new MockLibrary("SubLibrary1");
  subLibrary1.getNewBindingPropertyValuesByName().putAll("user.agent",Lists.newArrayList("webkit","mozilla","ie"));
  subLibrary1.getRanGeneratorNames().add("UserAgentAsserter");
  MockLibrary subLibrary2=new MockLibrary("SubLibrary2");
  subLibrary2.getNewBindingPropertyValuesByName().putAll("locale",Lists.newArrayList("en","fr"));
  subLibrary2.getRanGeneratorNames().add("LocalizedDatePickerGenerator");
  LibraryGroup libraryGroup=LibraryGroup.fromLibraries(Lists.<Library>newArrayList(rootLibrary,subLibrary1,subLibrary2),true);
  Collection<String> newUserAgentsForUserAgentAsserter=libraryGroup.gatherNewBindingPropertyValuesForGenerator("UserAgentAsserter").get("user.agent");
  Collection<String> newUserAgentsForLocalizedDatePickerGenerator=libraryGroup.gatherNewBindingPropertyValuesForGenerator("LocalizedDatePickerGenerator").get("user.agent");
  Collection<String> newLocalesForLocalizedDatePickerGenerator=libraryGroup.gatherNewBindingPropertyValuesForGenerator("LocalizedDatePickerGenerator").get("locale");
  assertEquals(Sets.newHashSet("webkit_phone","webkit_tablet"),newUserAgentsForUserAgentAsserter);
  assertEquals(Sets.newHashSet("webkit_phone","webkit_tablet","webkit","mozilla","ie"),newUserAgentsForLocalizedDatePickerGenerator);
  assertEquals(Sets.newHashSet("ru"),newLocalesForLocalizedDatePickerGenerator);
}

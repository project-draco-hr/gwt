{
  Object instance=null;
  SerializedInstanceReference serializedInstRef=SerializabilityUtil.decodeSerializedInstanceReference(typeSignature);
  try {
    Class instanceClass=Class.forName(serializedInstRef.getName(),false,classLoader);
    assert(serializationPolicy != null);
    serializationPolicy.validateDeserialize(instanceClass);
    validateTypeVersions(instanceClass,serializedInstRef);
    Class customSerializer=SerializabilityUtil.hasCustomFieldSerializer(instanceClass);
    instance=instantiate(customSerializer,instanceClass);
    rememberDecodedObject(instance);
    deserializeImpl(customSerializer,instanceClass,instance);
    return instance;
  }
 catch (  ClassNotFoundException e) {
    throw new SerializationException(e);
  }
catch (  InstantiationException e) {
    throw new SerializationException(e);
  }
catch (  IllegalAccessException e) {
    throw new SerializationException(e);
  }
catch (  IllegalArgumentException e) {
    throw new SerializationException(e);
  }
catch (  InvocationTargetException e) {
    throw new SerializationException(e);
  }
catch (  NoSuchMethodException e) {
    throw new SerializationException(e);
  }
}

{
  final Map<K,V> map;
  final K keyToPut;
  final V valueToPut;
  try {
    map=makePopulatedMap();
    valueToPut=getValueNotInPopulatedMap();
  }
 catch (  UnsupportedOperationException e) {
    return;
  }
  keyToPut=map.keySet().iterator().next();
  if (supportsPut) {
    int initialSize=map.size();
    map.put(keyToPut,valueToPut);
    assertEquals(valueToPut,map.get(keyToPut));
    assertTrue(map.containsKey(keyToPut));
    assertTrue(map.containsValue(valueToPut));
    assertEquals(initialSize,map.size());
  }
 else {
    try {
      map.put(keyToPut,valueToPut);
      fail("Expected UnsupportedOperationException.");
    }
 catch (    UnsupportedOperationException e) {
    }
  }
  assertInvariants(map);
}

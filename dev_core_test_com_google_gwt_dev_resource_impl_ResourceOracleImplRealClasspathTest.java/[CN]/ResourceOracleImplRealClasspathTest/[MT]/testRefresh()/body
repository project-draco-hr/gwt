{
  PathPrefixSet pathPrefixSet=new PathPrefixSet();
  pathPrefixSet.add(makeJunitPrefix());
  pathPrefixSet.add(makeThisClassPrefix());
  resourceOracle.setPathPrefixes(pathPrefixSet);
  resourceOracle.scanResources(logger);
  Map<String,Resource> resourceMap=resourceOracle.getResourceMap();
  assertEquals(2,resourceMap.size());
  resourceOracle.scanResources(logger);
  assertResourcesEqual(resourceMap,resourceOracle.getResourceMap());
  resourceOracle.setPathPrefixes(pathPrefixSet);
  resourceOracle.scanResources(logger);
  assertResourcesEqual(resourceMap,resourceOracle.getResourceMap());
  pathPrefixSet=new PathPrefixSet();
  pathPrefixSet.add(makeJunitPrefix());
  pathPrefixSet.add(makeThisClassPrefix());
  resourceOracle.setPathPrefixes(pathPrefixSet);
  resourceOracle.scanResources(logger);
  assertResourcesEqual(resourceMap,resourceOracle.getResourceMap());
  pathPrefixSet=new PathPrefixSet();
  pathPrefixSet.add(makeJunitPrefix());
  pathPrefixSet.add(makeThisClassPrefix());
  pathPrefixSet.add(makeJunitPrefix());
  resourceOracle.setPathPrefixes(pathPrefixSet);
  resourceOracle.scanResources(logger);
  assertResourcesEqual(resourceMap,resourceOracle.getResourceMap());
  pathPrefixSet=new PathPrefixSet();
  pathPrefixSet.add(makeJunitPrefix());
  pathPrefixSet.add(makeThisClassPrefix());
  pathPrefixSet.add(makeThisClassPrefixPlus());
  resourceOracle.setPathPrefixes(pathPrefixSet);
  resourceOracle.scanResources(logger);
  assertEquals(3,resourceOracle.getResourceMap().size());
}

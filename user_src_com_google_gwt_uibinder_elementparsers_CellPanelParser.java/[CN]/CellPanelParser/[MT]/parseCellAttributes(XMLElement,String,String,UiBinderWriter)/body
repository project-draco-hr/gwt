{
  JClassType hAlignConstantType=writer.getOracle().findType(HorizontalAlignmentConstant.class.getCanonicalName());
  JClassType vAlignConstantType=writer.getOracle().findType(VerticalAlignmentConstant.class.getCanonicalName());
  if (cellElem.hasAttribute(HALIGN_ATTR)) {
    String value=cellElem.consumeAttribute(HALIGN_ATTR,hAlignConstantType);
    writer.addStatement("%1$s.setCellHorizontalAlignment(%2$s, %3$s);",fieldName,childFieldName,value);
    DesignTimeUtils.putAttribute(writer,cellElem,"*Cell." + HALIGN_ATTR,value);
  }
  if (cellElem.hasAttribute(VALIGN_ATTR)) {
    String value=cellElem.consumeAttribute(VALIGN_ATTR,vAlignConstantType);
    writer.addStatement("%1$s.setCellVerticalAlignment(%2$s, %3$s);",fieldName,childFieldName,value);
    DesignTimeUtils.putAttribute(writer,cellElem,"*Cell." + VALIGN_ATTR,value);
  }
  if (cellElem.hasAttribute(WIDTH_ATTR)) {
    String value=cellElem.consumeStringAttribute(WIDTH_ATTR);
    writer.addStatement("%1$s.setCellWidth(%2$s, %3$s);",fieldName,childFieldName,value);
    DesignTimeUtils.putAttribute(writer,cellElem,"*Cell." + WIDTH_ATTR,value);
  }
  if (cellElem.hasAttribute(HEIGHT_ATTR)) {
    String value=cellElem.consumeStringAttribute(HEIGHT_ATTR);
    writer.addStatement("%1$s.setCellHeight(%2$s, %3$s);",fieldName,childFieldName,value);
    DesignTimeUtils.putAttribute(writer,cellElem,"*Cell." + HEIGHT_ATTR,value);
  }
}

{
  EntityManager em=entityManager();
  try {
    Query query=queryReportsBySearch(em,employeeId,department,startsWith,orderBy,false);
    if (cache == null) {
      try {
        CacheFactory cacheFactory=CacheManager.getInstance().getCacheFactory();
        cache=cacheFactory.createCache(Collections.emptyMap());
      }
 catch (      CacheException e) {
        log.warning("Exception retrieving memcache instance: " + e);
      }
    }
    String encodedCursor=null;
    if (cache != null) {
      String key=createKey(employeeId,department,startsWith,orderBy,firstResult);
      encodedCursor=(String)cache.get(key);
    }
    if (encodedCursor != null) {
      Cursor cursor=Cursor.fromWebSafeString(encodedCursor);
      query.setHint(JPACursorHelper.CURSOR_HINT,cursor);
      query.setFirstResult(0);
    }
 else     if (firstResult + maxResults < 1000) {
      query.setHint(JPACursorHelper.CURSOR_HINT,null);
      query.setFirstResult(firstResult);
    }
 else {
      int pos=(firstResult / 1000) * 1000;
      Cursor trialCursor=null;
      while (pos > 0) {
        String trialKey=createKey(employeeId,department,startsWith,orderBy,pos);
        String trialEncodedCursor=(String)cache.get(trialKey);
        if (trialEncodedCursor != null) {
          trialCursor=Cursor.fromWebSafeString(trialEncodedCursor);
          break;
        }
        pos-=1000;
      }
      query.setHint(JPACursorHelper.CURSOR_HINT,trialCursor);
      while (firstResult > pos) {
        int min=Math.min(firstResult - pos,1000);
        if (pos + min < firstResult) {
          int mod=(pos + min) % 1000;
          min-=mod;
        }
        query.setMaxResults(min);
        List<ReportBack> results=query.getResultList();
        int count=results.size();
        if (count == 0) {
          break;
        }
        pos+=count;
        Cursor cursor=JPACursorHelper.getCursor(results);
        if (cache != null) {
          String key=createKey(employeeId,department,startsWith,orderBy,pos);
          cache.put(key,cursor.toWebSafeString());
        }
        query.setHint(JPACursorHelper.CURSOR_HINT,cursor);
      }
    }
    query.setMaxResults(maxResults);
    List<ReportBack> reportList=query.getResultList();
    reportList.size();
    Cursor cursor=JPACursorHelper.getCursor(reportList);
    if (cache != null) {
      int pos=firstResult + reportList.size();
      String key=createKey(employeeId,department,startsWith,orderBy,pos);
      cache.put(key,cursor.toWebSafeString());
    }
    return reportList;
  }
  finally {
    em.close();
  }
}

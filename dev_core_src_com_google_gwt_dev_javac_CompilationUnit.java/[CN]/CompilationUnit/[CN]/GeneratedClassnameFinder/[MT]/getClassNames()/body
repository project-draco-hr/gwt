{
  List<String> allGeneratedClasses=new ArrayList<String>();
  for (int i=0; i < classesToScan.size(); i++) {
    String lookupName=classesToScan.get(i);
    byte classBytes[]=getClassBytes(lookupName);
    if (classBytes == null) {
      continue;
    }
    if (CompilingClassLoader.isClassnameGenerated(lookupName) && !allGeneratedClasses.contains(lookupName)) {
      allGeneratedClasses.add(lookupName);
    }
    AnonymousClassVisitor cv=new AnonymousClassVisitor();
    new ClassReader(classBytes).accept(cv,0);
    List<String> innerClasses=cv.getInnerClassNames();
    for (    String innerClass : innerClasses) {
      if (!innerClass.startsWith(mainClass + "$")) {
        continue;
      }
      if (!classesToScan.contains(innerClass)) {
        classesToScan.add(innerClass);
      }
    }
  }
  Collections.sort(allGeneratedClasses,new GeneratedClassnameComparator());
  return allGeneratedClasses;
}

{
  List<ViolationMessage> errorMessages=new ArrayList<ViolationMessage>();
  for (  Map.Entry<SimpleProxyId<?>,AutoBean<? extends BaseProxy>> entry : source.beans.entrySet()) {
    AutoBean<? extends BaseProxy> bean=entry.getValue();
    Object domainObject=bean.getTag(Constants.DOMAIN_OBJECT);
    if (domainObject != null) {
      Set<ConstraintViolation<Object>> errors=service.validate(domainObject);
      if (errors != null && !errors.isEmpty()) {
        SimpleProxyId<?> id=entry.getKey();
        for (        ConstraintViolation<Object> error : errors) {
          ViolationMessage message=FACTORY.violation().as();
          message.setClientId(id.getClientId());
          message.setMessage(error.getMessage());
          message.setPath(error.getPropertyPath().toString());
          if (id.isEphemeral()) {
            message.setClientId(id.getClientId());
          }
          if (id.getServerId() != null) {
            message.setServerId(toBase64(id.getServerId()));
          }
          message.setTypeToken(service.getTypeToken(id.getProxyClass()));
          errorMessages.add(message);
        }
      }
    }
  }
  return errorMessages;
}

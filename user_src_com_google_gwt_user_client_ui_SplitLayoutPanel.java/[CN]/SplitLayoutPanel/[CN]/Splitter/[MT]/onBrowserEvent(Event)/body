{
switch (event.getTypeInt()) {
case Event.ONMOUSEDOWN:
    mouseDown=true;
  int width=Math.max(Window.getClientWidth(),Document.get().getScrollWidth());
int height=Math.max(Window.getClientHeight(),Document.get().getScrollHeight());
glassElem.getStyle().setHeight(height,Unit.PX);
glassElem.getStyle().setWidth(width,Unit.PX);
Document.get().getBody().appendChild(glassElem);
offset=getEventPosition(event) - getAbsolutePosition();
Event.setCapture(getElement());
event.preventDefault();
break;
case Event.ONMOUSEUP:
mouseDown=false;
glassElem.removeFromParent();
if (this.toggleDisplayAllowed) {
double now=Duration.currentTimeMillis();
if (now - this.lastClick < DOUBLE_CLICK_TIMEOUT) {
now=0;
LayoutData layout=(LayoutData)target.getLayoutData();
if (layout.size == 0) {
setAssociatedWidgetSize(layout.oldSize);
}
 else {
layout.oldSize=layout.size;
setAssociatedWidgetSize(0);
}
}
this.lastClick=now;
}
Event.releaseCapture(getElement());
event.preventDefault();
break;
case Event.ONMOUSEMOVE:
if (mouseDown) {
int size;
if (reverse) {
size=getTargetPosition() + getTargetSize() - getSplitterSize() - getEventPosition(event) + offset;
}
 else {
size=getEventPosition(event) - getTargetPosition() - offset;
}
((LayoutData)target.getLayoutData()).hidden=false;
setAssociatedWidgetSize(size);
event.preventDefault();
}
break;
}
}

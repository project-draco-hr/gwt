{
  logger=logger.branch(TreeLogger.SPAM,"Service method: " + method.getReadableDeclaration(),null);
  boolean failed=false;
  JType returnType=method.getReturnType();
  if (returnType != null && returnType != JPrimitiveType.VOID) {
    JType[] serializableTypes=serializationOracle.getSerializableTypesAssignableTo(returnType);
    if (!validSerializableTypes(serializableTypes)) {
      failed=true;
      raiseInvalidReturnType(logger,returnType);
    }
 else {
      logSerializableReturnTypes(logger,returnType,serializableTypes);
    }
  }
  JParameter[] params=method.getParameters();
  for (int paramIndex=0; paramIndex < params.length; ++paramIndex) {
    JParameter param=params[paramIndex];
    JType paramType=param.getType();
    JType[] serializableTypes=serializationOracle.getSerializableTypesAssignableTo(paramType);
    if (!validSerializableTypes(serializableTypes)) {
      failed=true;
      raiseInvalidArgumentType(logger,param);
    }
 else {
      logSerializableArgumentTypes(logger,param,serializableTypes);
    }
  }
  JType[] exs=method.getThrows();
  for (int throwsIndex=0; throwsIndex < exs.length; ++throwsIndex) {
    JType ex=exs[throwsIndex];
    JType[] serializableTypes=serializationOracle.getSerializableTypesAssignableTo(ex);
    if (!validSerializableTypes(serializableTypes)) {
      failed=true;
      raiseInvalidExceptionType(logger,ex);
    }
 else {
      logSerializableExceptionTypes(logger,ex,serializableTypes);
    }
  }
  return !failed;
}

{
  for (int index=0; index < serializableTypes.length; ++index) {
    JType type=serializableTypes[index];
    assert(type != null);
    JClassType classType=type.isClass();
    if (classType != null) {
      if (classType.isAbstract()) {
        continue;
      }
      TreeLogger branchedLog=logger.branch(TreeLogger.SPAM,classType.getParameterizedQualifiedSourceName(),null);
      JField problematicField=findFirstInvalidFinalField(classType);
      if (problematicField != null && !hasCustomInstantiation(classType)) {
        JType enclosingType=problematicField.getEnclosingType();
        String warningMessage="The field '" + problematicField.toString() + "'";
        if (enclosingType != classType) {
          warningMessage+=", inherited from '" + enclosingType.getParameterizedQualifiedSourceName() + "',";
        }
        warningMessage+=" will not be included because it is a 'final' instance field that is not also 'transient'";
        branchedLog.branch(TreeLogger.WARN,warningMessage,null);
      }
    }
  }
}

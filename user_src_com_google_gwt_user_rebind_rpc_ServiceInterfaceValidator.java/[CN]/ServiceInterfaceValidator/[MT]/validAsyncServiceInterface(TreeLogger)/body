{
  String asyncIntfQualifiedName=getAsyncInterfaceQualifiedName();
  JClassType asyncServiceIntf=typeOracle.findType(asyncIntfQualifiedName);
  if (asyncServiceIntf == null) {
    raiseInvalidAsyncIntf(logger,serviceIntf);
    return false;
  }
  boolean failed=false;
  JMethod[] methods=serviceIntf.getMethods();
  for (int index=0; index < methods.length; ++index) {
    JMethod method=methods[index];
    assert(method != null);
    JType[] asyncParamTypes=getAsyncParamTypes(method,typeOracle);
    JMethod asyncMethod=asyncServiceIntf.findMethod(method.getName(),asyncParamTypes);
    if (asyncMethod == null) {
      logger.branch(TreeLogger.ERROR,"No asynchronous version of the synchronous method " + method.getReadableDeclaration(),null);
      failed=true;
    }
  }
  if (failed) {
    raiseInvalidAsyncIntf(logger,serviceIntf);
  }
  return !failed;
}

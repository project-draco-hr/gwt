{
  runCreator("-out",projectFolder,"-XnoEclipse","-junit",mockJar,MY_PROJECT);
  String libDir="war" + File.separatorChar + "WEB-INF"+ File.separatorChar+ "lib";
  assertTrue(new File(projectFolder + File.separatorChar + libDir).mkdirs());
  String libJarName=libDir + File.separatorChar + "foo.jar";
  File libFile=new File(projectFolder + File.separatorChar + libJarName);
  assertTrue(libFile.createNewFile());
  runCreator("-out",projectFolder,"-XonlyEclipse","-junit",mockJar,MY_PROJECT);
  assertFileExists(".classpath");
  File classpathFile=new File(projectFolder + File.separatorChar + ".classpath");
  String classpathContents=Util.readURLAsString(classpathFile.toURI().toURL());
  String canonicalLibJarName=libJarName.replaceAll(Pattern.quote(File.separator),"/");
  assertTrue(".classpath does not contain " + canonicalLibJarName + ". .classpath contents:"+ classpathContents,classpathContents.contains(canonicalLibJarName));
}

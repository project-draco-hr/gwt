{
  StringBuffer x=new StringBuffer("!");
  x.insert(1,C.FLOAT_VALUE);
  assertTrue(x.toString().startsWith("!" + C.FLOAT_STRING));
  x=new StringBuffer("!");
  x.insert(1,C.INT_VALUE);
  assertEquals("!" + C.INT_STRING,x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.LONG_VALUE);
  assertEquals("!" + C.LONG_STRING,x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.DOUBLE_VALUE);
  assertTrue(x.toString().startsWith("!" + C.DOUBLE_STRING));
  x=new StringBuffer("!");
  x.insert(1,C.CHAR_VALUE);
  assertEquals("!" + C.CHAR_STRING,x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.CHAR_ARRAY_VALUE);
  assertEquals("!" + C.CHAR_ARRAY_STRING,x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.CHAR_ARRAY_VALUE,1,4);
  assertEquals("!" + C.CHAR_ARRAY_STRING.substring(1,5),x.toString());
  x=new StringBuffer("01234");
  x.insert(2,(CharSequence)"abcde");
  assertEquals("01abcde234",x.toString());
  x=new StringBuffer("01234");
  x.insert(2,"abcde",2,4);
  assertEquals("01cd234",x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.FALSE_VALUE);
  assertEquals("!" + C.FALSE_STRING,x.toString());
  x=new StringBuffer("!");
  x.insert(1,C.TRUE_VALUE);
  assertEquals("!" + C.TRUE_STRING,x.toString());
  final CharSequence nullCharSequence=null;
  x=new StringBuffer("!");
  x.insert(1,nullCharSequence);
  assertEquals("!null",x.toString());
  x=new StringBuffer("!");
  x.insert(1,nullCharSequence,0,3);
  assertEquals("!nul",x.toString());
}

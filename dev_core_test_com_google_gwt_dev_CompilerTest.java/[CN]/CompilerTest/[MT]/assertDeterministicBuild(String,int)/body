{
  final CompilerOptionsImpl options=new CompilerOptionsImpl();
  options.setOptimizationLevel(optimizationLevel);
  File firstCompileWorkDir=Utility.makeTemporaryDirectory(null,"hellowork");
  File secondCompileWorkDir=Utility.makeTemporaryDirectory(null,"hellowork");
  String oldPersistentUnitCacheValue=System.setProperty(UnitCacheSingleton.GWT_PERSISTENTUNITCACHE,"false");
  try {
    options.addModuleName(topLevelModule);
    options.setWarDir(new File(firstCompileWorkDir,"war"));
    options.setExtraDir(new File(firstCompileWorkDir,"extra"));
    TreeLogger logger=TreeLogger.NULL;
    Compiler.compile(logger,options);
    Set<String> firstTimeOutput=Sets.newHashSet(new File(options.getWarDir() + "/hello").list());
    options.setWarDir(new File(secondCompileWorkDir,"war"));
    options.setExtraDir(new File(secondCompileWorkDir,"extra"));
    Compiler.compile(logger,options);
    Set<String> secondTimeOutput=Sets.newHashSet(new File(options.getWarDir() + "/hello").list());
    assertEquals("First and second compile produced different outputs",firstTimeOutput,secondTimeOutput);
  }
  finally {
    if (oldPersistentUnitCacheValue == null) {
      System.clearProperty(UnitCacheSingleton.GWT_PERSISTENTUNITCACHE);
    }
 else {
      System.setProperty(UnitCacheSingleton.GWT_PERSISTENTUNITCACHE,oldPersistentUnitCacheValue);
    }
    Util.recursiveDelete(firstCompileWorkDir,false);
    Util.recursiveDelete(secondCompileWorkDir,false);
  }
}

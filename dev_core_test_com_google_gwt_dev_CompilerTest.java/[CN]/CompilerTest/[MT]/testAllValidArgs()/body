{
  assertProcessSuccess(argProcessor,new String[]{"-logLevel","DEBUG","-style","PRETTY","-ea","-XdisableAggressiveOptimization","-gen","myGen","-war","myWar","-workDir","myWork","-extra","myExtra","-incremental","-localWorkers","2","-sourceLevel","1.7","c.g.g.h.H","my.Module"});
  assertEquals(new File("myGen").getAbsoluteFile(),options.getGenDir().getAbsoluteFile());
  assertEquals(new File("myWar"),options.getWarDir());
  assertEquals(new File("myWork"),options.getWorkDir());
  assertEquals(new File("myExtra"),options.getExtraDir());
  assertEquals(2,options.getLocalWorkers());
  assertEquals(TreeLogger.DEBUG,options.getLogLevel());
  assertEquals(JsOutputOption.PRETTY,options.getOutput());
  assertTrue(options.isEnableAssertions());
  assertFalse(options.shouldClusterSimilarFunctions());
  assertFalse(options.shouldInlineLiteralParameters());
  assertFalse(options.shouldOptimizeDataflow());
  assertFalse(options.shouldOrdinalizeEnums());
  assertFalse(options.shouldRemoveDuplicateFunctions());
  assertTrue(options.isIncrementalCompileEnabled());
  assertEquals(SourceLevel.JAVA7,options.getSourceLevel());
  assertEquals(2,options.getModuleNames().size());
  assertEquals("c.g.g.h.H",options.getModuleNames().get(0));
  assertEquals("my.Module",options.getModuleNames().get(1));
}

{
  String msg="Invoking generator " + generatorClass.getName();
  logger=logger.branch(TreeLogger.DEBUG,msg,null);
  Generator generator=generators.get(generatorClass);
  if (generator == null) {
    try {
      generator=generatorClass.newInstance();
      generators.put(generatorClass,generator);
    }
 catch (    Throwable e) {
      logger.log(TreeLogger.ERROR,"Unexpected error trying to instantiate Generator '" + generatorClass.getName() + "'",e);
      throw new UnableToCompleteException();
    }
  }
  setCurrentGenerator(generatorClass);
  boolean loggable=logger.isLoggable(TreeLogger.DEBUG);
  long before=loggable ? System.currentTimeMillis() : 0L;
  String generatorClassName=generator.getClass().getName();
  CompilerEventType type=eventsByGeneratorType.get(generatorClassName);
  if (type == null) {
    type=CompilerEventType.GENERATOR_OTHER;
  }
  Event generatorEvent=SpeedTracerLogger.start(type,"class",generatorClassName,"type",typeName);
  try {
    RebindResult result;
    if (generator instanceof IncrementalGenerator) {
      IncrementalGenerator incGenerator=(IncrementalGenerator)generator;
      if (cachedRebindResult != null) {
        Long cachedVersionId=(Long)cachedRebindResult.getClientData(GENERATOR_VERSION_ID_KEY);
        if (cachedVersionId != null && cachedVersionId != incGenerator.getVersionId()) {
          if (logger.isLoggable(TreeLogger.TRACE)) {
            logger.log(TreeLogger.TRACE,"Got version mismatch with cached generator result for " + typeName + ", invalidating cached result");
          }
          cachedRebindResult=null;
        }
      }
      result=incGenerator.generateIncrementally(logger,this,typeName);
      result.putClientData(GENERATOR_VERSION_ID_KEY,incGenerator.getVersionId());
    }
 else {
      result=IncrementalGenerator.generateNonIncrementally(logger,generator,this,typeName);
    }
    if (loggable) {
      long after=System.currentTimeMillis();
      msg="Generator returned type '" + result.getResultTypeName() + "; mode "+ result.getRebindMode()+ "; in "+ (after - before)+ " ms";
      logger.log(TreeLogger.DEBUG,msg,null);
    }
    return result;
  }
 catch (  AssertionError e) {
    logger.log(TreeLogger.ERROR,"Generator '" + generatorClass.getName() + "' failed an assertion while rebinding '"+ typeName+ "'",e);
    throw new UnableToCompleteException();
  }
catch (  RuntimeException e) {
    logger.log(TreeLogger.ERROR,"Generator '" + generatorClass.getName() + "' threw an exception while rebinding '"+ typeName+ "'",e);
    throw new UnableToCompleteException();
  }
 finally {
    generatorEvent.end();
  }
}

{
  String typeName;
  if (packageName.length() == 0) {
    typeName=simpleTypeName;
  }
 else {
    typeName=packageName + '.' + simpleTypeName;
  }
  compilerContext.getMinimalRebuildCache().associateReboundTypeWithGeneratedType(currentRebindBinaryTypeName,typeName);
  JClassType existingType=getTypeOracle().findType(packageName,simpleTypeName);
  if (existingType != null) {
    if (logger.isLoggable(TreeLogger.DEBUG)) {
      logger.log(TreeLogger.DEBUG,"Type '" + typeName + "' already exists and will not be re-created ",null);
    }
    return null;
  }
  if (newlyGeneratedTypeNames.contains(typeName)) {
    return null;
  }
  Generated gcup;
  StringWriter sw=new StringWriter();
  PrintWriter pw=new PrintWriter(sw,true){
    /** 
 * Overridden to force unix-style line endings for consistent behavior
 * across platforms.
 */
    @Override public void println(){
      super.print('\n');
      super.flush();
    }
  }
;
  if (this.genDir == null) {
    gcup=new GeneratedUnitImpl(sw,typeName);
  }
 else {
    File dir=new File(genDir,packageName.replace('.',File.separatorChar));
    dir.mkdirs();
    File srcFile=new File(dir,simpleTypeName + ".java");
    if (srcFile.exists()) {
      srcFile.delete();
    }
    gcup=new GeneratedUnitWithFile(srcFile,sw,typeName);
  }
  uncommittedGeneratedCupsByPrintWriter.put(pw,gcup);
  newlyGeneratedTypeNames.add(typeName);
  return pw;
}

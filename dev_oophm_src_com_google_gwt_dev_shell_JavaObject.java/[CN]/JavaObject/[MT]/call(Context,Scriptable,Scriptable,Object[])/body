{
  if (args.length < 2) {
    return Undefined.instance;
  }
  Value valueArgs[]=new Value[args.length - 2];
  for (int i=0; i < valueArgs.length; i++) {
    valueArgs[i]=sessionData.getSessionHandler().makeValueFromJsval(cx,args[i + 2]);
  }
  Value thisValue=sessionData.getSessionHandler().makeValueFromJsval(cx,args[1]);
  int dispatchId=((Number)args[0]).intValue();
  ReturnMessage returnMessage=null;
synchronized (sessionData.getSessionHandler().getHtmlPage()) {
    try {
      new InvokeOnServerMessage(sessionData.getChannel(),dispatchId,thisValue,valueArgs).send();
    }
 catch (    IOException e) {
      return Undefined.instance;
    }
    try {
      returnMessage=((BrowserChannelClient)sessionData.getChannel()).reactToMessagesWhileWaitingForReturn(sessionData.getSessionHandler());
    }
 catch (    IOException e) {
      return Undefined.instance;
    }
catch (    BrowserChannelException e) {
      return Undefined.instance;
    }
  }
  Value returnValue=returnMessage.getReturnValue();
  if (returnMessage.isException()) {
    throw new RuntimeException("JavaObject.call failed, returnMessage: " + returnValue.toString());
  }
  Object ret[]=new Object[2];
  ret[0]=Boolean.FALSE;
  ret[1]=sessionData.getSessionHandler().makeJsvalFromValue(cx,returnValue);
  return ret;
}

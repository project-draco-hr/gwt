{
  MethodBinding b=x.binding;
  JMethod method=(JMethod)typeMap.get(b);
  try {
    processHasAnnotations(method,x.annotations);
    if (x.arguments != null) {
      for (int i=0, j=x.arguments.length; i < j; i++) {
        JParameter p=(JParameter)typeMap.get(x.arguments[i].binding);
        processHasAnnotations(p,x.arguments[i].annotations);
      }
    }
    if (!b.isStatic() && (b.isImplementing() || b.isOverriding())) {
      tryFindUpRefs(method,b);
    }
    if (x.isNative()) {
      processNativeMethod(x,(JsniMethodBody)method.getBody());
      return;
    }
    currentMethod=method;
    currentMethodBody=(JMethodBody)method.getBody();
    currentMethodScope=x.scope;
    if (currentMethodBody != null) {
      currentMethodBody.getBlock().addStmts(processStatements(x.statements));
    }
    currentMethodScope=null;
    currentMethodBody=null;
    currentMethod=null;
  }
 catch (  Throwable e) {
    throw translateException(method,e);
  }
}

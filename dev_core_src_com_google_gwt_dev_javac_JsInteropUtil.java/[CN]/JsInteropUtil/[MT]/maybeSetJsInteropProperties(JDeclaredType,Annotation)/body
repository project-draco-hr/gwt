{
  AnnotationBinding jsType=JdtUtil.getAnnotation(annotations,JSTYPE_CLASS);
  String namespace=maybeGetJsNamespace(annotations);
  String exportName=maybeGetJsExportName(annotations,"");
  String jsPrototype=JdtUtil.getAnnotationParameterString(jsType,"prototype");
  boolean isJsNative=jsPrototype != null;
  if (isJsNative) {
    int indexOf=jsPrototype.lastIndexOf(".");
    namespace=indexOf == -1 ? "" : jsPrototype.substring(0,indexOf);
    exportName=jsPrototype.substring(indexOf + 1);
  }
  boolean isJsType=jsType != null;
  boolean isClassWideExport=exportName != null;
  boolean isJsFunction=JdtUtil.getAnnotation(annotations,JSFUNCTION_CLASS) != null;
  boolean canBeImplementedExternally=(type instanceof JInterfaceType && (isJsType || isJsFunction)) || (type instanceof JClassType && isJsNative);
  type.setJsTypeInfo(isJsType,isJsNative,isJsFunction,namespace,exportName,isClassWideExport,canBeImplementedExternally);
}

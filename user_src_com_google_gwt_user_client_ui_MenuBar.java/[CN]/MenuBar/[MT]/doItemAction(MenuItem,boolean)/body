{
  if ((shownChildMenu != null) && (item.getSubMenu() == shownChildMenu)) {
    return;
  }
  if (shownChildMenu != null) {
    shownChildMenu.onHide();
    popup.hide();
  }
  if ((item != null) && (item.getSubMenu() == null)) {
    if (fireCommand) {
      closeAllParents();
      Command cmd=item.getCommand();
      if (cmd != null) {
        DeferredCommand.addCommand(cmd);
      }
    }
    return;
  }
  selectItem(item);
  if (item == null) {
    return;
  }
  popup=new DecoratedPopupPanel(true,false,"menuPopup"){
{
      setWidget(item.getSubMenu());
      item.getSubMenu().onShow();
    }
    @Override public boolean onEventPreview(    Event event){
switch (DOM.eventGetType(event)) {
case Event.ONCLICK:
        Element target=DOM.eventGetTarget(event);
      Element parentMenuElement=item.getParentMenu().getElement();
    if (DOM.isOrHasChild(parentMenuElement,target)) {
      return false;
    }
  break;
}
return super.onEventPreview(event);
}
}
;
popup.setAnimationType(AnimationType.ONE_WAY_CORNER);
popup.setAnimationEnabled(isAnimationEnabled);
popup.setStyleName("gwt-MenuBarPopup");
popup.addPopupListener(this);
shownChildMenu=item.getSubMenu();
item.getSubMenu().parentMenu=this;
popup.setPopupPositionAndShow(new PopupPanel.PositionCallback(){
public void setPosition(int offsetWidth,int offsetHeight){
if (LocaleInfo.getCurrentLocale().isRTL()) {
if (vertical) {
  popup.setPopupPosition(MenuBar.this.getAbsoluteLeft() - offsetWidth + 1,item.getAbsoluteTop());
}
 else {
  popup.setPopupPosition(item.getAbsoluteLeft() + item.getOffsetWidth() - offsetWidth,MenuBar.this.getAbsoluteTop() + MenuBar.this.getOffsetHeight() - 1);
}
}
 else {
if (vertical) {
  popup.setPopupPosition(MenuBar.this.getAbsoluteLeft() + MenuBar.this.getOffsetWidth() - 1,item.getAbsoluteTop());
}
 else {
  popup.setPopupPosition(item.getAbsoluteLeft(),MenuBar.this.getAbsoluteTop() + MenuBar.this.getOffsetHeight() - 1);
}
}
}
}
);
shownChildMenu.focus();
}

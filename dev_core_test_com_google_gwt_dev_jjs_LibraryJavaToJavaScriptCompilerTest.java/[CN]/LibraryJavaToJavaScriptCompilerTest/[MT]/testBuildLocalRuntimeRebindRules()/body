{
  Set<String> allRootTypes=Sets.newHashSet();
  compiler.jprogram=new JProgram(new MinimalRebuildCache());
  Map<String,String> runtimeRebindRuleSourcesByShortName=RuntimeRebindRuleGenerator.RUNTIME_REBIND_RULE_SOURCES_BY_SHORT_NAME;
  Deque<Rule> rules=Lists.newLinkedList();
  RuleFail ruleFail=new RuleFail();
  ruleFail.getRootCondition().getConditions().add(new ConditionWhenPropertyIs("foo","bar"));
  rules.addFirst(ruleFail);
  rules.addFirst(new RuleGenerateWith(Generator.class));
  RuleReplaceWith ruleReplaceCanvas=new RuleReplaceWith("WebkitCanvasElement");
  ruleReplaceCanvas.getRootCondition().getConditions().add(new ConditionWhenTypeIs("CanvasElement"));
  rules.addFirst(ruleReplaceCanvas);
  rules.addFirst(new RuleReplaceWithFallback("CanvasElement"));
  precompiler.buildSimpleRuntimeRebindRules(rules);
  assertEquals(3,runtimeRebindRuleSourcesByShortName.size());
  String runtimeRebindRule0=runtimeRebindRuleSourcesByShortName.get("RuntimeRebindRule0");
  assertTrue(runtimeRebindRule0.contains("@CanvasElement::new()()"));
  assertTrue(runtimeRebindRule0.contains("requestTypeClass == @CanvasElement::class"));
  String runtimeRebindRule1=runtimeRebindRuleSourcesByShortName.get("RuntimeRebindRule1");
  assertTrue(runtimeRebindRule1.contains("@WebkitCanvasElement::new()()"));
  assertTrue(runtimeRebindRule1.contains("requestTypeClass == @CanvasElement::class"));
  String runtimeRebindRule2=runtimeRebindRuleSourcesByShortName.get("RuntimeRebindRule2");
  assertTrue(runtimeRebindRule2.contains("Deferred binding request failed for type"));
  assertTrue(runtimeRebindRule2.contains("RuntimePropertyRegistry::getPropertyValue(*)(\"foo\") == \"bar\""));
  precompiler.buildRuntimeRebindRegistrator(allRootTypes);
  assertEquals("com.google.gwt.lang.mock_RuntimeRebindRegistrator",compiler.jprogram.getRuntimeRebindRegistratorTypeSourceName());
  assertTrue(allRootTypes.contains(compiler.jprogram.getRuntimeRebindRegistratorTypeSourceName()));
  String registratorSource=generatorContext.stringWriterByTypeSourceName.get(compiler.jprogram.getRuntimeRebindRegistratorTypeSourceName()).toString();
  assertTrue(registratorSource.contains("RuntimeRebinder.registerRuntimeRebindRule(new RuntimeRebindRule0());"));
  assertTrue(registratorSource.contains("RuntimeRebinder.registerRuntimeRebindRule(new RuntimeRebindRule1());"));
  assertTrue(registratorSource.contains("RuntimeRebinder.registerRuntimeRebindRule(new RuntimeRebindRule2());"));
}

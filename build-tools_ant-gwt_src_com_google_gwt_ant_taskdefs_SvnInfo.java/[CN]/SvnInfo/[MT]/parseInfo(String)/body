{
  String rootUrl=null;
  String branchUrl=null;
  String revision=null;
  LineNumberReader lnr=new LineNumberReader(new StringReader(svnInfo));
  try {
    for (String line=lnr.readLine(); line != null; line=lnr.readLine()) {
      Matcher m;
      if ((m=ROOT_PATTERN.matcher(line)) != null && m.matches()) {
        rootUrl=m.group(1);
      }
 else       if ((m=BRANCH_PATTERN.matcher(line)) != null && m.matches()) {
        branchUrl=m.group(1);
      }
 else       if ((m=REVISION_PATTERN.matcher(line)) != null && m.matches()) {
        revision=m.group(1);
      }
    }
  }
 catch (  IOException e) {
    throw new BuildException("Should never happen",e);
  }
  if (rootUrl == null) {
    throw new BuildException("svn info didn't get root URL: " + svnInfo);
  }
  if (branchUrl == null) {
    throw new BuildException("svn info didn't get branch URL: " + svnInfo);
  }
  if (revision == null) {
    throw new BuildException("svn info didn't get revision: " + svnInfo);
  }
  rootUrl=removeTrailingSlash(rootUrl);
  branchUrl=removeTrailingSlash(branchUrl);
  if (!branchUrl.startsWith(rootUrl)) {
    throw new BuildException("branch URL (" + branchUrl + ") and root URL ("+ rootUrl+ ") did not match");
  }
  String branch;
  if (branchUrl.length() == rootUrl.length()) {
    branch="";
  }
 else {
    branch=branchUrl.substring(rootUrl.length() + 1);
  }
  return new Info(branch,revision);
}

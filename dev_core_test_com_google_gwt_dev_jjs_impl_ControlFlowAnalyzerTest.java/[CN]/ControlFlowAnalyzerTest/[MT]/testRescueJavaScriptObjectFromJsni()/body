{
  sourceOracle.addOrReplace(new MockJavaResource("test.JsoIntf"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","public interface JsoIntf {","  public int getAny();","}");
    }
  }
);
  sourceOracle.addOrReplace(new MockJavaResource("test.UpRefIntf"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","public interface UpRefIntf {","  public int getFoo();","}");
    }
  }
);
  sourceOracle.addOrReplace(new MockJavaResource("test.NonImplementor"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","public class NonImplementor extends JavaScriptObject {","  protected NonImplementor() {}","  final public native int getFoo() /*-{ return 0; }-*/;","}");
    }
  }
);
  sourceOracle.addOrReplace(new MockJavaResource("test.VirtualUpRef"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","final public class VirtualUpRef extends NonImplementor implements UpRefIntf {","  protected VirtualUpRef() {}","  public static native VirtualUpRef create() /*-{ return  {}; }-*/;","}");
    }
  }
);
  sourceOracle.addOrReplace(new MockJavaResource("test.SingleJso"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","final public class SingleJso extends JavaScriptObject implements JsoIntf {","  protected SingleJso() {}","  public native int getAny() /*-{ return 1; }-*/;","  public static native JsoIntf returnsJsoIntf() /*-{ return {}; }-*/;","  public static native SingleJso returnsJso() /*-{ return {}; }-*/;","}");
    }
  }
);
  sourceOracle.addOrReplace(new MockJavaResource("test.Foo"){
    @Override public CharSequence getContent(){
      return Joiner.on("\n").join("package test;","import com.google.gwt.core.client.JavaScriptObject;","public class Foo {","  public static native JavaScriptObject returnsJso() /*-{ return {}; }-*/;","  public static native void assignsJsoField() /*-{ @test.Foo::jsoField = {}; }-*/;","  public static native void readsJsoField() /*-{ var x = @test.Foo::jsoField; }-*/;","  public static native void passesJsoParam() /*-{ @test.Foo::calledFromJsni(Lcom/google/gwt/core/client/JavaScriptObject;)({}); }-*/;","  private static JavaScriptObject jsoField = null;","  private static void calledFromJsni(JavaScriptObject arg) { }","}");
    }
  }
);
  addSnippetImport("test.Foo");
  analyzeSnippet("").assertOnlyInstantiatedTypes(Empty.STRINGS);
  analyzeSnippet("Foo.returnsJso();").assertOnlyInstantiatedTypes("JavaScriptObject","Object");
  analyzeSnippet("Foo.assignsJsoField();").assertOnlyInstantiatedTypes("JavaScriptObject","Object");
  analyzeSnippet("Foo.readsJsoField();").assertOnlyInstantiatedTypes(Empty.STRINGS);
  analyzeSnippet("Foo.passesJsoParam();").assertOnlyInstantiatedTypes("JavaScriptObject","Object");
  analyzeSnippet("SingleJso.returnsJso();").assertOnlyInstantiatedTypes("SingleJso","JavaScriptObject","Object","JsoIntf");
  analyzeSnippet("SingleJso.returnsJsoIntf();").assertOnlyInstantiatedTypes("SingleJso","JavaScriptObject","Object","JsoIntf");
  analyzeSnippet("VirtualUpRef.create().getFoo();").assertOnlyInstantiatedTypes("VirtualUpRef","NonImplementor","JavaScriptObject","Object","UpRefIntf");
  analyzeSnippet("VirtualUpRef.create().getFoo();").assertOnlyLiveFieldsAndMethods("VirtualUpRef.$clinit","VirtualUpRef.create","NonImplementor.$clinit","NonImplementor.getFoo","UpRefIntf.$clinit","JavaScriptObject.$clinit","EntryPoint.$clinit","EntryPoint.onModuleLoad","Object.$clinit");
}

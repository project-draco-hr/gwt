{
  JMethod original=methodCall.getTarget();
  JClassType underlyingType=(JClassType)methodCall.getInstance().getType().getUnderlyingType();
  JMethod mostSpecificOverride=program.typeOracle.findMostSpecificOverride(underlyingType,original);
  if (mostSpecificOverride == original || (original.getEnclosingType().isJavaLangObject() && mostSpecificOverride.isJsNative())) {
    return methodCall;
  }
  JMethodCall newCall=new JMethodCall(methodCall.getSourceInfo(),methodCall.getInstance(),mostSpecificOverride);
  newCall.addArgs(methodCall.getArgs());
  return newCall;
}

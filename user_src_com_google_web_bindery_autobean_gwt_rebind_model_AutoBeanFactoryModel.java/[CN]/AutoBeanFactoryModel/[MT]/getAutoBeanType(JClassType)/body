{
  beanType=ModelUtils.ensureBaseType(beanType);
  AutoBeanType toReturn=peers.get(beanType);
  if (toReturn == null) {
    AutoBeanType.Builder builder=new AutoBeanType.Builder();
    builder.setOwnerFactory(this);
    builder.setPeerType(beanType);
    builder.setMethods(computeMethods(beanType));
    builder.setInterceptor(findInterceptor(beanType));
    if (noWrapTypes != null) {
      for (      JClassType noWrap : noWrapTypes) {
        if (noWrap.isAssignableFrom(beanType)) {
          builder.setNoWrap(true);
          break;
        }
      }
    }
    toReturn=builder.build();
    peers.put(beanType,toReturn);
  }
  return toReturn;
}

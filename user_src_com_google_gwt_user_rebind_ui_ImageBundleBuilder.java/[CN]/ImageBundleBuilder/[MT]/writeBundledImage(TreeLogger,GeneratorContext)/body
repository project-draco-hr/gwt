{
  int nextLeft=0;
  int maxHeight=0;
  for (Iterator iter=orderedImageRects.iterator(); iter.hasNext(); ) {
    ImageRect imageRect=(ImageRect)iter.next();
    imageRect.left=nextLeft;
    nextLeft+=imageRect.width;
    if (imageRect.height > maxHeight) {
      maxHeight=imageRect.height;
    }
  }
  BufferedImage bundledImage=new BufferedImage(nextLeft,maxHeight,BufferedImage.TYPE_INT_ARGB_PRE);
  Graphics2D g2d=bundledImage.createGraphics();
  for (Iterator iter=orderedImageRects.iterator(); iter.hasNext(); ) {
    ImageRect imageRect=(ImageRect)iter.next();
    g2d.drawImage(imageRect.image,imageRect.left,0,null);
  }
  g2d.dispose();
  String strongName=Util.toHexString(md5.digest());
  String bundleFileType="png";
  String bundleFileName=strongName + ".cache." + bundleFileType;
  OutputStream outStream=context.tryCreateResource(logger,bundleFileName);
  if (outStream != null) {
    try {
      if (!ImageIO.write(bundledImage,bundleFileType,outStream)) {
        logger.log(TreeLogger.ERROR,"Unsupported output file type",null);
        throw new UnableToCompleteException();
      }
      context.commitResource(logger,outStream);
    }
 catch (    IOException e) {
      logger.log(TreeLogger.ERROR,"Failed while writing",e);
      throw new UnableToCompleteException();
    }
  }
 else {
    logger.log(TreeLogger.TRACE,"Generated image bundle file already exists; no need to rewrite it.",null);
  }
  return bundleFileName;
}

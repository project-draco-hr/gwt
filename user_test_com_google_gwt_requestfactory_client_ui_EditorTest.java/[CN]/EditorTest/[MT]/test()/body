{
  delayTestFinish(TEST_TIMEOUT);
  final SimpleFooEditor editor=new SimpleFooEditor();
  final SimpleFooDriver driver=GWT.create(SimpleFooDriver.class);
  driver.initialize(req,editor);
  final String[] paths=driver.getPaths();
  assertEquals(Arrays.asList("selfOneToManyField","selfOneToManyField.barField","barField"),Arrays.asList(paths));
  req.simpleFooRequest().findSimpleFooById(1L).with(paths).fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy response){
      SimpleFooRequest context=req.simpleFooRequest();
      driver.edit(response,context);
      assertSame(context,editor.barEditor().ctx);
      context.persistAndReturnSelf().using(response).with(paths).to(new Receiver<SimpleFooProxy>(){
        @Override public void onSuccess(        SimpleFooProxy response){
          assertEquals("EditorFooTest",response.getUserName());
          assertEquals("EditorBarTest",response.getBarField().getUserName());
          finishTestAndReset();
        }
      }
);
      assertEquals("GWT",editor.userName.getValue());
      assertEquals("FOO",editor.barEditor().userName.getValue());
      assertEquals("FOO",editor.barName.getValue());
      editor.userName.setValue("EditorFooTest");
      editor.barEditor().userName.setValue("EditorBarTest");
      editor.barName.setValue("ignored");
      driver.flush().fire();
    }
  }
);
}

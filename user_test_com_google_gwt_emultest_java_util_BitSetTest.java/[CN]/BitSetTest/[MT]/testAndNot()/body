{
  Pattern multiplesOf2Not3=new Pattern(){
    @Override public boolean contains(    int i){
      return i % 2 == 0 && i % 3 != 0;
    }
  }
;
  BitSet setA=createSetOfMultiples(2);
  BitSet setB=createSetOfMultiples(3);
  setA.andNot(setB);
  checkPattern(setA,multiplesOf2Not3);
  setA.andNot(new BitSet());
  checkPattern(setA,multiplesOf2Not3);
  BitSet trueSet=new BitSet(TEST_SIZE * 2);
  trueSet.set(0,TEST_SIZE * 2);
  setA.andNot(trueSet);
  assertTrue(setA.isEmpty());
  setA=(BitSet)setB.clone();
  setB.andNot(setB);
  assertTrue(setB.isEmpty());
  setA.andNot((BitSet)setA.clone());
  assertTrue(setA.isEmpty());
  setA=new BitSet();
  setA.set(2);
  setB=new BitSet();
  setB.set(1);
  setB.set(3);
  setA.andNot(setB);
  assertTrue(setA.get(2));
  assertEquals(1,setA.cardinality());
}

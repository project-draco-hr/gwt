{
  BitSet set=new BitSet();
  set.set(7);
  set.set(50);
  set.set(BIG_NUMBER);
  set.clear(0,BIG_NUMBER);
  checkValues(set,BIG_NUMBER);
  set.clear(0,BIG_NUMBER + 1);
  assertTrue(set.isEmpty());
  set.set(0,65);
  checkRange(set,0,65);
  set.clear(0,63);
  checkRange(set,63,65);
  set.clear(63,65);
  assertTrue(set.isEmpty());
  set.set(0,128);
  set.clear(0,64);
  checkRange(set,64,128);
  set.clear(0,129);
  assertTrue(set.isEmpty());
  set.set(0,65);
  checkRange(set,0,65);
  set.clear(0,16);
  checkRange(set,16,65);
  set.set(0,16);
  checkRange(set,0,65);
  set.clear(5,5);
  set.clear(7,14);
  set.clear(15,42);
  set.clear(43,55);
  set.clear(58,62);
  set.clear(BIG_NUMBER,BIG_NUMBER);
  set.clear(BIG_NUMBER,BIG_NUMBER + 1);
  checkValues(set,0,1,2,3,4,5,6,14,42,55,56,57,62,63,64);
  set.clear(0,65);
  assertTrue(set.isEmpty());
  set.set(0,33);
  checkRange(set,0,33);
  set.clear(0,8);
  checkRange(set,8,33);
  for (int i=0; i < 33; i++) {
    set.clear(i,i);
    assertEquals(25,set.cardinality());
    set.set(i,i);
    assertEquals(25,set.cardinality());
  }
  for (int i=0; i < 65; i++) {
    set.set(0,128);
    set.clear(i,128 - i);
    checkRange(set,0,i,128 - i,128);
  }
  set.clear(0,128);
  assertTrue(set.isEmpty());
  set.set(7,100);
  checkRange(set,7,100);
  set=new BitSet();
  set.set(BIG_NUMBER,BIG_NUMBER);
  assertEquals(0,set.cardinality());
  set.set(BIG_NUMBER,BIG_NUMBER + 1);
  checkRange(set,BIG_NUMBER,BIG_NUMBER + 1);
  set.clear(BIG_NUMBER,BIG_NUMBER);
  checkValues(set,BIG_NUMBER);
  set.clear(BIG_NUMBER,BIG_NUMBER + 1);
  assertEquals(0,set.cardinality());
  set=new BitSet();
  set.set(10,12);
  set.clear(11,1000);
  checkValues(set,10);
  set=new BitSet();
  set.set(10,12);
  set.clear(0,10);
  set.set(BIG_NUMBER,BIG_NUMBER);
  checkValues(set,10,11);
  set.clear(10,12);
  assertTrue(set.isEmpty());
  set=new BitSet();
  set.set(1,20);
  set.clear(5,10);
  checkRange(set,1,5,10,20);
  set=new BitSet();
  set.set(1,10);
  set.clear(5,15);
  checkRange(set,1,5);
  try {
    set.clear(-1,2);
    fail("exception expected");
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  try {
    set.clear(3,1);
    fail("expected exception");
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  set.clear(2,2);
  try {
    set.set(-1,2);
    fail("exception expected");
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  try {
    set.set(3,1);
    fail("exception expected");
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  set.set(2,2);
}

{
  try {
    for (    Entry<String,Collection<String>> property : properties.asMap().entrySet()) {
      String propertyName=property.getKey();
      Collection<String> propertyValues=property.getValue();
      BindingProperty bindingProp=module.getProperties().findBindingProp(propertyName);
      ConfigurationProperty configProp=module.getProperties().findConfigProp(propertyName);
      if (bindingProp != null) {
        bindingProp.setValues(bindingProp.getRootCondition(),propertyValues.toArray(new String[propertyValues.size()]));
      }
 else       if (configProp != null) {
        if (configProp.allowsMultipleValues()) {
          configProp.clear();
          for (          String propertyValue : propertyValues) {
            configProp.addValue(propertyValue);
          }
        }
 else {
          String firstValue=propertyValues.iterator().next();
          if (propertyValues.size() > 1) {
            logger.log(TreeLogger.ERROR,"Attemp to set multiple values to a single-valued configuration property '" + propertyName + "'.");
            return false;
          }
          configProp.setValue(firstValue);
        }
      }
 else {
        logger.log(TreeLogger.ERROR,"Unknown property: " + propertyName);
        return false;
      }
    }
  }
 catch (  IllegalArgumentException e) {
    logger.log(TreeLogger.ERROR,e.getMessage());
    return false;
  }
  return true;
}

{
  String escapedFile=Jsni.escapeQuotesAndSlashes(file);
  StringBuffer sb=new StringBuffer();
  sb.append(" static {");
  for (int i=0; i < methods.length; ++i) {
    JMethod method=methods[i];
    JsBlock jsniBody=parsedJsByMethod.get(method);
    if (jsniBody == null) {
      continue;
    }
    JParameter[] params=method.getParameters();
    String paramNamesArray=getParamNamesArrayExpr(params);
    final String jsTry="try ";
    final String jsCatch=" catch (e) {\\n" + "  __static[\\\"@" + Jsni.JAVASCRIPTHOST_NAME + "::exceptionCaught"+ "(Ljava/lang/Object;)\\\"]"+ "(e == null ? null : e);\\n"+ "}\\n";
    String js=jsTry + Jsni.generateEscapedJavaScriptForHostedMode(jsniBody) + jsCatch;
    String jsniSig=Jsni.getJsniSignature(method);
    int bodyStart=method.getBodyStart();
    int line=Jsni.countNewlines(source,0,bodyStart) + 1;
    sb.append("  " + Jsni.JAVASCRIPTHOST_NAME + ".createNative(\""+ escapedFile+ "\", "+ line+ ", "+ "\"@"+ jsniSig+ "\", "+ paramNamesArray+ ", \""+ js+ "\");");
  }
  sb.append("}");
  return sb.toString().toCharArray();
}

{
  Resources resources=GWT.create(Resources.class);
  mainMenu=new CellList<MainMenuItem>(new MainMenuItemCell(),resources);
  mainMenu.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.DISABLED);
  mainMenu.setVisibleRange(0,30);
  final List<MainMenuItem> menuItems=new ArrayList<MainMenuItem>();
  menuItems.add(new MainMenuItem("Task List",new TaskListPlace(false)){
    @Override public boolean mapsToPlace(    Place p){
      return p instanceof TaskListPlace;
    }
  }
);
  menuItems.add(new MainMenuItem("Add Task",TaskEditPlace.getTaskCreatePlace()));
  mainMenu.setRowData(menuItems);
  final SingleSelectionModel<MainMenuItem> selectionModel=new SingleSelectionModel<MainMenuItem>();
  selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler(){
    public void onSelectionChange(    SelectionChangeEvent event){
      MainMenuItem selected=selectionModel.getSelectedObject();
      if (selected != null) {
        placeController.goTo(selected.getPlace());
      }
    }
  }
);
  mainMenu.setSelectionModel(selectionModel);
  bus.addHandler(PlaceChangeEvent.TYPE,new PlaceChangeEvent.Handler(){
    public void onPlaceChange(    PlaceChangeEvent event){
      Place place=event.getNewPlace();
      for (      MainMenuItem menuItem : menuItems) {
        if (menuItem.mapsToPlace(place)) {
          selectionModel.setSelected(menuItem,true);
          return;
        }
      }
      selectionModel.setSelected(null,true);
    }
  }
);
  initWidget(uiBinder.createAndBindUi(this));
  pieChart=PieChart.createIfSupported();
  String chartUrlValue=Window.Location.getParameter(CHART_URL_ATTRIBUTE);
  if (chartUrlValue != null && chartUrlValue.startsWith("f")) {
    leftNav.remove(1);
    leftNav.remove(0);
  }
 else   if (pieChart == null) {
    pieChartContainer.setWidget(new Label("Try upgrading to a modern browser to enable charts."));
  }
 else {
    pieChart.setWidth("90%");
    pieChart.setHeight("90%");
    pieChart.getElement().getStyle().setMarginLeft(5.0,Unit.PCT);
    pieChart.getElement().getStyle().setMarginTop(5.0,Unit.PCT);
    pieChartContainer.setWidget(pieChart);
  }
  setAddButtonHandler(null);
  contentContainer.add(taskListView);
  contentContainer.add(taskEditView);
  contentContainer.setAnimationDuration(800);
  bus.addHandler(TaskListUpdateEvent.getType(),new TaskListActivity.TaskListUpdateHandler(){
    public void onTaskListUpdated(    TaskListUpdateEvent event){
      updatePieChart(event.getTasks());
    }
  }
);
  helpLink.addClickHandler(new ClickHandler(){
    public void onClick(    ClickEvent event){
      showTutorial();
    }
  }
);
}

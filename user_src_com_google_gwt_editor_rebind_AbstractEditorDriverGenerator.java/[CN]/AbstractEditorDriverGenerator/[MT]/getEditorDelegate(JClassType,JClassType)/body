{
  String delegateSimpleName=BinaryName.getClassName(editor.getQualifiedBinaryName()).replace("_","_1").replace('$','_') + "_" + BinaryName.getShortClassName(Name.getBinaryNameForClass(getEditorDelegateType()));
  String packageName=editor.getPackage().getName();
  PrintWriter pw=context.tryCreate(logger,packageName,delegateSimpleName);
  if (pw != null) {
    ClassSourceFileComposerFactory factory=new ClassSourceFileComposerFactory(packageName,delegateSimpleName);
    factory.setSuperclass(String.format("%s<%s, %s>",Name.getSourceNameForClass(getEditorDelegateType()),proxy.getQualifiedSourceName(),editor.getQualifiedSourceName()));
    SourceWriter sw=factory.createSourceWriter(context,pw);
    EditorData[] data=model.getEditorData(editor);
    sw.println("private %s editor;",editor.getQualifiedSourceName());
    sw.println("protected void setEditor(%s editor) {this.editor=editor;}",editor.getQualifiedSourceName());
    sw.println("private %s object;",proxy.getQualifiedSourceName());
    sw.println("public %s getObject() {return object;}",proxy.getQualifiedSourceName());
    sw.println("protected void setObject(%s object) {this.object=object;}",proxy.getQualifiedSourceName());
    for (    EditorData d : data) {
      if (d.isBeanEditor()) {
        sw.println("%s<%s, %s> %sDelegate;",Name.getSourceNameForClass(getEditorDelegateType()),d.getEditedType().getQualifiedSourceName(),d.getEditorType().getQualifiedSourceName(),d.getPropertyName());
      }
    }
    sw.println("protected void attachSubEditors() {");
    sw.indent();
    for (    EditorData d : data) {
      if (d.isBeanEditor() && !d.isLeafValueEditor() || d.isValueAwareEditor()) {
        String subDelegateType=getEditorDelegate(d.getEditedType(),d.getEditorType());
        sw.println("if (editor.%s != null) {",d.getSimpleExpression());
        sw.indent();
        sw.println("%sDelegate = new %s();",d.getPropertyName(),subDelegateType);
        writeDelegateInitialization(sw,d);
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void flushSubEditors() {");
    sw.indent();
    for (    EditorData d : data) {
      if (d.isBeanEditor()) {
        sw.println("if (%1$sDelegate != null) { %1$sDelegate.flush();",d.getPropertyName());
        if (d.getSetterName() != null) {
          String mutableObjectExpression=mutableObjectExpression(String.format("getObject()%s",d.getBeanOwnerExpression()));
          sw.println("%s.%s(%sDelegate.getObject());",mutableObjectExpression,d.getSetterName(),d.getPropertyName());
        }
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void flushValues() {");
    sw.indent();
    for (    EditorData d : data) {
      if ((d.isLeafValueEditor() && !d.isValueAwareEditor()) && d.getSetterName() != null) {
        String mutableObjectExpression=mutableObjectExpression(String.format("getObject()%s",d.getBeanOwnerExpression()));
        sw.println("if (editor.%1$s != null)" + " %2$s.%3$s(editor.%1$s.getValue());",d.getSimpleExpression(),mutableObjectExpression,d.getSetterName());
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("public static void traverseEditor(%s editor," + " String prefix, %s<String> paths) {",editor.getQualifiedSourceName(),List.class.getName());
    sw.indent();
    for (    EditorData d : data) {
      if (d.isBeanEditor() || d.isDeclaredPathNested()) {
        sw.println("if (editor.%s != null) {",d.getSimpleExpression());
        sw.indent();
        sw.println("String localPath = appendPath(prefix, \"%s\");",d.getDeclaredPath());
        sw.println("paths.add(localPath);");
        if (d.isBeanEditor()) {
          sw.println("%s.traverseEditor(editor.%s, localPath, paths);",getEditorDelegate(d.getEditedType(),d.getEditorType()),d.getSimpleExpression());
        }
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void pushValues() {");
    sw.indent();
    for (    EditorData d : data) {
      if (d.isLeafValueEditor() && !d.isValueAwareEditor()) {
        sw.println("if (editor.%1$s != null)" + " editor.%1$s.setValue(getObject()%2$s.%3$s());",d.getSimpleExpression(),d.getBeanOwnerExpression(),d.getGetterName());
      }
    }
    sw.outdent();
    sw.println("}");
    sw.commit(logger);
  }
  return packageName + "." + delegateSimpleName;
}

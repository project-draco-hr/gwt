{
  JClassType edited=delegateData.getEditedType();
  JClassType editor=delegateData.getEditorType();
  Map<EditorData,String> delegateFields=new IdentityHashMap<EditorData,String>();
  NameFactory nameFactory=new NameFactory();
  StringBuilder maybeParameterizedName=new StringBuilder(BinaryName.getClassName(editor.getQualifiedBinaryName()));
  if (editor.isParameterized() != null) {
    for (    JClassType type : editor.isParameterized().getTypeArgs()) {
      maybeParameterizedName.append("$").append(type.getQualifiedBinaryName());
    }
  }
  String delegateSimpleName=String.format("%s_%s",escapedBinaryName(maybeParameterizedName.toString()),BinaryName.getShortClassName(Name.getBinaryNameForClass(getEditorDelegateType())));
  String packageName=editor.getPackage().getName();
  PrintWriter pw=context.tryCreate(logger,packageName,delegateSimpleName);
  if (pw != null) {
    ClassSourceFileComposerFactory factory=new ClassSourceFileComposerFactory(packageName,delegateSimpleName);
    factory.setSuperclass(String.format("%s",Name.getSourceNameForClass(getEditorDelegateType())));
    SourceWriter sw=factory.createSourceWriter(context,pw);
    EditorData[] data=model.getEditorData(editor);
    sw.println("private %s editor;",editor.getQualifiedSourceName());
    sw.println("protected %s getEditor() {return editor;}",editor.getQualifiedSourceName());
    sw.println("protected void setEditor(%s editor) {this.editor=(%s)editor;}",Editor.class.getCanonicalName(),editor.getQualifiedSourceName());
    sw.println("private %s object;",edited.getQualifiedSourceName());
    sw.println("public %s getObject() {return object;}",edited.getQualifiedSourceName());
    sw.println("protected void setObject(Object object) {this.object=(%s)object;}",edited.getQualifiedSourceName());
    if (delegateData.isCompositeEditor()) {
      sw.println("protected %s createComposedDelegate() {",Name.getSourceNameForClass(this.getEditorDelegateType()));
      sw.indentln("return new %s();",getEditorDelegate(delegateData.getComposedData()));
      sw.println("}");
    }
    for (    EditorData d : data) {
      if (d.isDelegateRequired()) {
        String fieldName=nameFactory.createName(d.getPropertyName() + "Delegate");
        delegateFields.put(d,fieldName);
        sw.println("%s %s;",Name.getSourceNameForClass(getEditorDelegateType()),fieldName);
      }
    }
    sw.println("protected void attachSubEditors(%s delegateMap) {",DelegateMap.class.getCanonicalName());
    sw.indent();
    for (    EditorData d : data) {
      String subDelegateType=getEditorDelegate(d);
      sw.println("if (editor.%s != null) {",d.getSimpleExpression());
      sw.indent();
      if (d.isDelegateRequired()) {
        sw.println("%s = new %s();",delegateFields.get(d),subDelegateType);
        writeDelegateInitialization(sw,d,delegateFields);
        sw.println("delegateMap.put(%1$s.getObject(), %1$s);",delegateFields.get(d));
      }
 else       if (d.isLeafValueEditor()) {
        sw.println("if (%s) {",d.getBeanOwnerGuard("getObject()"));
        sw.indent();
        sw.println("%s value = getObject()%s%s;",d.getEditedType().getQualifiedSourceName(),d.getBeanOwnerExpression(),d.getGetterExpression());
        sw.println("editor.%s.setValue(value);",d.getSimpleExpression());
        sw.println("simpleEditors.put(\"%s\", editor.%s);",d.getDeclaredPath(),d.getSimpleExpression());
        sw.println("lastLeafValues.put(\"%s\", value);",d.getDeclaredPath());
        sw.outdent();
        sw.println("}");
      }
      sw.outdent();
      sw.println("}");
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void flushSubEditors(%s errorAccumulator) {",List.class.getCanonicalName());
    sw.indent();
    for (    EditorData d : data) {
      String mutableObjectExpression;
      if (d.getBeanOwnerExpression().length() > 0) {
        mutableObjectExpression=mutableObjectExpression(d,String.format("(getObject()%s)",d.getBeanOwnerExpression()));
      }
 else {
        mutableObjectExpression="getObject()";
      }
      if (d.getSetterName() != null && d.isLeafValueEditor()) {
        sw.println("if (editor.%s != null && %s) {",d.getSimpleExpression(),d.getBeanOwnerGuard("getObject()"));
        sw.indent();
        if (d.isDelegateRequired()) {
          sw.println("%s.flush(errorAccumulator);",delegateFields.get(d));
          sw.println("%s.%s((%s)%s.getObject());",mutableObjectExpression,d.getSetterName(),d.getEditedType().getQualifiedSourceName(),delegateFields.get(d));
        }
 else {
          sw.println("%s.%s(editor.%s.getValue());",mutableObjectExpression,d.getSetterName(),d.getSimpleExpression());
        }
        sw.outdent();
        sw.println("}");
      }
 else       if (d.isDelegateRequired()) {
        sw.println("if (%s != null && %s) {",delegateFields.get(d),d.getBeanOwnerGuard("getObject()"));
        sw.indent();
        sw.println("%s.flush(errorAccumulator);",delegateFields.get(d));
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void flushSubEditorErrors(%s errorAccumulator) {",List.class.getCanonicalName());
    sw.indent();
    for (    EditorData d : data) {
      if (d.isDelegateRequired()) {
        sw.println("if (%1$s != null) %1$s.flushErrors(errorAccumulator);",delegateFields.get(d));
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected boolean hasSubEditorsWithoutDelegates() {");
    boolean hasSubEditorsWithoutDelegates=false;
    for (    EditorData d : data) {
      if (!d.isDelegateRequired()) {
        hasSubEditorsWithoutDelegates=true;
        break;
      }
    }
    sw.indentln("return %s;",hasSubEditorsWithoutDelegates ? "true" : "false");
    sw.println("}");
    sw.println("protected boolean isDirtyCheckLeaves() {");
    sw.indent();
    if (hasSubEditorsWithoutDelegates) {
      for (      EditorData d : data) {
        if (!d.isDelegateRequired()) {
          sw.println("if (editor.%s != null &&",d.getSimpleExpression());
          sw.indentln("!equals(editor.%s.getValue(), lastLeafValues.get(\"%s\"))) {",d.getSimpleExpression(),d.getDeclaredPath());
          sw.indentln("return true;");
          sw.println("}");
        }
      }
    }
    sw.println("return false;");
    sw.outdent();
    sw.println("}");
    sw.println("protected void refreshEditors() {",DelegateMap.class.getCanonicalName());
    sw.indent();
    for (    EditorData d : data) {
      if (d.isDelegateRequired()) {
        sw.println("if (%s != null) {",delegateFields.get(d));
        sw.indent();
        sw.println("if (%s) {",d.getBeanOwnerGuard("getObject()"));
        sw.indentln("%s.refresh(getObject()%s%s);",delegateFields.get(d),d.getBeanOwnerExpression(),d.getGetterExpression());
        sw.println("} else { %s.refresh(null); }",delegateFields.get(d));
        sw.outdent();
        sw.println("}");
      }
 else       if (d.isLeafValueEditor()) {
        sw.println("if (editor.%s != null) {",d.getSimpleExpression());
        sw.indent();
        sw.println("if (%s) {",d.getBeanOwnerGuard("getObject()"));
        sw.indent();
        sw.println("%s value = getObject()%s%s;",d.getEditedType().getQualifiedSourceName(),d.getBeanOwnerExpression(),d.getGetterExpression());
        sw.println("editor.%s.setValue(value);",d.getSimpleExpression());
        sw.println("lastLeafValues.put(\"%s\", value);",d.getDeclaredPath());
        sw.outdent();
        sw.println("} else {");
        sw.indent();
        sw.println("editor.%s.setValue(null);",d.getSimpleExpression());
        sw.println("lastLeafValues.put(\"%s\", null);",d.getDeclaredPath());
        sw.outdent();
        sw.println("}");
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.println("protected void traverse(%s paths) {",List.class.getCanonicalName());
    sw.indentln("traverseEditor(getEditor(), \"\", paths);");
    sw.println("}");
    sw.println("public static void traverseEditor(%s editor," + " String prefix, %s<String> paths) {",editor.getQualifiedSourceName(),List.class.getName());
    sw.indent();
    for (    EditorData d : data) {
      if (d.isDelegateRequired() || d.isDeclaredPathNested() || d.isCompositeEditor()) {
        sw.println("if (editor.%s != null) {",d.getSimpleExpression());
        sw.indent();
        sw.println("String localPath = appendPath(prefix, \"%s\");",d.getDeclaredPath());
        sw.println("paths.add(localPath);");
        if (d.isDelegateRequired()) {
          sw.println("%s.traverseEditor(editor.%s, localPath, paths);",getEditorDelegate(d),d.getSimpleExpression());
        }
        if (d.isCompositeEditor()) {
          sw.println("%s.traverseEditor(editor.%s.createEditorForTraversal(), localPath, paths);",getEditorDelegate(d.getComposedData()),d.getSimpleExpression());
        }
        sw.outdent();
        sw.println("}");
      }
    }
    sw.outdent();
    sw.println("}");
    sw.commit(logger);
  }
  return packageName + "." + delegateSimpleName;
}

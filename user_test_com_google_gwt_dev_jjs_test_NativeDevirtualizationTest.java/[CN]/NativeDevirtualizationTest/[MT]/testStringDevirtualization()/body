{
  String x="hi";
  assertEquals("hi",x);
  assertEquals("hi",x.toString());
  x=new String();
  assertEquals("",x);
  x=new String(x);
  assertEquals("",x);
  x=new String("hi");
  assertEquals("hi",x);
  assertEquals('i',x.charAt(1));
  assertEquals("hiyay",x.concat("yay"));
  assertEquals("hihi",x + x);
  assertEquals("blahabctruefalsenullc27",("blah" + String.valueOf(new char[]{'a','b','c'}) + true+ false+ null+ 'c'+ 27));
  Object s=HELLO_WORLD;
  assertEquals(String.class,s.getClass());
  assertEquals(HELLO_WORLD,s.toString());
  assertEquals(HashCodes.hashCodeForString(HELLO_WORLD),s.hashCode());
  assertTrue(s.equals(HELLO_WORLD));
  assertTrue(HELLO_WORLD.equals(s));
  assertFalse(s.equals(""));
  assertFalse("".equals(s));
  assertEquals(HELLO_WORLD,s.toString());
  assertTrue(s instanceof String);
  Comparable b=HELLO_WORLD;
  assertEquals(String.class,b.getClass());
  assertEquals(HELLO_WORLD,b.toString());
  assertEquals(HashCodes.hashCodeForString(HELLO_WORLD),b.hashCode());
  assertTrue(((Comparable)HELLO_WORLD).compareTo(b) == 0);
  assertTrue(b.compareTo(HELLO_WORLD) == 0);
  assertTrue(((Comparable)"A").compareTo(b) < 0);
  assertTrue(b.compareTo("A") > 0);
  assertTrue(((Comparable)"Z").compareTo(b) > 0);
  assertTrue(b.compareTo("Z") < 0);
  assertTrue(b instanceof String);
  CharSequence c=HELLO_WORLD;
  assertEquals(String.class,c.getClass());
  assertEquals(HELLO_WORLD,c.toString());
  assertEquals(HashCodes.hashCodeForString(HELLO_WORLD),c.hashCode());
  assertEquals('e',c.charAt(1));
  assertEquals(13,c.length());
  assertEquals("ello",c.subSequence(1,5));
  assertTrue(c instanceof String);
}

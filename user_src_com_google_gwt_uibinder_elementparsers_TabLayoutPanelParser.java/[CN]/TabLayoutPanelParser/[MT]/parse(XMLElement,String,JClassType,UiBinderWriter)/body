{
  String size=panelElem.consumeRequiredDoubleAttribute("barHeight");
  JEnumType unitEnumType=writer.getOracle().findType(Unit.class.getCanonicalName()).isEnum();
  String unit=panelElem.consumeAttributeWithDefault("barUnit",String.format("%s.%s",unitEnumType.getQualifiedSourceName(),"PX"),unitEnumType);
  writer.setFieldInitializerAsConstructor(fieldName,size,unit);
  for (  XMLElement tabElem : panelElem.consumeChildElements()) {
    if (!isElementType(panelElem,tabElem,TAB)) {
      writer.die(tabElem,"Only <%s:%s> children are allowed.",panelElem.getPrefix(),TAB);
    }
    Children children=findChildren(tabElem,writer);
    if (children.body == null) {
      writer.die(tabElem,"Must have a child widget");
    }
    if (!writer.isWidgetElement(children.body)) {
      writer.die(children.body,"Must be a widget");
    }
    FieldWriter childField=writer.parseElementToField(children.body);
    if (children.header != null) {
      HtmlInterpreter htmlInt=HtmlInterpreter.newInterpreterForUiObject(writer,fieldName);
      String html=children.header.consumeInnerHtml(htmlInt);
      writer.addStatement("%s.add(%s, %s, true);",fieldName,childField.getNextReference(),writer.declareTemplateCall(html,fieldName));
    }
 else     if (children.customHeader != null) {
      XMLElement headerElement=children.customHeader.consumeSingleChildElement();
      if (!writer.isWidgetElement(headerElement)) {
        writer.die(headerElement,"Is not a widget");
      }
      FieldWriter headerField=writer.parseElementToField(headerElement);
      writer.addStatement("%s.add(%s, %s);",fieldName,childField.getNextReference(),headerField.getNextReference());
    }
 else {
      writer.die(tabElem,"Requires either a <%1$s:%2$s> or <%1$s:%3$s>",tabElem.getPrefix(),HEADER,CUSTOM);
    }
  }
}

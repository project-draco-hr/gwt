{
  final Children children=new Children();
  elem.consumeChildElements(new XMLElement.Interpreter<Boolean>(){
    public Boolean interpretElement(    XMLElement child) throws UnableToCompleteException {
      if (isElementType(elem,child,HEADER)) {
        assertFirstHeader();
        children.header=child;
        return true;
      }
      if (isElementType(elem,child,CUSTOM)) {
        assertFirstHeader();
        children.customHeader=child;
        return true;
      }
      if (children.body != null) {
        writer.die(children.body,"May have only one body element");
      }
      children.body=child;
      return true;
    }
    void assertFirstHeader() throws UnableToCompleteException {
      if (children.header != null || children.customHeader != null) {
        writer.die(elem,"May have only one <%1$s:header> " + "or <%1$s:customHeader>",elem.getPrefix());
      }
    }
  }
);
  return children;
}

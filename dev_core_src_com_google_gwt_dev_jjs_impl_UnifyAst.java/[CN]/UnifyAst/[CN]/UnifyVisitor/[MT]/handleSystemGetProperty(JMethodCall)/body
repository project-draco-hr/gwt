{
  assert(gwtGetPropertyCall.getArgs().size() == 1 || gwtGetPropertyCall.getArgs().size() == 2);
  JExpression propertyNameExpression=gwtGetPropertyCall.getArgs().get(0);
  boolean defaultVersionCalled=gwtGetPropertyCall.getArgs().size() == 2;
  JExpression defaultValueExpression=defaultVersionCalled ? gwtGetPropertyCall.getArgs().get(1) : null;
  if (!(propertyNameExpression instanceof JStringLiteral)) {
    error(gwtGetPropertyCall,"Only string constants may be used as property name in System.getProperty()");
    return null;
  }
  String propertyName=((JStringLiteral)propertyNameExpression).getValue();
  if (!defaultVersionCalled && !isPropertyDefined(propertyName)) {
    error(gwtGetPropertyCall,"Property '" + propertyName + "' is not defined.");
    return null;
  }
  if (isMultivaluedProperty(propertyName)) {
    error(gwtGetPropertyCall,"Property '" + propertyName + "' is multivalued. "+ "Multivalued properties are not supported by System.getProperty().");
    return null;
  }
  if (defaultValueExpression != null) {
    defaultValueExpression=accept(defaultValueExpression);
  }
  return JPermutationDependentValue.createRuntimeProperty(program,gwtGetPropertyCall.getSourceInfo(),propertyName,defaultValueExpression);
}

{
  assert(x.getArgs().size() == 1);
  JExpression arg=x.getArgs().get(0);
  if (!(arg instanceof JStringLiteral)) {
    error(x,"Only string literals may be used as arguments to Impl.getNameOf()");
    return null;
  }
  JStringLiteral stringLiteral=(JStringLiteral)arg;
  String stringValue=stringLiteral.getValue();
  JNode node=null;
  JsniRef ref=JsniRef.parse(stringValue);
  if (ref != null) {
    searchForType(ref.className());
    node=JsniRefLookup.findJsniRefTarget(ref,program,new JsniRefLookup.ErrorReporter(){
      public void reportError(      String errMsg){
        error(x,errMsg);
      }
    }
);
  }
 else {
    String typeName=stringValue.charAt(0) == '@' ? stringValue.substring(1) : stringValue;
    node=searchForType(typeName);
  }
  if (node == null) {
    return null;
  }
 else {
    return new JNameOf(x.getSourceInfo(),program.getTypeJavaLangString(),(HasName)node);
  }
}

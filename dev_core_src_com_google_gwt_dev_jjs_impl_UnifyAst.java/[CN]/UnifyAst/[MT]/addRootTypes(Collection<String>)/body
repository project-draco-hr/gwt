{
  List<String> binaryTypeNames=new ArrayList<String>();
  for (  String sourceTypeName : sourceTypeNames) {
    JDeclaredType type=internalFindType(sourceTypeName,sourceNameBasedTypeLocator,true);
    binaryTypeNames.add(type.getName());
    if (type != null && program.typeOracle.isInteropEnabled() && (isJsType(type) || hasAnyExports(type))) {
      instantiate(type);
      for (      JField field : type.getFields()) {
        flowInto(field);
      }
      for (      JMethod method : type.getMethods()) {
        flowInto(method);
      }
    }
  }
  minimalRebuildCache.setRootTypeNames(binaryTypeNames);
  if (errorsFound) {
    throw new UnableToCompleteException();
  }
}

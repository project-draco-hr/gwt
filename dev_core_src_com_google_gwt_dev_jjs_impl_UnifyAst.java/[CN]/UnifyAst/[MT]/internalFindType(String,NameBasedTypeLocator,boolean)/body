{
  if (nameBasedTypeLocator.resolvedTypeIsAvailable(typeName)) {
    return nameBasedTypeLocator.getResolvedType(typeName);
  }
  if (nameBasedTypeLocator.sourceCompilationUnitIsAvailable(typeName)) {
    assimilateSourceUnit(nameBasedTypeLocator.getCompilationUnitFromSource(typeName),reportErrors);
    return nameBasedTypeLocator.getResolvedType(typeName);
  }
  if (reportErrors) {
    if (nameBasedTypeLocator.hasCompileErrors(typeName)) {
      TreeLogger branch=logger.branch(TreeLogger.ERROR,String.format("Type %s could not be referenced because it previously failed to " + "compile with errors:",typeName));
      nameBasedTypeLocator.logErrorTrace(branch,TreeLogger.ERROR,typeName);
    }
 else {
      logger.log(TreeLogger.ERROR,String.format("Could not find %s in types compiled from source. Is the source glob too strict?",typeName));
    }
    errorsFound=true;
  }
  return null;
}

{
  if (method.getSpecialization() == null) {
    return;
  }
  Specialization specialization=method.getSpecialization();
  if (specialization.getParams() == null) {
    logger.log(Type.ERROR,"Missing 'params' attribute at @SpecializeMethod for method " + method.getQualifiedName());
    errorsFound=true;
    return;
  }
  List<JType> resolvedParams=translate(specialization.getParams());
  JType resolvedReturn=translate(specialization.getReturns());
  String targetMethodSignature=JjsUtils.computeSignature(specialization.getTarget(),resolvedParams,resolvedReturn,false);
  JMethod targetMethod=JMethod.getExternalizedMethod(method.getEnclosingType().getName(),targetMethodSignature,false);
  JMethod resolvedTargetMethod=translate(method.getSourceInfo(),targetMethod);
  if (resolvedTargetMethod.isExternal()) {
    error(method.getSourceInfo(),"Unable to locate @SpecializeMethod target " + targetMethodSignature + " for method "+ method.getQualifiedName());
    return;
  }
  flowInto(resolvedTargetMethod);
  specialization.resolve(resolvedParams,resolvedReturn,resolvedTargetMethod);
}

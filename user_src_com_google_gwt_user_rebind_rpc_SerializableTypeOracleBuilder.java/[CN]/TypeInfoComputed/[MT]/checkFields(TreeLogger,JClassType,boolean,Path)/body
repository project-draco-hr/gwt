{
  TypeInfoComputed typeInfo=getTypeInfoComputed(classOrInterface,parent);
  if (classOrInterface.isEnum() != null) {
    return true;
  }
  JClassType superType=classOrInterface.getSuperclass();
  if (superType != null && getTypeInfoComputed(superType,parent).isDeclaredSerializable()) {
    boolean superTypeOk=checkFields(logger,superType,isSpeculative,parent);
    if (!superTypeOk && !typeInfo.isDirectlySerializable()) {
      return false;
    }
  }
  return checkDeclaredFields(logger,typeInfo,isSpeculative,parent);
}

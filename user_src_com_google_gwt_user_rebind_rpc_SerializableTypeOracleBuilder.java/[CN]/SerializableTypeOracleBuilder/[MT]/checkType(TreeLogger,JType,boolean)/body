{
  if (type == null || type.isPrimitive() != null) {
    return;
  }
  TreeLogger localLogger=logger.branch(TreeLogger.DEBUG,type.getParameterizedQualifiedSourceName(),null);
  MetaTypeInfo mti=getMetaTypeInfo(type);
  TypeState state=mti.getState();
  if (state == SerializableTypeOracleBuilder.CHECK_FAILED) {
    logReasonsForUnserializability(localLogger,mti);
    return;
  }
 else   if (state == SerializableTypeOracleBuilder.CHECK_IN_PROGRESS) {
    localLogger.branch(TreeLogger.DEBUG,"'" + type.getParameterizedQualifiedSourceName() + "' is being analyzed; skipping",null);
    return;
  }
 else   if (state == SerializableTypeOracleBuilder.CHECK_SUCCEEDED) {
    if (!mti.needToRecheck(checkSubtypes,inManualSerializationContext())) {
      localLogger.branch(TreeLogger.DEBUG,"Type has already been analyzed",null);
      return;
    }
    mti.clearSerializationIssues();
  }
  mti.setState(SerializableTypeOracleBuilder.CHECK_IN_PROGRESS);
  if (type.isParameterized() != null) {
    JParameterizedType parameterized=type.isParameterized();
    checkType(localLogger.branch(TreeLogger.DEBUG,"Analyzing raw type",null),parameterized.getRawType(),true);
    checkTypes(localLogger.branch(TreeLogger.DEBUG,"Analyzing type args",null),parameterized.getTypeArgs());
  }
 else   if (type.isArray() != null) {
    checkArray(localLogger,type.isArray());
  }
 else   if (type.isClassOrInterface() != null) {
    checkClassOrInterface(localLogger,type.isClassOrInterface(),checkSubtypes);
  }
  if (mti.getState() != SerializableTypeOracleBuilder.CHECK_FAILED) {
    mti.setState(SerializableTypeOracleBuilder.CHECK_SUCCEEDED);
  }
  mti.setCheckedSubtypes(checkSubtypes);
  mti.setCheckedInManualContext(inManualSerializationContext());
}

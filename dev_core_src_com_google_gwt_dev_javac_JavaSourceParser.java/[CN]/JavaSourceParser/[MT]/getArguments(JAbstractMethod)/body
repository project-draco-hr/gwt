{
  JClassType type=method.getEnclosingType();
  JClassType topType=getTopmostType(type);
  CompilationUnitDeclaration cud=getCudForTopLevelType(topType);
  if (cud == null) {
    return null;
  }
  TypeDeclaration jdtType=findType(cud,type.getQualifiedBinaryName());
  if (jdtType == null) {
    return null;
  }
  AbstractMethodDeclaration jdtMethod=findMethod(jdtType,method);
  if (jdtMethod == null) {
    return null;
  }
  int n=jdtMethod.arguments.length;
  String[] argNames=new String[n];
  for (int i=0; i < n; ++i) {
    argNames[i]=String.valueOf(jdtMethod.arguments[i].name);
  }
  return argNames;
}

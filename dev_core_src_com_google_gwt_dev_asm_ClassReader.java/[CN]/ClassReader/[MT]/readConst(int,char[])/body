{
  int index=items[item];
switch (b[index - 1]) {
case ClassWriter.INT:
    return new Integer(readInt(index));
case ClassWriter.FLOAT:
  return new Float(Float.intBitsToFloat(readInt(index)));
case ClassWriter.LONG:
return new Long(readLong(index));
case ClassWriter.DOUBLE:
return new Double(Double.longBitsToDouble(readLong(index)));
case ClassWriter.CLASS:
return Type.getObjectType(readUTF8(index,buf));
case ClassWriter.STR:
return readUTF8(index,buf);
case ClassWriter.MTYPE:
return Type.getMethodType(readUTF8(index,buf));
default :
int tag=readByte(index);
int[] items=this.items;
int cpIndex=items[readUnsignedShort(index + 1)];
String owner=readClass(cpIndex,buf);
cpIndex=items[readUnsignedShort(cpIndex + 2)];
String name=readUTF8(cpIndex,buf);
String desc=readUTF8(cpIndex + 2,buf);
return new Handle(tag,owner,name,desc);
}
}

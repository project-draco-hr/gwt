{
  char[] c=context.buffer;
  int access=readUnsignedShort(u);
  String name=readUTF8(u + 2,c);
  String desc=readUTF8(u + 4,c);
  u+=6;
  String signature=null;
  int anns=0;
  int ianns=0;
  Object value=null;
  Attribute attributes=null;
  for (int i=readUnsignedShort(u); i > 0; --i) {
    String attrName=readUTF8(u + 2,c);
    if ("ConstantValue".equals(attrName)) {
      int item=readUnsignedShort(u + 8);
      value=item == 0 ? null : readConst(item,c);
    }
 else     if (SIGNATURES && "Signature".equals(attrName)) {
      signature=readUTF8(u + 8,c);
    }
 else     if ("Deprecated".equals(attrName)) {
      access|=Opcodes.ACC_DEPRECATED;
    }
 else     if ("Synthetic".equals(attrName)) {
      access|=Opcodes.ACC_SYNTHETIC | ClassWriter.ACC_SYNTHETIC_ATTRIBUTE;
    }
 else     if (ANNOTATIONS && "RuntimeVisibleAnnotations".equals(attrName)) {
      anns=u + 8;
    }
 else     if (ANNOTATIONS && "RuntimeInvisibleAnnotations".equals(attrName)) {
      ianns=u + 8;
    }
 else {
      Attribute attr=readAttribute(context.attrs,attrName,u + 8,readInt(u + 4),c,-1,null);
      if (attr != null) {
        attr.next=attributes;
        attributes=attr;
      }
    }
    u+=6 + readInt(u + 4);
  }
  u+=2;
  FieldVisitor fv=classVisitor.visitField(access,name,desc,signature,value);
  if (fv == null) {
    return u;
  }
  if (ANNOTATIONS && anns != 0) {
    for (int i=readUnsignedShort(anns), v=anns + 2; i > 0; --i) {
      v=readAnnotationValues(v + 2,c,true,fv.visitAnnotation(readUTF8(v,c),true));
    }
  }
  if (ANNOTATIONS && ianns != 0) {
    for (int i=readUnsignedShort(ianns), v=ianns + 2; i > 0; --i) {
      v=readAnnotationValues(v + 2,c,true,fv.visitAnnotation(readUTF8(v,c),false));
    }
  }
  while (attributes != null) {
    Attribute attr=attributes.next;
    attributes.next=null;
    fv.visitAttribute(attributes);
    attributes=attr;
  }
  fv.visitEnd();
  return u;
}

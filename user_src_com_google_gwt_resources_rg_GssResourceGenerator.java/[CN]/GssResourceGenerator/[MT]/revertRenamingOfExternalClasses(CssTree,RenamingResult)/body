{
  ExternalClassesCollector externalClassesCollector=new ExternalClassesCollector(cssTree.getMutatingVisitController(),errorManager);
  externalClassesCollector.runPass();
  Map<String,String> styleClassesMapping=renamingResult.mapping;
  Set<String> allStyleClassSet=Sets.newHashSet(styleClassesMapping.keySet());
  allStyleClassSet.addAll(renamingResult.externalClassCandidate);
  Set<String> externalClasses=externalClassesCollector.getExternalClassNames(allStyleClassSet,renamingResult.externalClassCandidate);
  final Map<String,String> revertMap=new HashMap<>(externalClasses.size());
  for (  String external : externalClasses) {
    revertMap.put(styleClassesMapping.get(external),external);
    styleClassesMapping.put(external,external);
  }
  SubstitutionMap revertExternalClasses=new SubstitutionMap(){
    @Override public String get(    String key){
      return revertMap.get(key);
    }
  }
;
  new CssClassRenaming(cssTree.getMutatingVisitController(),revertExternalClasses,null).runPass();
  return externalClasses;
}

{
  List<SourceCode> sourceCodes=new ArrayList<>(resources.size());
  ImmutableMap.Builder<String,String> constantNameMappingBuilder=ImmutableMap.builder();
  boolean css=ensureEitherCssOrGss(resources,logger);
  if (css && gssOptions.isAutoConversionOff()) {
    logger.log(Type.ERROR,"Your ClientBundle is referencing css files instead of gss. " + "You will need to either convert these files to gss using the " + "converter tool or turn on auto convertion in your gwt.xml file. "+ "Note: Autoconversion will be removed in the next version of GWT, "+ "you will need to move to gss."+ "Add this line to your gwt.xml file to temporary avoid this:"+ "<set-configuration-property name=\"CssResource.conversionMode\""+ "    value=\"strict\" /> "+ "Details on how to migrate to GSS can be found at: http://goo.gl/tEQnmJ");
    throw new UnableToCompleteException();
  }
  if (css) {
    String concatenatedCss=concatCssFiles(resources,logger);
    ConversionResult result=convertToGss(concatenatedCss,context,logger);
    if (shouldEmitVariables) {
      write(result.defNameMapping.keySet());
    }
    String gss=result.gss;
    String name="[auto-converted gss files from : " + resources + "]";
    sourceCodes.add(new SourceCode(name,gss));
    constantNameMappingBuilder.putAll(result.defNameMapping);
  }
 else {
    for (    URL stylesheet : resources) {
      sourceCodes.add(readUrlContent(stylesheet,logger));
    }
  }
  CssTree tree;
  try {
    tree=new GssParser(sourceCodes).parse();
  }
 catch (  GssParserException e) {
    logger.log(TreeLogger.ERROR,"Unable to parse CSS",e);
    throw new UnableToCompleteException();
  }
  finalizeTree(tree);
  checkErrors();
  BooleanConditionCollector booleanConditionCollector=new BooleanConditionCollector(tree.getMutatingVisitController());
  booleanConditionCollector.runPass();
  PermutationsCollector permutationsCollector=new PermutationsCollector(tree.getMutatingVisitController());
  permutationsCollector.runPass();
  return new CssParsingResult(tree,permutationsCollector.getPermutationAxes(),booleanConditionCollector.getBooleanConditions(),constantNameMappingBuilder.build());
}

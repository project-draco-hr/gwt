{
  ByteArrayOutputStream bos;
  DataOutputStream dos=null;
  long svuid=0;
  try {
    bos=new ByteArrayOutputStream();
    dos=new DataOutputStream(bos);
    dos.writeUTF(name.replace('/','.'));
    dos.writeInt(access & (Opcodes.ACC_PUBLIC | Opcodes.ACC_FINAL | Opcodes.ACC_INTERFACE| Opcodes.ACC_ABSTRACT));
    Arrays.sort(interfaces);
    for (int i=0; i < interfaces.length; i++) {
      dos.writeUTF(interfaces[i].replace('/','.'));
    }
    writeItems(svuidFields,dos,false);
    if (hasStaticInitializer) {
      dos.writeUTF("<clinit>");
      dos.writeInt(Opcodes.ACC_STATIC);
      dos.writeUTF("()V");
    }
    writeItems(svuidConstructors,dos,true);
    writeItems(svuidMethods,dos,true);
    dos.flush();
    byte[] hashBytes=computeSHAdigest(bos.toByteArray());
    for (int i=Math.min(hashBytes.length,8) - 1; i >= 0; i--) {
      svuid=(svuid << 8) | (hashBytes[i] & 0xFF);
    }
  }
  finally {
    if (dos != null) {
      dos.close();
    }
  }
  return svuid;
}

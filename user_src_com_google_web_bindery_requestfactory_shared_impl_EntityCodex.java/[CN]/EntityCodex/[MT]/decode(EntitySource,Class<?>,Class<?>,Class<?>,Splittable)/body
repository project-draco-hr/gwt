{
  if (split == null || split == Splittable.NULL) {
    return null;
  }
  if (!Map.class.equals(type)) {
    throw new UnsupportedOperationException();
  }
  Map<Object,Object> map=new HashMap<Object,Object>();
  if (ValueCodex.canDecode(keyType) || !split.isIndexed()) {
    List<String> keys=split.getPropertyKeys();
    for (    String propertyKey : keys) {
      Object key=(keyType == String.class) ? propertyKey : ValueCodex.decode(keyType,StringQuoter.split(propertyKey));
      if (split.isNull(propertyKey)) {
        map.put(key,null);
      }
 else {
        Splittable valueSplit=split.get(propertyKey);
        Object value=null;
        if (ValueCodex.canDecode(valueType)) {
          value=ValueCodex.decode(valueType,valueSplit);
        }
 else {
          value=decode(source,valueType,null,valueSplit);
        }
        map.put(key,value);
      }
    }
  }
 else {
    if (split.size() != 2) {
      throw new UnsupportedOperationException();
    }
    List<?> keys=(List<?>)decode(source,List.class,keyType,split.get(0));
    List<?> values=(List<?>)decode(source,List.class,valueType,split.get(1));
    if (keys.size() != values.size()) {
      throw new UnsupportedOperationException();
    }
    for (int i=0, size=keys.size(); i < size; i++) {
      map.put(keys.get(i),values.get(i));
    }
  }
  return map;
}

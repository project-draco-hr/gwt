{
  int argCount=argumentTypes.length;
  if ((this.tagBits & TagBits.AreMethodsComplete) != 0) {
    long range;
    if ((range=ReferenceBinding.binarySearch(TypeConstants.INIT,this.methods)) >= 0) {
      nextMethod:       for (int imethod=(int)range, end=(int)(range >> 32); imethod <= end; imethod++) {
        MethodBinding method=this.methods[imethod];
        if (method.parameters.length == argCount) {
          TypeBinding[] toMatch=method.parameters;
          for (int iarg=0; iarg < argCount; iarg++)           if (toMatch[iarg] != argumentTypes[iarg])           continue nextMethod;
          return method;
        }
      }
    }
  }
 else {
    if ((this.tagBits & TagBits.AreMethodsSorted) == 0) {
      int length=this.methods.length;
      if (length > 1)       ReferenceBinding.sortMethods(this.methods,0,length);
      this.tagBits|=TagBits.AreMethodsSorted;
    }
    long range;
    if ((range=ReferenceBinding.binarySearch(TypeConstants.INIT,this.methods)) >= 0) {
      nextMethod:       for (int imethod=(int)range, end=(int)(range >> 32); imethod <= end; imethod++) {
        MethodBinding method=this.methods[imethod];
        if (resolveTypesFor(method) == null || method.returnType == null) {
          methods();
          return getExactConstructor(argumentTypes);
        }
        if (method.parameters.length == argCount) {
          TypeBinding[] toMatch=method.parameters;
          for (int iarg=0; iarg < argCount; iarg++)           if (toMatch[iarg] != argumentTypes[iarg])           continue nextMethod;
          return method;
        }
      }
    }
  }
  return null;
}

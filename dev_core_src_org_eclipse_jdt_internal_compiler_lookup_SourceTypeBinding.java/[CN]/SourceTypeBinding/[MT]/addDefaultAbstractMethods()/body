{
  if ((this.tagBits & TagBits.KnowsDefaultAbstractMethods) != 0)   return;
  this.tagBits|=TagBits.KnowsDefaultAbstractMethods;
  if (isClass() && isAbstract()) {
    if (this.scope.compilerOptions().targetJDK >= ClassFileConstants.JDK1_2)     return;
    ReferenceBinding[] itsInterfaces=superInterfaces();
    if (itsInterfaces != Binding.NO_SUPERINTERFACES) {
      MethodBinding[] defaultAbstracts=null;
      int defaultAbstractsCount=0;
      ReferenceBinding[] interfacesToVisit=itsInterfaces;
      int nextPosition=interfacesToVisit.length;
      for (int i=0; i < nextPosition; i++) {
        ReferenceBinding superType=interfacesToVisit[i];
        if (superType.isValidBinding()) {
          MethodBinding[] superMethods=superType.methods();
          nextAbstractMethod:           for (int m=superMethods.length; --m >= 0; ) {
            MethodBinding method=superMethods[m];
            if (implementsMethod(method))             continue nextAbstractMethod;
            if (defaultAbstractsCount == 0) {
              defaultAbstracts=new MethodBinding[5];
            }
 else {
              for (int k=0; k < defaultAbstractsCount; k++) {
                MethodBinding alreadyAdded=defaultAbstracts[k];
                if (CharOperation.equals(alreadyAdded.selector,method.selector) && alreadyAdded.areParametersEqual(method))                 continue nextAbstractMethod;
              }
            }
            MethodBinding defaultAbstract=new MethodBinding(method.modifiers | ExtraCompilerModifiers.AccDefaultAbstract | ClassFileConstants.AccSynthetic,method.selector,method.returnType,method.parameters,method.thrownExceptions,this);
            if (defaultAbstractsCount == defaultAbstracts.length)             System.arraycopy(defaultAbstracts,0,defaultAbstracts=new MethodBinding[2 * defaultAbstractsCount],0,defaultAbstractsCount);
            defaultAbstracts[defaultAbstractsCount++]=defaultAbstract;
          }
          if ((itsInterfaces=superType.superInterfaces()) != Binding.NO_SUPERINTERFACES) {
            int itsLength=itsInterfaces.length;
            if (nextPosition + itsLength >= interfacesToVisit.length)             System.arraycopy(interfacesToVisit,0,interfacesToVisit=new ReferenceBinding[nextPosition + itsLength + 5],0,nextPosition);
            nextInterface:             for (int a=0; a < itsLength; a++) {
              ReferenceBinding next=itsInterfaces[a];
              for (int b=0; b < nextPosition; b++)               if (next == interfacesToVisit[b])               continue nextInterface;
              interfacesToVisit[nextPosition++]=next;
            }
          }
        }
      }
      if (defaultAbstractsCount > 0) {
        int length=this.methods.length;
        System.arraycopy(this.methods,0,this.methods=new MethodBinding[length + defaultAbstractsCount],0,length);
        System.arraycopy(defaultAbstracts,0,this.methods,length,defaultAbstractsCount);
        length=length + defaultAbstractsCount;
        if (length > 1)         ReferenceBinding.sortMethods(this.methods,0,length);
      }
    }
  }
}

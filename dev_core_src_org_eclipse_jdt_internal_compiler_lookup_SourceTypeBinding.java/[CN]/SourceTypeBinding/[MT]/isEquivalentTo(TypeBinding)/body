{
  if (this == otherType)   return true;
  if (otherType == null)   return false;
switch (otherType.kind()) {
case Binding.WILDCARD_TYPE:
case Binding.INTERSECTION_TYPE:
    return ((WildcardBinding)otherType).boundCheck(this);
case Binding.PARAMETERIZED_TYPE:
  if ((otherType.tagBits & TagBits.HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType()))   return false;
ParameterizedTypeBinding otherParamType=(ParameterizedTypeBinding)otherType;
if (this != otherParamType.genericType()) return false;
if (!isStatic()) {
ReferenceBinding enclosing=enclosingType();
if (enclosing != null) {
ReferenceBinding otherEnclosing=otherParamType.enclosingType();
if (otherEnclosing == null) return false;
if ((otherEnclosing.tagBits & TagBits.HasDirectWildcard) == 0) {
  if (enclosing != otherEnclosing)   return false;
}
 else {
  if (!enclosing.isEquivalentTo(otherParamType.enclosingType()))   return false;
}
}
}
int length=this.typeVariables == null ? 0 : this.typeVariables.length;
TypeBinding[] otherArguments=otherParamType.arguments;
int otherLength=otherArguments == null ? 0 : otherArguments.length;
if (otherLength != length) return false;
for (int i=0; i < length; i++) if (!this.typeVariables[i].isTypeArgumentContainedBy(otherArguments[i])) return false;
return true;
case Binding.RAW_TYPE:
return otherType.erasure() == this;
}
return false;
}

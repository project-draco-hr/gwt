{
  if ((this.tagBits & TagBits.AreMethodsComplete) != 0) {
    long range;
    if ((range=ReferenceBinding.binarySearch(selector,this.methods)) >= 0) {
      int start=(int)range, end=(int)(range >> 32);
      int length=end - start + 1;
      MethodBinding[] result;
      System.arraycopy(this.methods,start,result=new MethodBinding[length],0,length);
      return result;
    }
 else {
      return Binding.NO_METHODS;
    }
  }
  if ((this.tagBits & TagBits.AreMethodsSorted) == 0) {
    int length=this.methods.length;
    if (length > 1)     ReferenceBinding.sortMethods(this.methods,0,length);
    this.tagBits|=TagBits.AreMethodsSorted;
  }
  MethodBinding[] result;
  long range;
  if ((range=ReferenceBinding.binarySearch(selector,this.methods)) >= 0) {
    int start=(int)range, end=(int)(range >> 32);
    for (int i=start; i <= end; i++) {
      MethodBinding method=this.methods[i];
      if (resolveTypesFor(method) == null || method.returnType == null) {
        methods();
        return getMethods(selector);
      }
    }
    int length=end - start + 1;
    System.arraycopy(this.methods,start,result=new MethodBinding[length],0,length);
  }
 else {
    return Binding.NO_METHODS;
  }
  boolean isSource15=this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;
  for (int i=0, length=result.length - 1; i < length; i++) {
    MethodBinding method=result[i];
    for (int j=length; j > i; j--) {
      boolean paramsMatch=isSource15 ? method.areParameterErasuresEqual(result[j]) : method.areParametersEqual(result[j]);
      if (paramsMatch) {
        methods();
        return getMethods(selector);
      }
    }
  }
  return result;
}

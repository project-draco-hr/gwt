{
  char[] uniqueKey=super.computeUniqueKey(isLeaf);
  if (uniqueKey.length == 2)   return uniqueKey;
  if (Util.isClassFileName(this.fileName))   return uniqueKey;
  int end=CharOperation.lastIndexOf('.',this.fileName);
  if (end != -1) {
    int start=CharOperation.lastIndexOf('/',this.fileName) + 1;
    char[] mainTypeName=CharOperation.subarray(this.fileName,start,end);
    start=CharOperation.lastIndexOf('/',uniqueKey) + 1;
    if (start == 0)     start=1;
    end=CharOperation.indexOf('$',uniqueKey,start);
    if (end == -1)     end=CharOperation.indexOf('<',uniqueKey,start);
    if (end == -1)     end=CharOperation.indexOf(';',uniqueKey,start);
    char[] topLevelType=CharOperation.subarray(uniqueKey,start,end);
    if (!CharOperation.equals(topLevelType,mainTypeName)) {
      StringBuffer buffer=new StringBuffer();
      buffer.append(uniqueKey,0,start);
      buffer.append(mainTypeName);
      buffer.append('~');
      buffer.append(topLevelType);
      buffer.append(uniqueKey,end,uniqueKey.length - end);
      int length=buffer.length();
      uniqueKey=new char[length];
      buffer.getChars(0,length,uniqueKey,0);
      return uniqueKey;
    }
  }
  return uniqueKey;
}

{
  String webXmlUrlString=webXmlUrl.toExternalForm();
  try {
    final TreeLogger branch=logger.branch(TreeLogger.DEBUG,"Parsing " + webXmlUrlString);
    SAXParserFactory fac=SAXParserFactory.newInstance();
    fac.setValidating(false);
    fac.setNamespaceAware(false);
    SAXParser parser=fac.newSAXParser();
    parser.getXMLReader().setFeature("http://xml.org/sax/features/validation",false);
    parser.getXMLReader().setFeature("http://xml.org/sax/features/namespaces",false);
    parser.getXMLReader().setFeature("http://xml.org/sax/features/namespace-prefixes",false);
    Map<String,String> classNameToServletName=new HashMap<String,String>();
    Map<String,Set<String>> servletNameToPaths=new HashMap<String,Set<String>>();
    parser.parse(webXmlUrlString,new WebXmlDataCollector(branch,classNameToServletName,servletNameToPaths));
    Map<String,Set<String>> classNameToPaths=new HashMap<String,Set<String>>();
    for (    Entry<String,String> entry : classNameToServletName.entrySet()) {
      classNameToPaths.put(entry.getKey(),servletNameToPaths.get(entry.getValue()));
    }
    return new ServletValidator(classNameToServletName,classNameToPaths);
  }
 catch (  Exception e) {
    logger.log(TreeLogger.WARN,"Unable to process '" + webXmlUrlString + "' for servlet validation",e);
    return null;
  }
}

{
  PermutationResult permutationResult=resultFile.newInstance(logger);
  StandardCompilationResult compilation=linkerContext.getCompilation(permutationResult);
  StaticPropertyOracle[] propOracles=perm.getPropertyOracles();
  for (  StaticPropertyOracle propOracle : propOracles) {
    BindingProperty[] orderedProps=propOracle.getOrderedProps();
    String[] orderedPropValues=propOracle.getOrderedPropValues();
    Map<SelectionProperty,String> unboundProperties=new HashMap<SelectionProperty,String>();
    for (int i=0; i < orderedProps.length; i++) {
      SelectionProperty key=linkerContext.getProperty(orderedProps[i].getName());
      if (key.tryGetValue() != null) {
        continue;
      }
 else       if (key.isDerived()) {
        continue;
      }
      unboundProperties.put(key,orderedPropValues[i]);
    }
    compilation.addSelectionPermutation(unboundProperties);
  }
  logScriptSize(logger,perm.getId(),compilation);
}

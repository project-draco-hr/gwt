{
  Preconditions.checkState(!compilationUnitsByTypeName.containsKey(compilationUnit.getTypeName()));
  if (compilationUnit.isSuperSource()) {
    superSourceCompilationUnitTypeNames.add(compilationUnit.getTypeName());
  }
 else {
    regularCompilationUnitTypeNames.add(compilationUnit.getTypeName());
  }
  compilationUnitsByTypeName.put(compilationUnit.getTypeName(),compilationUnit);
  for (  CompiledClass compiledClass : compilationUnit.getCompiledClasses()) {
    if (compilationUnit.isSuperSource()) {
      String classFilePath=compiledClass.getInternalName();
      superSourceClassFilePaths.add(Libraries.computeClassFileName(classFilePath));
      zipWriter.writeClassFile(classFilePath,compiledClass.getBytes());
    }
 else {
      String classFilePath=compiledClass.getInternalName();
      regularClassFilePaths.add(Libraries.computeClassFileName(classFilePath));
      zipWriter.writeClassFile(classFilePath,compiledClass.getBytes());
    }
  }
  zipWriter.writeCompilationUnitFile(compilationUnit);
}

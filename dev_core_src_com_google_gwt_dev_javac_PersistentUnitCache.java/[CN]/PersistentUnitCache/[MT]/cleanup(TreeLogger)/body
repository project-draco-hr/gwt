{
  awaitUnitCacheMapLoad();
  if (backgroundService.isShutdown()) {
    return;
  }
  boolean shouldRotate=addedSinceLastCleanup > 0;
  logger.log(TreeLogger.TRACE,"Added " + addedSinceLastCleanup + " units to cache since last cleanup.");
  addedSinceLastCleanup=0;
  try {
    File[] cacheFiles=getCacheFiles(cacheDirectory,true);
    if (cacheFiles.length < CACHE_FILE_THRESHOLD) {
      if (shouldRotate) {
        backgroundService.execute(rotateCacheFilesTask);
      }
      return;
    }
    boolean inProgress=purgeInProgress.getAndSet(true);
    if (inProgress) {
      try {
        purgeTaskStatus.get(0,TimeUnit.NANOSECONDS);
      }
 catch (      InterruptedException ex) {
        Thread.currentThread().interrupt();
      }
catch (      TimeoutException ex) {
        return;
      }
    }
synchronized (unitMap) {
      for (      UnitCacheEntry unitCacheEntry : unitMap.values()) {
        if (unitCacheEntry.getOrigin() == UnitOrigin.ARCHIVE) {
          continue;
        }
        addImpl(unitCacheEntry);
      }
    }
    purgeTaskStatus=backgroundService.submit(purgeOldCacheFilesTask,Boolean.TRUE);
  }
 catch (  ExecutionException ex) {
    throw new InternalCompilerException("Error purging cache",ex);
  }
catch (  RejectedExecutionException ex) {
  }
}

{
  CompilerOptions options=new CompilerOptions();
  WarningLevel.QUIET.setOptionsForWarningLevel(options);
  HashMap<String,String> varNames=new HashMap<String,String>();
  for (  String var : globalVars) {
    varNames.put(var,var);
  }
  options.setInputVariableMapSerialized(VariableMap.fromMap(varNames).toBytes());
  if (jsOutputOption == JsOutputOption.OBFUSCATED) {
    options.setRenamingPolicy(VariableRenamingPolicy.ALL,PropertyRenamingPolicy.OFF);
    options.setPrettyPrint(false);
  }
 else {
    options.setRenamingPolicy(VariableRenamingPolicy.OFF,PropertyRenamingPolicy.OFF);
    options.setPrettyPrint(true);
  }
  options.setClosurePass(true);
  options.setFoldConstants(true);
  options.setCoalesceVariableNames(true);
  options.setDeadAssignmentElimination(true);
  options.setExtractPrototypeMemberDeclarations(true);
  options.setCollapseVariableDeclarations(true);
  options.setConvertToDottedProperties(true);
  options.setRewriteFunctionExpressions(true);
  options.setLabelRenaming(true);
  options.setRemoveDeadCode(true);
  options.setOptimizeArgumentsArray(true);
  options.setCollapseObjectLiterals(true);
  options.setShadowVariables(true);
  options.setReserveRawExports(true);
  options.setRemoveUnusedPrototypeProperties(true);
  options.setCollapseAnonymousFunctions(true);
  options.setSmartNameRemoval(true);
  options.setInlineConstantVars(true);
  options.setInlineFunctions(Reach.ALL);
  options.setInlineGetters(true);
  options.setInlineVariables(Reach.ALL);
  options.setFlowSensitiveInlineVariables(true);
  options.setComputeFunctionSideEffects(true);
  options.setRemoveUnusedVariable(Reach.ALL);
  options.setOptimizeParameters(true);
  options.setOptimizeReturns(true);
  options.setOptimizeCalls(true);
  options.setCollapseProperties(true);
  options.setCrossModuleCodeMotion(true);
  options.setCrossModuleMethodMotion(true);
  options.setDevirtualizePrototypeMethods(true);
  options.setRemoveClosureAsserts(false);
  options.setAliasKeywords(false);
  options.setRemoveUnusedPrototypePropertiesInExterns(false);
  options.setCheckGlobalThisLevel(CheckLevel.OFF);
  options.setRewriteFunctionExpressions(false);
  options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC,CheckLevel.OFF);
  return options;
}

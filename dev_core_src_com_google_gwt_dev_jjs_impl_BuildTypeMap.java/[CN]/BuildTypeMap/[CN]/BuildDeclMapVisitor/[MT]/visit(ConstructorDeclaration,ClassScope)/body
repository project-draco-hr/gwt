{
  try {
    MethodBinding b=ctorDecl.binding;
    JClassType enclosingType=(JClassType)typeMap.get(scope.enclosingSourceType());
    SourceInfo info=makeSourceInfo(ctorDecl,enclosingType);
    JConstructor newCtor=program.createConstructor(info,enclosingType);
    if (enclosingType.isEnumOrSubclass() != null) {
      program.createParameter(info,"enum$name".toCharArray(),program.getTypeJavaLangString(),true,false,newCtor);
      program.createParameter(info,"enum$ordinal".toCharArray(),program.getTypePrimitiveInt(),true,false,newCtor);
    }
    mapParameters(newCtor,ctorDecl);
    addThrownExceptions(ctorDecl.binding,newCtor);
    info.addCorrelation(program.getCorrelator().by(newCtor));
    int syntheticParamCount=0;
    ReferenceBinding declaringClass=b.declaringClass;
    if (declaringClass.isNestedType() && !declaringClass.isStatic()) {
      NestedTypeBinding nestedBinding=(NestedTypeBinding)declaringClass;
      Set<String> alreadyNamedVariables=new HashSet<String>();
      if (nestedBinding.enclosingInstances != null) {
        for (int i=0; i < nestedBinding.enclosingInstances.length; ++i) {
          SyntheticArgumentBinding arg=nestedBinding.enclosingInstances[i];
          String argName=String.valueOf(arg.name);
          if (alreadyNamedVariables.contains(argName)) {
            argName+="_" + i;
          }
          createParameter(arg,argName,newCtor);
          ++syntheticParamCount;
          alreadyNamedVariables.add(argName);
        }
      }
      if (nestedBinding.outerLocalVariables != null) {
        for (int i=0; i < nestedBinding.outerLocalVariables.length; ++i) {
          SyntheticArgumentBinding arg=nestedBinding.outerLocalVariables[i];
          String argName=String.valueOf(arg.name);
          if (alreadyNamedVariables.contains(argName)) {
            argName+="_" + i;
          }
          createParameter(arg,argName,newCtor);
          ++syntheticParamCount;
          alreadyNamedVariables.add(argName);
        }
      }
    }
    typeMap.put(b,newCtor);
    if (!enclosingType.isAbstract()) {
      ReferenceBinding enclosingBinding=ctorDecl.binding.declaringClass.enclosingType();
      JReferenceType outerType=enclosingBinding == null ? null : (JReferenceType)typeMap.get(enclosingBinding);
      createSyntheticConstructor(newCtor,ctorDecl.binding.declaringClass.isStatic(),outerType);
    }
    return true;
  }
 catch (  Throwable e) {
    throw translateException(ctorDecl,e);
  }
}

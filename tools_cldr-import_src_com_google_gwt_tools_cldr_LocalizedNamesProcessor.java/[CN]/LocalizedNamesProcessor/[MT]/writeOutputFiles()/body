{
  Set<GwtLocale> localesToPrint=localeData.getNonEmptyLocales("territory");
  String cldrDir="client/impl/cldr/";
  writeVersionFile(cldrDir + "LocalizedNames.versions.txt",localesToPrint);
  for (  GwtLocale locale : localesToPrint) {
    Map<String,String> namesMap=localeData.getEntries("territory",locale);
    List<String> regionCodesWithNames=new ArrayList<String>();
    for (    String regionCode : namesMap.keySet()) {
      if (!regionCode.startsWith("!")) {
        regionCodesWithNames.add(regionCode);
      }
    }
    String[] sortOrder=getRegionOrder(namesMap.get("!sortorder"));
    String[] likelyOrder=getRegionOrder(namesMap.get("!likelyorder"));
    if (regionCodesWithNames.isEmpty() && sortOrder == null && likelyOrder == null) {
      return;
    }
    Collections.sort(regionCodesWithNames);
    if (locale.isDefault()) {
      generateDefaultLocale("client/DefaultLocalizedNames.java",locale,namesMap,regionCodesWithNames,sortOrder,likelyOrder);
    }
    String localePart=locale.getAsString();
    if (localePart == null || localePart.isEmpty()) {
      localePart="";
    }
 else {
      localePart="_" + localePart;
    }
    String path=cldrDir + "LocalizedNamesImpl" + localePart+ "."+ "java";
    generateLocale(path,locale,namesMap,regionCodesWithNames,sortOrder,likelyOrder);
  }
}

{
  int keyboardSelectedRow=getKeyboardSelectedRow() + getPageStart();
  String evenRowStyle=style.evenRow();
  String oddRowStyle=style.oddRow();
  String cellStyle=style.cell();
  String evenCellStyle=" " + style.evenRowCell();
  String oddCellStyle=" " + style.oddRowCell();
  String firstColumnStyle=" " + style.firstColumn();
  String lastColumnStyle=" " + style.lastColumn();
  String selectedRowStyle=" " + style.selectedRow();
  String selectedCellStyle=" " + style.selectedRowCell();
  int columnCount=columns.size();
  int length=values.size();
  int end=start + length;
  for (int i=start; i < end; i++) {
    T value=values.get(i - start);
    boolean isSelected=(selectionModel == null || value == null) ? false : selectionModel.isSelected(value);
    boolean isEven=i % 2 == 0;
    String trClasses=isEven ? evenRowStyle : oddRowStyle;
    if (isSelected) {
      trClasses+=selectedRowStyle;
    }
    if (rowStyles != null) {
      String extraRowStyles=rowStyles.getStyleNames(value,i);
      if (extraRowStyles != null) {
        trClasses+=" ";
        trClasses+=extraRowStyles;
      }
    }
    SafeHtmlBuilder trBuilder=new SafeHtmlBuilder();
    int curColumn=0;
    for (    Column<T,?> column : columns) {
      String tdClasses=cellStyle;
      tdClasses+=isEven ? evenCellStyle : oddCellStyle;
      if (curColumn == 0) {
        tdClasses+=firstColumnStyle;
      }
      if (isSelected) {
        tdClasses+=selectedCellStyle;
      }
      if (curColumn == columnCount - 1) {
        tdClasses+=lastColumnStyle;
      }
      Context context=new Context(i,curColumn,getValueKey(value));
      String cellStyles=column.getCellStyleNames(context,value);
      if (cellStyles != null) {
        tdClasses+=" " + cellStyles;
      }
      SafeHtmlBuilder cellBuilder=new SafeHtmlBuilder();
      if (value != null) {
        column.render(context,value,cellBuilder);
      }
      SafeHtml contents=SafeHtmlUtils.EMPTY_SAFE_HTML;
      contents=template.div(cellBuilder.toSafeHtml());
      HorizontalAlignmentConstant hAlign=column.getHorizontalAlignment();
      VerticalAlignmentConstant vAlign=column.getVerticalAlignment();
      if (hAlign != null && vAlign != null) {
        trBuilder.append(template.tdBothAlign(tdClasses,hAlign.getTextAlignString(),vAlign.getVerticalAlignString(),contents));
      }
 else       if (hAlign != null) {
        trBuilder.append(template.tdHorizontalAlign(tdClasses,hAlign.getTextAlignString(),contents));
      }
 else       if (vAlign != null) {
        trBuilder.append(template.tdVerticalAlign(tdClasses,vAlign.getVerticalAlignString(),contents));
      }
 else {
        trBuilder.append(template.td(tdClasses,contents));
      }
      curColumn++;
    }
    sb.append(template.tr(trClasses,trBuilder.toSafeHtml()));
  }
}

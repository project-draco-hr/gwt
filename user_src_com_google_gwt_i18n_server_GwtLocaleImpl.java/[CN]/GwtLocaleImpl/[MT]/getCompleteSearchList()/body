{
synchronized (cacheLock) {
    if (cachedSearchList == null) {
      cachedSearchList=new ArrayList<GwtLocale>();
      Set<GwtLocale> seen=new HashSet<GwtLocale>();
      String initialScript=script;
      if (initialScript == null) {
        initialScript=DefaultLanguageScripts.getDefaultScript(language,region);
      }
      List<GwtLocale> thisGroup=new ArrayList<GwtLocale>();
      if (initialScript != null) {
        thisGroup.add(factory.fromComponents(language,initialScript,region,variant));
      }
      thisGroup.add(this);
      seen.addAll(thisGroup);
      GwtLocale defLocale=factory.getDefault();
      seen.add(defLocale);
      while (!thisGroup.isEmpty()) {
        cachedSearchList.addAll(thisGroup);
        List<GwtLocale> nextGroup=new ArrayList<GwtLocale>();
        for (        GwtLocale locale : thisGroup) {
          List<GwtLocale> aliases=locale.getAliases();
          aliases=filterBadScripts(aliases,initialScript);
          List<GwtLocale> work=new ArrayList<GwtLocale>(aliases);
          work.removeAll(seen);
          nextGroup.addAll(work);
          seen.addAll(work);
          work.clear();
          if (locale.getRegion() != null) {
            addImmediateParentRegions(factory,locale,work);
          }
 else           if (locale.getVariant() != null) {
            work.add(factory.fromComponents(locale.getLanguage(),locale.getScript(),null,null));
          }
 else           if (locale.getScript() != null) {
            work.add(factory.fromComponents(locale.getLanguage(),null,null,null));
          }
          work.removeAll(seen);
          nextGroup.addAll(work);
          seen.addAll(work);
        }
        thisGroup=nextGroup;
      }
      if (!isDefault()) {
        cachedSearchList.add(defLocale);
      }
      cachedSearchList=Collections.unmodifiableList(cachedSearchList);
    }
    return cachedSearchList;
  }
}

{
  if (((SimpleEntityProxyId<P>)proxyId).isEphemeral()) {
    throw new IllegalArgumentException("Cannot fetch unpersisted entity");
  }
  AbstractRequestContext context=new AbstractRequestContext(AbstractRequestFactory.this);
  return new AbstractRequest<P>(context){
{
      requestContext.addInvocation(this);
    }
    @Override protected void handleResult(    Object result){
      succeed(decodeReturnObject(proxyId.getProxyClass(),result));
    }
    @Override protected RequestData makeRequestData(){
      return new RequestData("com.google.gwt.requestfactory.client.impl.FindRequest::find",new Object[]{getHistoryToken(proxyId)},propertyRefs);
    }
  }
;
}

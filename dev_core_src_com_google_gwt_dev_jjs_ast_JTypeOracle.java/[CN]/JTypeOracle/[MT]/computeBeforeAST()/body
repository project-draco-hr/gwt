{
  baseArrayType=program.getIndexedType("Array");
  javaLangObject=program.getTypeJavaLangObject();
  javaIoSerializable=program.getFromTypeMap(Serializable.class.getName());
  javaLangCloneable=program.getFromTypeMap(Cloneable.class.getName());
  recordImmediateTypeRelations(program.getDeclaredTypes());
  computeExtendedTypeRelations();
  jsInterfaces.clear();
  for (  JDeclaredType type : program.getDeclaredTypes()) {
    if (type instanceof JInterfaceType) {
      if (((JInterfaceType)type).isJsType()) {
        jsInterfaces.add((JInterfaceType)type);
      }
    }
    for (    JMethod method : type.getMethods()) {
      if (program.typeOracle.isExportedMethod(method)) {
        exportedMethods.add(method);
      }
    }
    for (    JField field : type.getFields()) {
      if (field.getExportName() != null) {
        exportedFields.add(field);
      }
    }
  }
  for (  JDeclaredType type : program.getModuleDeclaredTypes()) {
    if (type instanceof JClassType) {
      computeVirtualUpRefs((JClassType)type);
    }
  }
}

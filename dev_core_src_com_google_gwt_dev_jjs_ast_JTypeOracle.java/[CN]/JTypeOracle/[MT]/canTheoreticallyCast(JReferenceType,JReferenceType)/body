{
  JClassType jlo=program.getTypeJavaLangObject();
  if (type == qType || type == jlo) {
    return true;
  }
  if (canTriviallyCast(type,qType)) {
    return true;
  }
  if (type instanceof JArrayType) {
    JArrayType aType=(JArrayType)type;
    if (qType instanceof JArrayType) {
      JArrayType qaType=(JArrayType)qType;
      JType leafType=aType.getLeafType();
      JType qLeafType=qaType.getLeafType();
      int dims=aType.getDims();
      int qDims=qaType.getDims();
      if (dims < qDims && leafType != program.getTypeJavaLangObject() && !(leafType instanceof JNullType)) {
        return false;
      }
      if (dims == qDims) {
        if (leafType instanceof JReferenceType && qLeafType instanceof JReferenceType) {
          return canTheoreticallyCast((JReferenceType)leafType,(JReferenceType)qLeafType);
        }
      }
    }
  }
 else   if (type instanceof JClassType) {
    JClassType cType=(JClassType)type;
    if (qType instanceof JClassType) {
      return isSubClass(cType,(JClassType)qType);
    }
 else     if (qType instanceof JInterfaceType) {
      return getOrCreate(couldImplementMap,cType).contains(qType);
    }
  }
 else   if (type instanceof JInterfaceType) {
    JInterfaceType iType=(JInterfaceType)type;
    if (qType instanceof JClassType) {
      return getOrCreate(couldBeImplementedMap,iType).contains(qType);
    }
  }
 else   if (type instanceof JNullType) {
  }
  return true;
}

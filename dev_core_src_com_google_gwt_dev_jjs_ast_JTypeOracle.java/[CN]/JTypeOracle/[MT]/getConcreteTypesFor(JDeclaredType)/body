{
  Set<JClassType> types=new IdentityHashSet<JClassType>();
  if (superType instanceof JInterfaceType) {
    types.addAll(get(isImplementedMap,(JInterfaceType)superType));
  }
 else {
    JClassType classType=(JClassType)superType;
    types.addAll(get(subClassMap,classType));
    types.add(classType);
  }
  for (Iterator<JClassType> it=types.iterator(); it.hasNext(); ) {
    JClassType type=it.next();
    if (type.isAbstract()) {
      it.remove();
    }
 else     if (instantiatedTypes != null && !instantiatedTypes.contains(type)) {
      it.remove();
    }
  }
  return types;
}

{
  Set<JDeclaredType> computed=new IdentityHashSet<JDeclaredType>();
  if (hasWholeWorldKnowledge) {
    for (    JDeclaredType type : program.getDeclaredTypes()) {
      computeClinitTarget(type,computed);
    }
    nextDual:     for (Iterator<String> it=dualImpls.iterator(); it.hasNext(); ) {
      String dualIntf=it.next();
      Set<String> implementors=get(isImplementedMap,dualIntf);
      for (      String implementorName : implementors) {
        JClassType implementor=(JClassType)referenceTypesByName.get(implementorName);
        if (isInstantiatedType(implementor) && !program.isJavaScriptObject(implementor)) {
          continue nextDual;
        }
      }
      it.remove();
    }
    Iterator<Entry<String,String>> jit=jsoSingleImpls.entrySet().iterator();
    while (jit.hasNext()) {
      Entry<String,String> jsoSingleImplEntry=jit.next();
      JClassType clazz=(JClassType)referenceTypesByName.get(jsoSingleImplEntry.getValue());
      if (isInstantiatedType(clazz)) {
        continue;
      }
      dualImpls.remove(jsoSingleImplEntry.getKey());
      jit.remove();
    }
  }
}

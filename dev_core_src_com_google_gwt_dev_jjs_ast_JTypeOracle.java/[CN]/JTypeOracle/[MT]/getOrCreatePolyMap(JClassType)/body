{
  Map<String,JMethod> polyMap=polyClassMethodMap.get(type);
  if (polyMap == null) {
    JClassType superClass=type.getSuperClass();
    if (superClass == null) {
      polyMap=new HashMap<String,JMethod>();
    }
 else {
      Map<String,JMethod> superPolyMap=getOrCreatePolyMap(type.getSuperClass());
      polyMap=new HashMap<String,JMethod>(superPolyMap);
    }
    for (    JMethod method : type.getMethods()) {
      if (method.canBePolymorphic()) {
        polyMap.put(method.getSignature(),method);
      }
    }
    polyMap=Maps.normalize(polyMap);
    polyClassMethodMap.put(type,polyMap);
  }
  return polyMap;
}

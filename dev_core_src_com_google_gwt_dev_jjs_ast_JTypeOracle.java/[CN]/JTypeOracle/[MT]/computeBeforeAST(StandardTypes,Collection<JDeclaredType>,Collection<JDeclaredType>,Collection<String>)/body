{
  this.standardTypes=standardTypes;
  recordReferenceTypeByName(declaredTypes);
  deleteImmediateTypeRelations(deletedTypeNames);
  deleteImmediateTypeRelations(getNamesOf(moduleDeclaredTypes));
  recordImmediateTypeRelations(moduleDeclaredTypes);
  computeExtendedTypeRelations();
  jsInterfaces.clear();
  for (  JDeclaredType type : declaredTypes) {
    if (type instanceof JInterfaceType) {
      if (((JInterfaceType)type).isJsType()) {
        jsInterfaces.add((JInterfaceType)type);
      }
    }
    for (    JMethod method : type.getMethods()) {
      if (isExportedMethod(method)) {
        exportedMethods.add(method);
      }
    }
    for (    JField field : type.getFields()) {
      if (isExportedField(field)) {
        exportedFields.add(field);
      }
    }
  }
  for (  JDeclaredType type : declaredTypes) {
    if (type instanceof JClassType) {
      computeVirtualUpRefs((JClassType)type);
    }
  }
  computeOverrides(declaredTypes);
}

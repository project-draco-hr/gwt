{
  referenceTypesByName.clear();
  for (  JReferenceType type : types) {
    referenceTypesByName.put(type.getName(),type);
    if (type instanceof JClassType) {
      JClassType jClassType=(JClassType)type;
      JClassType superClass=jClassType.getSuperClass();
      if (superClass != null) {
        immediateTypeRelations.superClassesByClass.put(jClassType.getName(),superClass.getName());
      }
      List<JInterfaceType> list=jClassType.getImplements();
      if (!list.isEmpty()) {
        Set<String> hashSet=new HashSet<String>();
        for (        JInterfaceType jInterfaceType : list) {
          hashSet.add(jInterfaceType.getName());
        }
        immediateTypeRelations.implementedIntfsByClass.put(type.getName(),hashSet);
      }
    }
 else     if (type instanceof JInterfaceType) {
      JInterfaceType currentIntf=(JInterfaceType)type;
      List<JInterfaceType> intfImplements=currentIntf.getImplements();
      if (!intfImplements.isEmpty()) {
        Set<String> hashSet=new HashSet<String>();
        for (        JInterfaceType jInterfaceType : intfImplements) {
          hashSet.add(jInterfaceType.getName());
        }
        immediateTypeRelations.superIntfsByIntf.put(type.getName(),hashSet);
      }
    }
  }
}

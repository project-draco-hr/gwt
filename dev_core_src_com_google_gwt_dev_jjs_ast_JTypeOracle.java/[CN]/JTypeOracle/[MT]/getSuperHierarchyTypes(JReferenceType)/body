{
  if (type instanceof JArrayType) {
    JArrayType arrayType=(JArrayType)type;
    Set<JReferenceType> superHierarchyTypes=Sets.newHashSet();
    superHierarchyTypes.add(javaLangObject);
    if (arrayType.getLeafType() instanceof JPrimitiveType) {
      superHierarchyTypes.add(arrayType);
    }
 else {
      JDeclaredType leafType=(JDeclaredType)arrayType.getLeafType();
      for (      JReferenceType leafSuperType : getSuperHierarchyTypes(leafType)) {
        JArrayType superArrayType=program.getTypeArray(leafSuperType,arrayType.getDims());
        superHierarchyTypes.add(superArrayType);
      }
    }
    return superHierarchyTypes;
  }
  Set<JReferenceType> superHierarchyTypes=Sets.newHashSet();
  if (superClassMap.containsKey(type.getName())) {
    superHierarchyTypes.addAll(getTypes(superClassMap,type));
  }
  if (superInterfaceMap.containsKey(type.getName())) {
    superHierarchyTypes.addAll(getTypes(superInterfaceMap,type));
  }
  if (implementsMap.containsKey(type.getName())) {
    superHierarchyTypes.addAll(getTypes(implementsMap,type));
  }
  superHierarchyTypes.add(type);
  return superHierarchyTypes;
}

{
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::addTwoOverloaded(I)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("addTwoOverloaded",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::addOne(I)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("addOne",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::foo(I)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("foo",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::foo(D)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("foo",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::addTwoOverloaded(*)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("addTwoOverloaded",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::addOne(*)",errors);
    errors.assertNoError();
    assertEquals("test.Intf",res.getEnclosingType().getName());
    assertEquals("addOne",res.getName());
  }
{
    MockErrorReporter errors=new MockErrorReporter();
    JMethod res=(JMethod)lookup("test.Intf::foo(*)",errors);
    errors.assertHasError();
  }
}

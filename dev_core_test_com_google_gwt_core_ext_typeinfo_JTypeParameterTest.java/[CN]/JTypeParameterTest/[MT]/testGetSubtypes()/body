{
  TypeOracle oracle=moduleContext.getOracle();
  JClassType testType=oracle.getType(MyCustomList.class.getName());
  JGenericType genericType=testType.isGenericType();
  JTypeParameter[] typeParameters=genericType.getTypeParameters();
  JTypeParameter typeParameter=typeParameters[0];
  JClassType serializableType=oracle.getType(Serializable.class.getCanonicalName());
  JGenericType comparableType=(JGenericType)oracle.getType(Comparable.class.getCanonicalName());
  JClassType[] computedSubtypes=typeParameter.getSubtypes();
  for (  JClassType computedSubtype : computedSubtypes) {
    if (computedSubtype.isLocalType()) {
      continue;
    }
    JClassType comparableIntf=findParameterizationOf(computedSubtype,comparableType);
    assertTrue(computedSubtype.isAssignableTo(serializableType));
    assertTrue(computedSubtype.isAssignableTo(comparableIntf));
  }
}

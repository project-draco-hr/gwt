{
  assert(!(leafType instanceof JArrayType));
  HashMap<JType,JArrayType> typeToArrayType;
  for (int i=this.dimensions.size(); i < dimensions; ++i) {
    typeToArrayType=new HashMap<JType,JArrayType>();
    this.dimensions.add(typeToArrayType);
  }
  typeToArrayType=this.dimensions.get(dimensions - 1);
  JArrayType arrayType=typeToArrayType.get(leafType);
  if (arrayType == null) {
    JType elementType;
    if (dimensions == 1) {
      elementType=leafType;
    }
 else {
      elementType=getTypeArray(leafType,dimensions - 1);
    }
    arrayType=new JArrayType(elementType,leafType,dimensions);
    arrayType.setSuperClass(typeJavaLangObject);
    allArrayTypes.add(arrayType);
    typeToArrayType.put(leafType,arrayType);
  }
  return arrayType;
}

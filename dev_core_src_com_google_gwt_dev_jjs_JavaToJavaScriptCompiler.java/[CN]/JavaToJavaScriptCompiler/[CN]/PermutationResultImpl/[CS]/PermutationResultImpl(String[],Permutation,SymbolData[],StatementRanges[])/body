{
  byte[][] bytes=new byte[jsFragments.length][];
  for (int i=0; i < jsFragments.length; ++i) {
    bytes[i]=Util.getBytes(jsFragments[i]);
  }
  this.js=bytes;
  this.jsStrongName=Util.computeStrongName(bytes);
  this.permutation=permutation;
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    Util.writeObjectToStream(baos,(Object)symbolMap);
    this.serializedSymbolMap=baos.toByteArray();
  }
 catch (  IOException e) {
    throw new RuntimeException("Should never happen with in-memory stream",e);
  }
  this.statementRanges=statementRanges;
}

{
  Set<String> allRootTypes=new TreeSet<String>();
  CompilationState compilationState=rpo.getCompilationState();
  Memory.maybeDumpMemory("CompStateBuilt");
  recordJsoTypes(compilationState.getTypeOracle());
  populateRootTypes(allRootTypes,additionalRootTypes,compilationState.getTypeOracle());
  String entryMethodHolderTypeName=buildEntryMethodHolder(rpo.getGeneratorContext(),allRootTypes);
  beforeUnifyAst(allRootTypes);
  unifyJavaAst(allRootTypes,entryMethodHolderTypeName);
  if (options.isSoycEnabled() || options.isJsonSoycEnabled()) {
    SourceInfoCorrelator.exec(jprogram);
  }
  TinyCompileSummary tinyCompileSummary=compilerContext.getTinyCompileSummary();
  tinyCompileSummary.setTypesForGeneratorsCount(rpo.getGeneratorContext().getTypeOracle().getTypes().length);
  tinyCompileSummary.setTypesForAstCount(jprogram.getDeclaredTypes().size());
  tinyCompileSummary.setStaticSourceFilesCount(compilationState.getStaticSourceCount());
  tinyCompileSummary.setGeneratedSourceFilesCount(compilationState.getGeneratedSourceCount());
  tinyCompileSummary.setCachedStaticSourceFilesCount(compilationState.getCachedStaticSourceCount());
  tinyCompileSummary.setCachedGeneratedSourceFilesCount(compilationState.getCachedGeneratedSourceCount());
  rpo.clear();
  jprogram.typeOracle.computeBeforeAST(StandardTypes.createFrom(jprogram),jprogram.getDeclaredTypes(),jprogram.getModuleDeclaredTypes(),getMinimalRebuildCache().computeDeletedTypeNames());
  return compilationState;
}

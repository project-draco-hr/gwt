{
  Event findEntryPointsEvent=SpeedTracerLogger.start(CompilerEventType.FIND_ENTRY_POINTS);
  JMethod bootStrapMethod=jprogram.getIndexedMethod(SourceName.getShortClassName(entryMethodHolderTypeName) + ".init");
  JMethodBody body=(JMethodBody)bootStrapMethod.getBody();
  JBlock block=body.getBlock();
  SourceInfo info=block.getSourceInfo().makeChild();
  JMethod registerEntry=jprogram.getIndexedMethod("Impl.registerEntry");
  jprogram.addEntryMethod(registerEntry);
  for (  String mainClassName : mainClassNames) {
    block.addStmt(makeStatsCalls(info,mainClassName));
    JDeclaredType mainType=jprogram.getFromTypeMap(mainClassName);
    if (mainType == null) {
      logger.log(TreeLogger.ERROR,"Could not find module entry point class '" + mainClassName + "'",null);
      throw new UnableToCompleteException();
    }
    JMethod mainMethod=findMainMethod(mainType);
    if (mainMethod != null && mainMethod.isStatic()) {
      JMethodCall onModuleLoadCall=new JMethodCall(info,null,mainMethod);
      block.addStmt(onModuleLoadCall.makeStatement());
      continue;
    }
    rebindEntryPoint(info,bootStrapMethod,block,mainClassName,mainType);
  }
  jprogram.addEntryMethod(bootStrapMethod);
  findEntryPointsEvent.end();
}

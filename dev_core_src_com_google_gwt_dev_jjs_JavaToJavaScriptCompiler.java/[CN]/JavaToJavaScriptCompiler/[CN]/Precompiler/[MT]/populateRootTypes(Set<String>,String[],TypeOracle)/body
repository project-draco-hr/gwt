{
  Collections.addAll(allRootTypes,entryPointTypeNames);
  Collections.addAll(allRootTypes,additionalRootTypes);
  allRootTypes.addAll(JProgram.CODEGEN_TYPES_SET);
  allRootTypes.addAll(jprogram.getTypeNamesToIndex());
  for (  com.google.gwt.core.ext.typeinfo.JClassType singleJsoIntf : typeOracle.getSingleJsoImplInterfaces()) {
    allRootTypes.add(typeOracle.getSingleJsoImpl(singleJsoIntf).getQualifiedSourceName());
  }
  if (jprogram.typeOracle.isInteropEnabled()) {
    nextType:     for (    com.google.gwt.dev.javac.typemodel.JClassType type : typeOracle.getTypes()) {
      for (      Annotation ann : type.getAnnotations()) {
        if (ann.annotationType().getName().equals(JS_EXPORT_ANN)) {
          allRootTypes.add(type.getQualifiedSourceName());
          continue nextType;
        }
      }
      if (isJsType(type)) {
        allRootTypes.add(type.getQualifiedSourceName());
      }
    }
  }
}

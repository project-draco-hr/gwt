{
  JsArrayLiteral permProps=new JsArrayLiteral(SourceOrigin.UNKNOWN);
  for (  ImmutableMap<String,String> propMap : props.findEmbeddedProperties(logger)) {
    JsArrayLiteral entryList=new JsArrayLiteral(SourceOrigin.UNKNOWN);
    for (    Entry<String,String> entry : propMap.entrySet()) {
      JsArrayLiteral pair=new JsArrayLiteral(SourceOrigin.UNKNOWN);
      pair.getExpressions().add(new JsStringLiteral(SourceOrigin.UNKNOWN,entry.getKey()));
      pair.getExpressions().add(new JsStringLiteral(SourceOrigin.UNKNOWN,entry.getValue()));
      entryList.getExpressions().add(pair);
    }
    permProps.getExpressions().add(entryList);
  }
  JsName permPropsName=jsProgram.getScope().findExistingUnobfuscatableName("$permProps");
  JsExpression assign=new JsBinaryOperation(SourceOrigin.UNKNOWN,JsBinaryOperator.ASG,new JsNameRef(SourceOrigin.UNKNOWN,permPropsName),permProps);
  jsProgram.getGlobalBlock().getStatements().add(0,new JsExprStmt(SourceOrigin.UNKNOWN,assign));
}

{
  JsArrayLiteral permProps=new JsArrayLiteral(SourceOrigin.UNKNOWN);
  for (  ImmutableMap<String,String> propMap : props.findEmbeddedProperties(logger)) {
    JsArrayLiteral entryList=new JsArrayLiteral(SourceOrigin.UNKNOWN);
    for (    Entry<String,String> entry : propMap.entrySet()) {
      JsArrayLiteral pair=new JsArrayLiteral(SourceOrigin.UNKNOWN);
      pair.getExpressions().add(new JsStringLiteral(SourceOrigin.UNKNOWN,entry.getKey()));
      pair.getExpressions().add(new JsStringLiteral(SourceOrigin.UNKNOWN,entry.getValue()));
      entryList.getExpressions().add(pair);
    }
    permProps.getExpressions().add(entryList);
  }
  JsVar var=new JsVar(SourceOrigin.UNKNOWN,jsProgram.getScope().findExistingUnobfuscatableName("$permProps"));
  var.setInitExpr(permProps);
  JsVars vars=new JsVars(SourceOrigin.UNKNOWN);
  vars.add(var);
  jsProgram.getGlobalBlock().getStatements().add(0,vars);
}

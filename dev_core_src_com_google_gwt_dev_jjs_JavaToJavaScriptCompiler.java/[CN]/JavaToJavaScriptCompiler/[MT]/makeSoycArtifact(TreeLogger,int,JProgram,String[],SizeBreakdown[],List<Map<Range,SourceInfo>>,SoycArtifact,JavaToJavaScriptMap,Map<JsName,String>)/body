{
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  PerfLogger.start("Recording SOYC output");
  PerfLogger.start("Record split points");
  SplitPointRecorder.recordSplitPoints(jprogram,baos,logger);
  SoycArtifact splitPoints=new SoycArtifact("splitPoints" + permutationId + ".xml.gz",baos.toByteArray());
  PerfLogger.end();
  SoycArtifact sizeMaps=null;
  SoycArtifact detailedStories=null;
  if (sizeBreakdowns != null) {
    PerfLogger.start("Record size map");
    baos.reset();
    SizeMapRecorder.recordMap(logger,baos,sizeBreakdowns,jjsmap,obfuscateMap);
    sizeMaps=new SoycArtifact("stories" + permutationId + ".xml.gz",baos.toByteArray());
    PerfLogger.end();
  }
  if (sourceInfoMaps != null) {
    PerfLogger.start("Record detailed stories");
    baos.reset();
    StoryRecorder.recordStories(logger,baos,sourceInfoMaps,js);
    detailedStories=new SoycArtifact("detailedStories" + permutationId + ".xml.gz",baos.toByteArray());
    PerfLogger.end();
  }
  PerfLogger.end();
  return new StandardCompilationAnalysis(dependencies,sizeMaps,splitPoints,detailedStories);
}

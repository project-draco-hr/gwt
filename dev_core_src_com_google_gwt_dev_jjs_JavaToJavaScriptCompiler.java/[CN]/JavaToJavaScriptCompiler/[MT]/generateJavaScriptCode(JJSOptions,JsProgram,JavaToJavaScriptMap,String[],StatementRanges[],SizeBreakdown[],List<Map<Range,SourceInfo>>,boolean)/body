{
  for (int i=0; i < js.length; i++) {
    DefaultTextOutput out=new DefaultTextOutput(options.getOutput().shouldMinimize());
    JsSourceGenerationVisitorWithSizeBreakdown v;
    if (sourceInfoMaps != null) {
      v=new JsReportGenerationVisitor(out,jjsMap);
    }
 else {
      v=new JsSourceGenerationVisitorWithSizeBreakdown(out,jjsMap);
    }
    v.accept(jsProgram.getFragmentBlock(i));
    JsFunctionClusterer clusterer=new JsFunctionClusterer(out.toString(),v.getStatementRanges());
    if (options.getOutput() == JsOutputOption.OBFUSCATED) {
      clusterer.exec();
    }
    JsIEBlockTextTransformer ieXformer=new JsIEBlockTextTransformer(clusterer);
    if (splitBlocks) {
      ieXformer.exec();
    }
    js[i]=ieXformer.getJs();
    if (sizeBreakdowns != null) {
      sizeBreakdowns[i]=v.getSizeBreakdown();
    }
    if (sourceInfoMaps != null) {
      sourceInfoMaps.add(((JsReportGenerationVisitor)v).getSourceInfoMap());
    }
    ranges[i]=ieXformer.getStatementRanges();
  }
}

{
  Event event=SpeedTracerLogger.start(CompilerEventType.UNIFY_AST);
  RebindPermutationOracle rpo=precompilationContext.getRebindPermutationOracle();
  String[] entryPointTypeNames=precompilationContext.getEntryPoints();
  String[] additionalRootTypes=precompilationContext.getAdditionalRootTypes();
  Set<String> allRootTypes=computeRootTypes(entryPointTypeNames,additionalRootTypes,rpo.getCompilationState());
  String entryMethodHolderTypeName=buildEntryMethodHolder(rpo.getGeneratorContext(),entryPointTypeNames,allRootTypes);
  UnifyAst unifyAst=new UnifyAst(logger,compilerContext,jprogram,jsProgram,precompilationContext);
  unifyAst.addRootTypes(allRootTypes);
  if (entryMethodHolderTypeName != null) {
    synthesizeEntryMethodHolderInit(unifyAst,entryPointTypeNames,entryMethodHolderTypeName);
  }
  if (entryMethodHolderTypeName != null) {
    jprogram.addEntryMethod(jprogram.getIndexedMethod(SourceName.getShortClassName(entryMethodHolderTypeName) + ".init"));
  }
  unifyAst.exec();
  event.end();
}

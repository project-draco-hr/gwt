{
  SourceInfo sourceInfo=program.createSourceInfoSynthetic(JavaToJavaScriptCompiler.class,"Bootstrap method");
  JMethod bootStrapMethod=program.createMethod(sourceInfo,"init".toCharArray(),program.getIndexedType("EntryMethodHolder"),program.getTypeVoid(),false,true,true,false,false);
  bootStrapMethod.freezeParamTypes();
  JMethodBody body=(JMethodBody)bootStrapMethod.getBody();
  JBlock block=body.getBlock();
  for (  String mainClassName : mainClassNames) {
    block.addStmt(makeStatsCalls(program,mainClassName));
    JDeclaredType mainType=program.getFromTypeMap(mainClassName);
    if (mainType == null) {
      logger.log(TreeLogger.ERROR,"Could not find module entry point class '" + mainClassName + "'",null);
      throw new UnableToCompleteException();
    }
    JMethod mainMethod=findMainMethod(mainType);
    if (mainMethod != null && mainMethod.isStatic()) {
      JMethodCall onModuleLoadCall=new JMethodCall(null,null,mainMethod);
      block.addStmt(onModuleLoadCall.makeStatement());
      continue;
    }
    String[] resultTypeNames=rpo.getAllPossibleRebindAnswers(logger,mainClassName);
    List<JClassType> resultTypes=new ArrayList<JClassType>();
    List<JExpression> entryCalls=new ArrayList<JExpression>();
    for (    String resultTypeName : resultTypeNames) {
      JDeclaredType resultType=program.getFromTypeMap(resultTypeName);
      if (resultType == null) {
        logger.log(TreeLogger.ERROR,"Could not find module entry point class '" + resultTypeName + "' after rebinding from '"+ mainClassName+ "'",null);
        throw new UnableToCompleteException();
      }
      JMethodCall onModuleLoadCall=createReboundModuleLoad(logger,resultType,mainClassName);
      resultTypes.add((JClassType)resultType);
      entryCalls.add(onModuleLoadCall);
    }
    if (resultTypes.size() == 1) {
      block.addStmt(entryCalls.get(0).makeStatement());
    }
 else {
      JReboundEntryPoint reboundEntryPoint=new JReboundEntryPoint(mainType.getSourceInfo(),mainType,resultTypes,entryCalls);
      block.addStmt(reboundEntryPoint);
    }
  }
  program.addEntryMethod(bootStrapMethod);
}

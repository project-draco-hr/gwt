{
  Event optimizeEvent=SpeedTracerLogger.start(CompilerEventType.OPTIMIZE);
  jprogram.beginOptimizations();
  List<OptimizerStats> allOptimizerStats=new ArrayList<OptimizerStats>();
  int counter=0;
  while (true) {
    counter++;
    if (Thread.interrupted()) {
      optimizeEvent.end();
      throw new InterruptedException();
    }
    maybeDumpAST(jprogram);
    OptimizerStats stats=optimizeLoop("Pass " + counter,jprogram,options.isAggressivelyOptimize());
    allOptimizerStats.add(stats);
    if (!stats.didChange()) {
      break;
    }
  }
  if (options.isAggressivelyOptimize()) {
    allOptimizerStats.add(DataflowOptimizer.exec(jprogram));
  }
  if (JProgram.isTracingEnabled()) {
    for (    OptimizerStats stats : allOptimizerStats) {
      System.out.println(stats.prettyPrint());
    }
  }
  optimizeEvent.end();
}

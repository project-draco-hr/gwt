{
  Event optimizeEvent=SpeedTracerLogger.start(CompilerEventType.OPTIMIZE);
  List<OptimizerStats> allOptimizerStats=new ArrayList<OptimizerStats>();
  int counter=0;
  int optimizationLevel=options.getOptimizationLevel();
  while (true) {
    counter++;
    if (optimizationLevel < OptionOptimize.OPTIMIZE_LEVEL_MAX && counter > optimizationLevel) {
      break;
    }
    if (Thread.interrupted()) {
      optimizeEvent.end();
      throw new InterruptedException();
    }
    AstDumper.maybeDumpAST(jprogram);
    OptimizerStats stats=optimizeLoop("Pass " + counter,jprogram,options.isAggressivelyOptimize());
    allOptimizerStats.add(stats);
    if (!stats.didChange()) {
      break;
    }
  }
  if (options.isAggressivelyOptimize()) {
    allOptimizerStats.add(DataflowOptimizer.exec(jprogram));
  }
  if (JProgram.isTracingEnabled()) {
    System.out.println("");
    System.out.println("                Java Optimization Stats");
    System.out.println("");
    for (    OptimizerStats stats : allOptimizerStats) {
      System.out.println(stats.prettyPrint());
    }
  }
  optimizeEvent.end();
}

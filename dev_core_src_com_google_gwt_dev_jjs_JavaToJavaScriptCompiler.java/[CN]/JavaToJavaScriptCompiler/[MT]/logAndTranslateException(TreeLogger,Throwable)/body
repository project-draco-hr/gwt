{
  if (e instanceof UnableToCompleteException) {
    return (UnableToCompleteException)e;
  }
 else   if (e instanceof InternalCompilerException) {
    TreeLogger topBranch=logger.branch(TreeLogger.ERROR,"An internal compiler exception occurred",e);
    List<NodeInfo> nodeTrace=((InternalCompilerException)e).getNodeTrace();
    for (    NodeInfo nodeInfo : nodeTrace) {
      SourceInfo info=nodeInfo.getSourceInfo();
      String msg;
      if (info != null) {
        String fileName=info.getFileName();
        fileName=fileName.substring(fileName.lastIndexOf('/') + 1);
        fileName=fileName.substring(fileName.lastIndexOf('\\') + 1);
        msg="at " + fileName + "("+ info.getStartLine()+ "): ";
      }
 else {
        msg="<no source info>: ";
      }
      String description=nodeInfo.getDescription();
      if (description != null) {
        msg+=description;
      }
 else {
        msg+="<no description available>";
      }
      TreeLogger nodeBranch=topBranch.branch(TreeLogger.ERROR,msg,null);
      String className=nodeInfo.getClassName();
      if (className != null && logger.isLoggable(TreeLogger.INFO)) {
        nodeBranch.log(TreeLogger.INFO,className,null);
      }
    }
    return new UnableToCompleteException();
  }
 else   if (e instanceof VirtualMachineError) {
    throw (VirtualMachineError)e;
  }
 else {
    logger.log(TreeLogger.ERROR,"Unexpected internal compiler error",e);
    return new UnableToCompleteException();
  }
}

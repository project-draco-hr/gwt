{
  Map<JsName,JsLiteral> internedLiteralByVariableName;
  try {
switch (options.getOutput()) {
case OBFUSCATED:
      internedLiteralByVariableName=runObfuscateNamer(properties);
    break;
case PRETTY:
  internedLiteralByVariableName=runPrettyNamer(properties.getConfigurationProperties(),jjsmap);
break;
case DETAILED:
internedLiteralByVariableName=runDetailedNamer(properties.getConfigurationProperties());
break;
default :
throw new InternalCompilerException("Unknown output mode");
}
}
 catch (IllegalNameException e) {
logger.log(TreeLogger.ERROR,e.getMessage(),e);
throw new UnableToCompleteException();
}
return internedLiteralByVariableName == null ? ImmutableMap.<JsName,JsLiteral>of() : internedLiteralByVariableName;
}

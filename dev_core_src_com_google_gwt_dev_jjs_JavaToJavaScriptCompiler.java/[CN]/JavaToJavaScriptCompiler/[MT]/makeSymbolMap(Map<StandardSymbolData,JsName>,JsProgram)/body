{
  final Map<JsName,Integer> nameToFragment=new HashMap<JsName,Integer>();
  for (int i=0; i < jsProgram.getFragmentCount(); i++) {
    final Integer fragId=i;
    new JsVisitor(){
      @Override public void endVisit(      JsFunction x,      JsContext ctx){
        if (x.getName() != null) {
          nameToFragment.put(x.getName(),fragId);
        }
      }
    }
.accept(jsProgram.getFragmentBlock(i));
  }
  SymbolData[] result=new SymbolData[symbolTable.size()];
  int i=0;
  for (  Map.Entry<StandardSymbolData,JsName> entry : symbolTable.entrySet()) {
    StandardSymbolData symbolData=entry.getKey();
    symbolData.setSymbolName(entry.getValue().getShortIdent());
    Integer fragNum=nameToFragment.get(entry.getValue());
    if (fragNum != null) {
      symbolData.setFragmentNumber(fragNum);
    }
    result[i++]=symbolData;
  }
  return result;
}

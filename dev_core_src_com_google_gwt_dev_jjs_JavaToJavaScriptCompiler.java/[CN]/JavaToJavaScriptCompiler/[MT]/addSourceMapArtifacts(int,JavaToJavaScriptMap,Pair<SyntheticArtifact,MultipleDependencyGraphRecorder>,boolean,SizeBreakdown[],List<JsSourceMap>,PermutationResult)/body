{
  if (options.isJsonSoycEnabled()) {
    if (options.isClosureCompilerEnabled()) {
      logger.log(TreeLogger.WARN,"Incompatible options: -XenableClosureCompiler and " + "-XjsonSoyc; ignoring -XjsonSoyc.");
    }
 else {
      permutationResult.addArtifacts(EntityRecorder.makeSoycArtifacts(permutationId,sourceInfoMaps,options.getSourceMapFilePrefix(),jjsmap,sizeBreakdowns,((DependencyGraphRecorder)dependenciesAndRecorder.getRight()),jprogram));
    }
  }
 else   if (isSourceMapsEnabled) {
    if (options.isClosureCompilerEnabled()) {
      logger.log(TreeLogger.WARN,"Incompatible options: -XenableClosureCompiler and " + "compiler.useSourceMaps=true; ignoring compiler.useSourceMaps=true.");
    }
 else {
      logger.log(TreeLogger.INFO,"Source Maps Enabled");
      permutationResult.addArtifacts(SourceMapRecorder.exec(permutationId,sourceInfoMaps,options.getSourceMapFilePrefix()));
    }
  }
}

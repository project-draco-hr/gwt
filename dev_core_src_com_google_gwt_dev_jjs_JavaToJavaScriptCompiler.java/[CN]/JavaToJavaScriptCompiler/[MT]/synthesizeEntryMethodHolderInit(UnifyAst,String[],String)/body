{
  JDeclaredType entryMethodHolderType=unifyAst.findType(entryMethodHolderTypeName,unifyAst.getSourceNameBasedTypeLocator());
  JDeclaredType gwtType=unifyAst.findType("com.google.gwt.core.client.GWT",unifyAst.getSourceNameBasedTypeLocator());
  JDeclaredType entryPointType=unifyAst.findType("com.google.gwt.core.client.EntryPoint",unifyAst.getSourceNameBasedTypeLocator());
  JMethod initMethod=entryMethodHolderType.findMethod("init()V",false);
  JMethod gwtCreateMethod=gwtType.findMethod("create(Ljava/lang/Class;)Ljava/lang/Object;",false);
  JBlock initMethodBlock=((JMethodBody)initMethod.getBody()).getBlock();
  SourceInfo origin=initMethodBlock.getSourceInfo().makeChild();
  for (  String entryPointTypeName : entryPointTypeNames) {
    JDeclaredType specificEntryPointType=unifyAst.findType(entryPointTypeName,unifyAst.getSourceNameBasedTypeLocator());
    if (specificEntryPointType == null) {
      logger.log(TreeLogger.ERROR,"Could not find module entry point class '" + entryPointTypeName + "'",null);
      throw new UnableToCompleteException();
    }
    JMethod onModuleLoadMethod=entryPointType.findMethod("onModuleLoad()V",true);
    JMethod specificOnModuleLoadMethod=specificEntryPointType.findMethod("onModuleLoad()V",true);
    if (specificOnModuleLoadMethod != null && specificOnModuleLoadMethod.isStatic()) {
      JMethodCall staticOnModuleLoadCall=new JMethodCall(origin,null,specificOnModuleLoadMethod);
      initMethodBlock.addStmt(staticOnModuleLoadCall.makeStatement());
    }
 else {
      JClassLiteral entryPointTypeClassLiteral=new JClassLiteral(origin,specificEntryPointType);
      JMethodCall createInstanceCall=new JMethodCall(origin,null,gwtCreateMethod,entryPointTypeClassLiteral);
      JCastOperation castToEntryPoint=new JCastOperation(origin,entryPointType,createInstanceCall);
      JMethodCall instanceOnModuleLoadCall=new JMethodCall(origin,castToEntryPoint,onModuleLoadMethod);
      initMethodBlock.addStmt(instanceOnModuleLoadCall.makeStatement());
    }
  }
}

{
  JMethod bootStrapMethod=program.createMethod("init".toCharArray(),null,program.getTypeVoid(),false,true,true,false,false);
  bootStrapMethod.freezeParamTypes();
  for (int i=0; i < mainClassNames.length; ++i) {
    String mainClassName=mainClassNames[i];
    JReferenceType referenceType=program.getFromTypeMap(mainClassName);
    if (referenceType == null) {
      logger.log(TreeLogger.ERROR,"Could not find module entry point class '" + mainClassName + "'",null);
      throw new UnableToCompleteException();
    }
    if (!(referenceType instanceof JClassType)) {
      logger.log(TreeLogger.ERROR,"Module entry point class '" + mainClassName + "' must be a class",null);
      throw new UnableToCompleteException();
    }
    JClassType mainClass=(JClassType)referenceType;
    JMethod mainMethod=null;
    outer:     for (JClassType it=mainClass; it != null; it=it.extnds) {
      for (int j=0; j < it.methods.size(); ++j) {
        JMethod method=(JMethod)it.methods.get(j);
        if (method.getName().equals("onModuleLoad")) {
          mainMethod=method;
          break outer;
        }
      }
    }
    if (mainMethod == null) {
      logger.log(TreeLogger.ERROR,"Could not find entry method 'onModuleLoad' method in entry-point class " + mainClassName,null);
      throw new UnableToCompleteException();
    }
    if (mainMethod.params.size() > 0) {
      logger.log(TreeLogger.ERROR,"Entry method 'onModuleLoad' in entry-point class " + mainClassName + "must take zero arguments",null);
      throw new UnableToCompleteException();
    }
    if (mainMethod.isAbstract()) {
      logger.log(TreeLogger.ERROR,"Entry method 'onModuleLoad' in entry-point class " + mainClassName + "must not be abstract",null);
      throw new UnableToCompleteException();
    }
    JExpression qualifier=null;
    if (!mainMethod.isStatic()) {
      JMethod noArgCtor=null;
      for (int j=0; j < mainClass.methods.size(); ++j) {
        JMethod ctor=(JMethod)mainClass.methods.get(j);
        if (ctor.getName().equals(mainClass.getShortName())) {
          if (ctor.params.size() == 0) {
            noArgCtor=ctor;
          }
        }
      }
      if (noArgCtor == null) {
        logger.log(TreeLogger.ERROR,"No default (zero argument) constructor could be found in entry-point class " + mainClassName + " to qualify a call to non-static entry method 'onModuleLoad'",null);
        throw new UnableToCompleteException();
      }
      JNewInstance newInstance=new JNewInstance(program,mainClass);
      qualifier=new JMethodCall(program,newInstance,noArgCtor);
    }
    JMethodCall onModuleLoadCall=new JMethodCall(program,qualifier,mainMethod);
    onModuleLoadCall.setCanBePolymorphic(true);
    bootStrapMethod.body.statements.add(new JExpressionStatement(program,onModuleLoadCall));
  }
  program.addEntryMethod(bootStrapMethod);
}

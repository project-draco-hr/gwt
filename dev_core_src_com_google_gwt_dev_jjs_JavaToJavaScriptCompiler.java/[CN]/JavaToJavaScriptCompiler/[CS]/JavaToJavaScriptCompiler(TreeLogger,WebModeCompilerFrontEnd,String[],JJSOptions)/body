{
  if (declEntryPts.length == 0) {
    throw new IllegalArgumentException("entry point(s) required");
  }
  this.options=new JJSOptions(compilerOptions);
  this.declEntryPoints=declEntryPts;
  if (!options.isValidateOnly()) {
    RebindPermutationOracle rpo=compiler.getRebindPermutationOracle();
    Set<String> allEntryPoints=new TreeSet<String>();
    for (    String element : declEntryPts) {
      String[] all=rpo.getAllPossibleRebindAnswers(logger,element);
      Util.addAll(allEntryPoints,all);
    }
    allEntryPoints.addAll(JProgram.CODEGEN_TYPES_SET);
    allEntryPoints.addAll(JProgram.INDEX_TYPES_SET);
    allEntryPoints.add("java.lang.Object");
    allEntryPoints.add("java.lang.String");
    allEntryPoints.add("java.lang.Iterable");
    declEntryPts=allEntryPoints.toArray(new String[0]);
  }
  goldenCuds=compiler.getCompilationUnitDeclarations(logger,declEntryPts);
  checkForErrors(logger,false);
}

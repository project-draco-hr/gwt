{
  if (declEntryPts.length == 0) {
    throw new IllegalArgumentException("entry point(s) required");
  }
  this.options=new JJSOptions(compilerOptions);
  this.declEntryPoints=declEntryPts;
  if (!options.isValidateOnly()) {
    RebindPermutationOracle rpo=compiler.getRebindPermutationOracle();
    Set<String> allEntryPoints=new TreeSet<String>();
    for (    String element : declEntryPts) {
      String[] all=rpo.getAllPossibleRebindAnswers(logger,element);
      Util.addAll(allEntryPoints,all);
    }
    allEntryPoints.add("com.google.gwt.lang.Array");
    allEntryPoints.add("com.google.gwt.lang.Cast");
    allEntryPoints.add("com.google.gwt.lang.Exceptions");
    allEntryPoints.add("com.google.gwt.lang.Stats");
    allEntryPoints.add("java.lang.Object");
    allEntryPoints.add("java.lang.String");
    allEntryPoints.add("java.lang.Iterable");
    declEntryPts=allEntryPoints.toArray(new String[0]);
  }
  goldenCuds=compiler.getCompilationUnitDeclarations(logger,declEntryPts);
  checkForErrors(logger,false);
  lastModified=0;
  CompilationUnitProvider newestCup=null;
  for (  CompilationUnitDeclaration cud : goldenCuds) {
    ICompilationUnitAdapter icua=(ICompilationUnitAdapter)cud.compilationResult.compilationUnit;
    CompilationUnitProvider cup=icua.getCompilationUnitProvider();
    long cupLastModified=cup.getLastModified();
    if (cupLastModified > lastModified) {
      newestCup=cup;
      lastModified=cupLastModified;
    }
  }
  if (newestCup != null) {
    String loc=newestCup.getLocation();
    String msg="Newest compilation unit is '" + loc + "'";
    logger.log(TreeLogger.DEBUG,msg,null);
  }
}

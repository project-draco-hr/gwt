def test_annotations(self):
    self._run_test(idlparser.FREMONTCUT_SYNTAX, '@Ano1 @Ano2() @Ano3(x=1) @Ano4(x,y=2) interface I {};', {'interfaces': [{'javascript_binding_name': 'I', 'doc_js_name': 'I', 'id': 'I', 'annotations': {'Ano4': {'y': '2', 'x': None, }, 'Ano1': {}, 'Ano2': {}, 'Ano3': {'x': '1', }, }, }], })
    self._run_test(idlparser.FREMONTCUT_SYNTAX, 'interface I : @Ano1 J {\n        @Ano2 attribute int someAttr;\n        @Ano3 void someOp();\n        @Ano3 const int someConst = 0;\n      };', {'interfaces': [{'operations': [{'annotations': {'Ano3': {}, }, 'type': {'id': 'void', }, 'id': 'someOp', 'doc_js_interface_name': 'I', }], 'javascript_binding_name': 'I', 'parents': [{'type': {'id': 'J', }, 'annotations': {'Ano1': {}, }, }], 'attributes': [{'annotations': {'Ano2': {}, }, 'type': {'id': 'int', }, 'id': 'someAttr', 'doc_js_interface_name': 'I', }], 'doc_js_name': 'I', 'id': 'I', 'constants': [{'annotations': {'Ano3': {}, }, 'type': {'id': 'int', }, 'id': 'someConst', 'value': '0', 'doc_js_interface_name': 'I', }], }], })

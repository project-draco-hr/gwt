{
  int jsFalse=LowLevelSaf.toJsBoolean(jsContext,false);
  LowLevelSaf.pushJsContext(jsContext);
  try {
    if (!LowLevelSaf.isDispatchObject(jsContext,jsthis)) {
      return jsFalse;
    }
    Object thisObj=LowLevelSaf.unwrapDispatchObject(jsContext,jsthis);
    if (!(thisObj instanceof ExternalObject)) {
      return jsFalse;
    }
    if (jsargs.length < 1) {
      reportIncorrectInvocation("initModule",1,jsargs.length);
      return jsFalse;
    }
    if (!LowLevelSaf.isJsString(jsContext,jsargs[0])) {
      return jsFalse;
    }
    String moduleName=LowLevelSaf.toString(jsContext,jsargs[0]);
    boolean result=((ExternalObject)thisObj).initModule(moduleName);
    return LowLevelSaf.toJsBoolean(jsContext,result);
  }
 catch (  Throwable e) {
    return jsFalse;
  }
 finally {
    for (    int jsarg : jsargs) {
      LowLevelSaf.gcUnprotect(jsContext,jsarg);
    }
    LowLevelSaf.gcUnprotect(jsContext,jsthis);
    LowLevelSaf.popJsContext(jsContext);
  }
}

{
  boolean hasBackRef=hasBackRef(x);
  if (hasBackRef && isStarted(x)) {
    push(makeBackRef(x));
    return false;
  }
  byte[] currentBackRef=begin(x);
  byte[] constructorFunction=constructorFunction(x);
  String seedName=clientOracle.getSeedName(x.getTargetClass());
  if (seedName == null) {
    throw new IncompatibleRemoteServiceException("The client cannot create type " + x.getTargetClass());
  }
  push(constructorFunction);
  lparen();
  if (hasBackRef) {
    push(currentBackRef);
    eq();
  }
  _new();
  push(seedName);
  for (  SetCommand setter : x.getSetters()) {
    comma();
    accept(setter.getValue());
  }
  rparen();
  commit(x,false);
  if (!hasBackRef) {
    forget(x);
  }
  return false;
}

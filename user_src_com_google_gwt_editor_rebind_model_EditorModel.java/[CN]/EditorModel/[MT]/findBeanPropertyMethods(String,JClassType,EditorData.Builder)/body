{
  StringBuilder interstitialGetters=new StringBuilder();
  StringBuilder interstitialGuard=new StringBuilder("true");
  String[] parts=path.split(Pattern.quote("."));
  String setterName=null;
  JClassType lookingAt=proxyType;
  part:   for (int i=0, j=parts.length; i < j; i++) {
    if (parts[i].length() == 0) {
      continue;
    }
    boolean lastPart=i == j - 1;
    boolean foundGetterForPart=false;
    for (    JMethod maybeSetter : lookingAt.getInheritableMethods()) {
      JBeanMethod which=JBeanMethod.which(maybeSetter);
      if (JBeanMethod.CALL.equals(which)) {
        continue;
      }
      if (!which.inferName(maybeSetter).equals(parts[i])) {
        continue;
      }
switch (which) {
case GET:
{
          JType returnType=maybeSetter.getReturnType();
          lookingAt=returnType.isClassOrInterface();
          if (!lastPart && lookingAt == null) {
            poison(foundPrimitiveMessage(returnType,interstitialGetters.toString(),path));
            return;
          }
          interstitialGetters.append(".").append(maybeSetter.getName()).append("()");
          interstitialGuard.append(" && %1$s").append(interstitialGetters).append(" != null");
          builder.propertyOwnerType(maybeSetter.getEnclosingType());
          foundGetterForPart=true;
          if (!lastPart) {
            continue part;
          }
          break;
        }
case SET:
case SET_BUILDER:
{
        if (lastPart && setterName == null) {
          JType setterParamType=maybeSetter.getParameters()[0].getType();
          if (setterParamType.isPrimitive() != null) {
            setterParamType=oracle.findType(setterParamType.isPrimitive().getQualifiedBoxedSourceName());
          }
          boolean matches=setterParamType.isClassOrInterface().isAssignableFrom(propertyType);
          if (matches) {
            setterName=maybeSetter.getName();
          }
        }
        break;
      }
  }
}
if (!foundGetterForPart) {
  poison(noGetterMessage(path,proxyType));
  return;
}
}
int idx=interstitialGetters.lastIndexOf(".");
builder.beanOwnerExpression(idx <= 0 ? "" : interstitialGetters.substring(0,idx));
if (parts.length > 1) {
interstitialGuard.delete(interstitialGuard.lastIndexOf(" &&"),interstitialGuard.length());
builder.beanOwnerGuard(interstitialGuard.substring(8));
}
if (interstitialGetters.length() > 0) {
builder.getterExpression("." + interstitialGetters.substring(idx + 1,interstitialGetters.length() - 2) + "()");
}
 else {
builder.getterExpression("");
}
builder.setterName(setterName);
}

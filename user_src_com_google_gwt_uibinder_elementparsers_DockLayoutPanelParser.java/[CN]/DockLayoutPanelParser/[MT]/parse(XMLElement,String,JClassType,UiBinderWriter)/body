{
  if (type != getSplitLayoutPanelType(writer)) {
    JEnumType unitEnumType=writer.getOracle().findType(Unit.class.getCanonicalName()).isEnum();
    String unit=elem.consumeAttributeWithDefault("unit",String.format("%s.%s",unitEnumType.getQualifiedSourceName(),"PX"),unitEnumType);
    writer.setFieldInitializerAsConstructor(fieldName,unit);
  }
  CenterChild center=null;
  for (  XMLElement child : elem.consumeChildElements()) {
    if (!isValidChildElement(elem,child)) {
      writer.die(elem,"Child must be one of " + "<%1$s:north>, <%1$s:south>, <%1$s:east>, <%1$s:west> or <%1$s:center>, " + "but found %2$s",elem.getPrefix(),child);
    }
    XMLElement widget=child.consumeSingleChildElement();
    if (!writer.isWidgetElement(widget)) {
      writer.die(elem,"%s must contain a widget, but found %s",child,widget);
    }
    FieldWriter widgetField=writer.parseElementToField(widget);
    if (child.getLocalName().equals("center")) {
      if (center != null) {
        writer.die(elem,"Only one <%s:center> is allowed",elem.getPrefix());
      }
      center=new CenterChild(child,widgetField.getNextReference());
    }
 else {
      String size=child.consumeRequiredDoubleAttribute("size");
      writer.addStatement("%s.%s(%s, %s);",fieldName,addMethodName(child),widgetField.getNextReference(),size);
    }
  }
  if (center != null) {
    writer.addStatement("%s.%s(%s);",fieldName,addMethodName(center.child),center.widgetName);
  }
}

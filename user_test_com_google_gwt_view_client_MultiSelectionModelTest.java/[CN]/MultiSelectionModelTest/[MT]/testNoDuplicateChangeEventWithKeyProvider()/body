{
  ProvidesKey<String> keyProvider=new ProvidesKey<String>(){
    public Object getKey(    String item){
      return item.toUpperCase();
    }
  }
;
  MultiSelectionModel<String> model=createSelectionModel(keyProvider);
  SelectionChangeEvent.Handler handler=new SelectionChangeEvent.Handler(){
    public void onSelectionChange(    SelectionChangeEvent event){
      fail();
    }
  }
;
  model.setSelected("test1",true);
  assertTrue(model.isSelected("test1"));
  model.addSelectionChangeHandler(handler);
  String replacement="TEST1";
  model.setSelected(replacement,true);
  assertTrue(model.isSelected(replacement));
  assertEquals(1,model.getSelectedSet().size());
  assertSame(replacement,model.getSelectedSet().iterator().next());
}

{
  errorLabel.setText("");
  person.setName(nameField.getText());
  Validator validator=GWT.create(SampleValidator.class);
  Set<ConstraintViolation<Person>> violations=validator.validate(person,Default.class,ClientGroup.class);
  if (!violations.isEmpty()) {
    StringBuffer errorMessage=new StringBuffer();
    for (    ConstraintViolation<Person> constraintViolation : violations) {
      if (errorMessage.length() == 0) {
        errorMessage.append('\n');
      }
      errorMessage.append(constraintViolation.getMessage());
    }
    errorLabel.setText(errorMessage.toString());
    return;
  }
  sendButton.setEnabled(false);
  textToServer.setText(person.getName());
  serverResponse.setText("");
  greetingService.greetServer(person,new AsyncCallback<SafeHtml>(){
    public void onFailure(    Throwable caught){
      if (caught instanceof ConstraintViolationException) {
        ConstraintViolationException violationException=(ConstraintViolationException)caught;
        Set<ConstraintViolation<?>> violations=violationException.getConstraintViolations();
        StringBuffer sb=new StringBuffer();
        for (        ConstraintViolation<?> constraintViolation : violations) {
          sb.append(constraintViolation.getPropertyPath().toString()).append(":").append(constraintViolation.getMessage()).append("\n");
        }
        errorLabel.setText(sb.toString());
        sendButton.setEnabled(true);
        sendButton.setFocus(true);
        return;
      }
      dialogBox.setText("Remote Procedure Call - Failure");
      serverResponse.addStyleName(style.error());
      serverResponse.setHTML(SERVER_ERROR);
      dialogBox.center();
      closeButton.setFocus(true);
    }
    public void onSuccess(    SafeHtml result){
      dialogBox.setText("Remote Procedure Call");
      serverResponse.removeStyleName(style.error());
      serverResponse.setHTML(result);
      dialogBox.center();
      closeButton.setFocus(true);
    }
  }
);
}

{
  int tempRgn=OS.NewRgn();
  if (OS.IsControlVisible(control)) {
    int childRgn=OS.NewRgn();
    int window=OS.GetControlOwner(control);
    short[] count=new short[1];
    int[] outControl=new int[1];
    OS.GetRootControl(window,outControl);
    int root=outControl[0];
    OS.GetControlRegion(root,(short)OS.kControlStructureMetaPart,visibleRgn);
    int tempControl=control, lastControl=0;
    while (tempControl != root) {
      OS.GetControlRegion(tempControl,(short)OS.kControlStructureMetaPart,tempRgn);
      if (OS.HIVIEW)       OS.HIViewConvertRegion(tempRgn,tempControl,root);
      OS.SectRgn(tempRgn,visibleRgn,visibleRgn);
      if (OS.EmptyRgn(visibleRgn))       break;
      if (clipChildren || tempControl != control) {
        OS.CountSubControls(tempControl,count);
        for (int i=0; i < count[0]; i++) {
          OS.GetIndexedSubControl(tempControl,(short)(OS.HIVIEW ? count[0] - i : i + 1),outControl);
          int child=outControl[0];
          if (child == lastControl)           break;
          if (!OS.IsControlVisible(child))           continue;
          OS.GetControlRegion(child,(short)OS.kControlStructureMetaPart,tempRgn);
          if (OS.HIVIEW)           OS.HIViewConvertRegion(tempRgn,child,root);
          OS.UnionRgn(tempRgn,childRgn,childRgn);
        }
      }
      lastControl=tempControl;
      OS.GetSuperControl(tempControl,outControl);
      tempControl=outControl[0];
    }
    OS.DiffRgn(visibleRgn,childRgn,visibleRgn);
    OS.DisposeRgn(childRgn);
  }
 else {
    OS.CopyRgn(tempRgn,visibleRgn);
  }
  OS.DisposeRgn(tempRgn);
}

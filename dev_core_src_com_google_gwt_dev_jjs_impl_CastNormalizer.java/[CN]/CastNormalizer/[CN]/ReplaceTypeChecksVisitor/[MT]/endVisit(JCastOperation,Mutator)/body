{
  JType toType=x.castType;
  if (toType instanceof JReferenceType) {
    JReferenceType refType=(JReferenceType)toType;
    JType argType=x.getExpression().getType();
    if (program.isJavaScriptObject(argType)) {
      ChangeList myChangeList=new ChangeList("Wrap a JavaScript Object");
      JMethod wrap=program.getSpecialMethod("Cast.wrapJSO");
      JMethodCall call=new JMethodCall(program,null,wrap,argType);
      myChangeList.addExpression(x.expr,call.args);
      JClassSeed seed=program.getLiteralClassSeed((JClassType)argType);
      myChangeList.addExpression(seed,call.args);
      myChangeList.replaceExpression(x.expr,call);
      changeList.add(myChangeList);
    }
    if (argType instanceof JClassType && program.typeOracle.canTriviallyCast((JClassType)argType,refType)) {
      changeList.replaceExpression(m,x.expr);
    }
 else {
      JMethod method=program.getSpecialMethod("Cast.dynamicCast");
      JMethodCall call=new JMethodCall(program,null,method,toType);
      replaceCast(call,refType,m,x.expr);
    }
  }
 else {
    boolean narrow=false, round=false;
    JPrimitiveType tByte=program.getTypePrimitiveByte();
    JPrimitiveType tChar=program.getTypePrimitiveChar();
    JPrimitiveType tShort=program.getTypePrimitiveShort();
    JPrimitiveType tInt=program.getTypePrimitiveInt();
    JPrimitiveType tLong=program.getTypePrimitiveLong();
    JPrimitiveType tFloat=program.getTypePrimitiveFloat();
    JPrimitiveType tDouble=program.getTypePrimitiveDouble();
    JType fromType=x.getExpression().getType();
    if (tByte == fromType) {
      if (tChar == toType) {
        narrow=true;
      }
    }
 else     if (tShort == fromType) {
      if (tByte == toType || tChar == toType) {
        narrow=true;
      }
    }
 else     if (tChar == fromType) {
      if (tByte == toType || tShort == toType) {
        narrow=true;
      }
    }
 else     if (tInt == fromType) {
      if (tByte == toType || tShort == toType || tChar == toType) {
        narrow=true;
      }
    }
 else     if (tLong == fromType) {
      if (tByte == toType || tShort == toType || tChar == toType || tInt == toType) {
        narrow=true;
      }
    }
 else     if (tFloat == fromType || tDouble == fromType) {
      if (tByte == toType || tShort == toType || tChar == toType || tInt == toType || tLong == toType) {
        round=true;
      }
    }
    ChangeList myChangeList;
    if (narrow || round) {
      String methodName="Cast." + (narrow ? "narrow_" : "round_") + toType.getName();
      myChangeList=new ChangeList("Replace '" + x + "' with a call to "+ methodName);
      JMethod castMethod=program.getSpecialMethod(methodName);
      JMethodCall call=new JMethodCall(program,null,castMethod);
      myChangeList.addExpression(x.expr,call.args);
      myChangeList.replaceExpression(m,call);
    }
 else {
      myChangeList=new ChangeList("Remove the cast from '" + x + "'");
      myChangeList.replaceExpression(m,x.expr);
    }
    changeList.add(myChangeList);
  }
}

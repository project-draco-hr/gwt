{
  if (method.isPackagePrivate()) {
    return;
  }
  Map<String,JMethod> polymorphicMethodsByExtendedSignature=polymorphicMethodsByExtendedSignatureByType.get(method.getEnclosingType());
  String packagePrivateSignature=computePackagePrivateSignature(method);
  JMethod packagePrivateOverriddenMethod=polymorphicMethodsByExtendedSignature.get(packagePrivateSignature);
  if (packagePrivateOverriddenMethod != null) {
    addOverridingMethod(packagePrivateOverriddenMethod,method);
    polymorphicMethodsByExtendedSignature.put(packagePrivateSignature,method);
  }
}

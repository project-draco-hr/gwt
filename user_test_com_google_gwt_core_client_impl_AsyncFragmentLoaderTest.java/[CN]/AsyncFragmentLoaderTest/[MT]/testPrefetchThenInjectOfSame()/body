{
  MockLoadStrategy reqs=new MockLoadStrategy();
  MockProgressLogger progress=new MockProgressLogger();
  int numEntries=20;
  AsyncFragmentLoader loader=new AsyncFragmentLoader(numEntries,new int[]{},reqs,progress,null);
  loader.startPrefetching();
  loader.inject(1,NULL_ERROR_HANDLER);
  reqs.assertFragmentsRequested(numEntries);
  progress.assertEvent("leftoversDownload",BEGIN,numEntries);
  loader.leftoversFragmentHasLoaded();
  reqs.assertFragmentsRequested(1);
  progress.assertEvent("leftoversDownload",END,numEntries);
  progress.assertEvent("download1",BEGIN,1);
  loader.fragmentHasLoaded(1);
  reqs.assertFragmentsRequested();
  progress.assertEvent("download1",END,1);
  progress.assertNoEvents();
  loader.setPrefetchQueue(2);
  reqs.assertFragmentsRequested(2);
  progress.assertEvent("download2",BEGIN,2);
  loader.inject(2,NULL_ERROR_HANDLER);
  loader.inject(3,NULL_ERROR_HANDLER);
  reqs.assertFragmentsRequested();
  progress.assertNoEvents();
  loader.fragmentHasLoaded(2);
  reqs.assertFragmentsRequested(3);
  progress.assertEvent("download2",END,2);
  progress.assertEvent("download3",BEGIN,3);
  loader.fragmentHasLoaded(3);
  reqs.assertFragmentsRequested();
  progress.assertEvent("download3",END,3);
  progress.assertNoEvents();
}

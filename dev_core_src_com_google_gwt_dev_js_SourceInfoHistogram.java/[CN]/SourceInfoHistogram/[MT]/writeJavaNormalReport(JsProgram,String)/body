{
  JavaNormalReportVisitor v=new JavaNormalReportVisitor(new SwitchTextOutput());
  v.accept(program);
  PrintWriter out;
  try {
    File outputPathDir=new File(outputPath);
    outputPathDir.mkdirs();
    out=new PrintWriter(new FileWriter(File.createTempFile("soyc","-java.html",outputPathDir)));
  }
 catch (  IOException e) {
    out=null;
  }
  out.println("<html><head>");
  out.println("<style>" + "* {font-family: monospace;}" + ".file {clear: both;}"+ ".file * {display: none;}"+ ".file .fileHeader, .file .fileHeader * {display: block; cursor: pointer;}"+ ".fileOpen .fileHeader {clear: both;}"+ ".fileOpen .javaLine {clear: both; float: left; white-space: pre; background: #efe;}"+ ".fileOpen .jsLine {outline: thin solid black; float: right; clear: right; white-space: pre; background: #ddd;}"+ ".story {display:none;}"+ "div.jsLine:hover .story{display:block; position: absolute; left:0; background: #eef;}"+ "</style>");
  out.println("</head><body>");
  out.println(String.format("<h1>Total bytes: %d</h1>",v.total));
  Map<Axis,Integer> totalsByAxis=new EnumMap<Axis,Integer>(Axis.class);
  for (  Map.Entry<Correlation,StringBuilder> entry : v.sourceByCorrelation.entrySet()) {
    Correlation c=entry.getKey();
    StringBuilder builder=entry.getValue();
    int count=builder.length();
    out.println("<div class=\"file\" onclick=\"this.className=(this.className=='file'?'fileOpen':'file')\">");
    out.println("<div class=\"fileHeader\">" + Util.escapeXml(c.toString()) + " : "+ count+ "</div>");
    out.print("<div class=\"jsLine\">");
    out.print(Util.escapeXml(builder.toString()));
    out.print("</div></div>");
    Axis axis=c.getAxis();
    Integer t=totalsByAxis.get(axis);
    if (t == null) {
      totalsByAxis.put(axis,count);
    }
 else {
      totalsByAxis.put(axis,t + count);
    }
  }
  out.println("<h1>Axis totals</h1>");
  for (  Map.Entry<Axis,Integer> entry : totalsByAxis.entrySet()) {
    out.println("<div>" + entry.getKey() + " : "+ entry.getValue()+ "</div>");
  }
  out.println("<h1>Cost of polymorphism</h1>");
  for (  Map.Entry<Correlation,StringBuilder> entry : v.sourceByAllCorrelation.entrySet()) {
    Correlation c=entry.getKey();
    StringBuilder builder=entry.getValue();
    int count=builder.length();
    StringBuilder uniqueOutput=v.sourceByCorrelation.get(c);
    int uniqueCount=uniqueOutput == null ? 0 : uniqueOutput.length();
    boolean bold=count != uniqueCount;
    out.println("<div class=\"file\" onclick=\"this.className=(this.className=='file'?'fileOpen':'file')\">");
    out.println("<div class=\"fileHeader\">" + (bold ? "<b>" : "") + Util.escapeXml(c.toString())+ " : "+ count+ " versus "+ uniqueCount+ "("+ (count - uniqueCount)+ ")"+ (bold ? "</b>" : "")+ "</div>");
    out.print("<div class=\"jsLine\">");
    out.print(Util.escapeXml(builder.toString()));
    out.print("</div></div>");
  }
  out.println("<h1>Done</h1>");
  out.println("</body></html>");
  out.close();
}

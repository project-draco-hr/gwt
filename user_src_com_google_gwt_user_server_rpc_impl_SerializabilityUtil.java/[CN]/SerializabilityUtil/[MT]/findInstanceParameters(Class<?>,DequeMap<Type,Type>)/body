{
  TypeVariable<?>[] instanceTypes=instanceClass.getTypeParameters();
  Type[] foundParameters=Arrays.copyOf(instanceTypes,instanceTypes.length,Type[].class);
  if (resolvedTypes == null) {
    return foundParameters;
  }
  for (int i=0; i < foundParameters.length; ++i) {
    Type capturedType=findActualType(foundParameters[i],resolvedTypes);
    if (capturedType != foundParameters[i]) {
      foundParameters[i]=capturedType;
      continue;
    }
    if (instanceClass.getGenericSuperclass() != null) {
      Type superParameter=findInstanceParameter(instanceTypes[i],instanceClass.getGenericSuperclass(),resolvedTypes);
      if (!(superParameter instanceof TypeVariable)) {
        foundParameters[i]=superParameter;
        continue;
      }
    }
    Type[] interfaceTypes=instanceClass.getGenericInterfaces();
    for (    Type interfaceType : interfaceTypes) {
      Type interfaceParameter=findInstanceParameter(instanceTypes[i],interfaceType,resolvedTypes);
      if (!(interfaceParameter instanceof TypeVariable)) {
        foundParameters[i]=interfaceParameter;
        break;
      }
    }
  }
  return foundParameters;
}

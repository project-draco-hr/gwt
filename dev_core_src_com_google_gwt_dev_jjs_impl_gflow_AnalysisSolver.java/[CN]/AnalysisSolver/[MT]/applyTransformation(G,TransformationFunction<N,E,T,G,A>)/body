{
  boolean didChange=false;
  for (  final N node : graph.getNodes()) {
    Transformation<T,G> transformation=transformationFunction.transform(node,graph,new AssumptionMap<E,A>(){
      @Override public A getAssumption(      E edge){
        Preconditions.checkArgument(graph.getStart(edge) == node || graph.getEnd(edge) == node);
        return getEdgeAssumption(graph,edge);
      }
      @Override public void setAssumption(      E edge,      A assumption){
        throw new IllegalStateException("Transformations should not change assumptions");
      }
    }
);
    if (transformation != null) {
      T actualizer=transformation.getGraphTransformer();
      Preconditions.checkNotNull(actualizer,"Null actualizer from: %s",transformationFunction);
      didChange=graph.transform(node,actualizer) || didChange;
    }
  }
  return didChange;
}

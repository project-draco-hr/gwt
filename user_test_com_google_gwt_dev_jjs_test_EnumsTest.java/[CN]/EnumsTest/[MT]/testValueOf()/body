{
  assertEquals(Basic.A,Basic.valueOf("A"));
  assertEquals(Basic.B,Basic.valueOf("B"));
  assertEquals(Basic.C,Basic.valueOf("C"));
  try {
    Basic.valueOf("D");
    fail("Basic.valueOf(\"D\") -- expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  assertEquals(Complex.A,Complex.valueOf("A"));
  assertEquals(Complex.B,Complex.valueOf("B"));
  assertEquals(Complex.C,Complex.valueOf("C"));
  try {
    Complex.valueOf("D");
    fail("Complex.valueOf(\"D\") -- expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  assertEquals(Subclassing.A,Subclassing.valueOf("A"));
  assertEquals(Subclassing.B,Subclassing.valueOf("B"));
  assertEquals(Subclassing.C,Subclassing.valueOf("C"));
  try {
    Subclassing.valueOf("D");
    fail("Subclassing.valueOf(\"D\") -- expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
}

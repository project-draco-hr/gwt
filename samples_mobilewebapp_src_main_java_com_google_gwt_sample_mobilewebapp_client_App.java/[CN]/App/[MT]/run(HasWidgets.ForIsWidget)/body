{
  parentView.add(shell);
  eventBus.addHandler(AddTaskEvent.TYPE,new AddTaskEvent.Handler(){
    @Override public void onAddTask(    AddTaskEvent event){
      placeController.goTo(TaskEditPlace.getTaskCreatePlace());
    }
  }
);
  eventBus.addHandler(ShowTaskEvent.TYPE,new ShowTaskEvent.Handler(){
    @Override public void onShowTask(    ShowTaskEvent event){
      TaskProxy task=event.getTask();
      placeController.goTo(TaskEditPlace.createTaskEditPlace(task.getId(),task));
    }
  }
);
  eventBus.addHandler(GoHomeEvent.TYPE,new GoHomeEvent.Handler(){
    @Override public void onGoHome(    GoHomeEvent event){
      placeController.goTo(new TaskListPlace(false));
    }
  }
);
  eventBus.addHandler(TaskSavedEvent.TYPE,new TaskSavedEvent.Handler(){
    @Override public void onTaskSaved(    TaskSavedEvent event){
      placeController.goTo(new TaskListPlace(true));
    }
  }
);
  eventBus.addHandler(EditingCanceledEvent.TYPE,new EditingCanceledEvent.Handler(){
    @Override public void onEditCanceled(    EditingCanceledEvent event){
      placeController.goTo(new TaskListPlace(false));
    }
  }
);
  GWT.setUncaughtExceptionHandler(new UncaughtExceptionHandler(){
    @Override public void onUncaughtException(    Throwable e){
      while (e instanceof UmbrellaException) {
        e=((UmbrellaException)e).getCauses().iterator().next();
      }
      Window.alert("An unexpected error occurred: " + e.getMessage());
      placeController.goTo(new TaskListPlace(false));
    }
  }
);
  reloadOnAuthenticationFailure.register(eventBus);
  initBrowserHistory(historyMapper,historyHandler,new TaskListPlace(true));
}

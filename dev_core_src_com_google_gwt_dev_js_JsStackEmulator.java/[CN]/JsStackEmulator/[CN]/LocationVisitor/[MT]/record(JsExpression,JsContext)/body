{
  if (ctx.isLvalue()) {
    return;
  }
 else   if (nodesInRefContext.contains(x)) {
    return;
  }
 else   if (x.getSourceInfo().getStartLine() == lastLine && (!recordFileNames || x.getSourceInfo().getFileName().equals(lastFile))) {
    return;
  }
  SourceInfo info=x.getSourceInfo().makeChild(JsStackEmulator.class,"Synthetic location data");
  JsExpression location=program.getStringLiteral(info,String.valueOf(lastLine=info.getStartLine()));
  if (recordFileNames) {
    JsStringLiteral stringLit=program.getStringLiteral(info,baseName(lastFile=info.getFileName()) + ":");
    location=new JsBinaryOperation(info,JsBinaryOperator.ADD,stringLit,location);
  }
  JsArrayAccess access=new JsArrayAccess(info,lineNumbers.makeRef(info),stackIndexRef(info));
  JsBinaryOperation asg=new JsBinaryOperation(info,JsBinaryOperator.ASG,access,location);
  JsBinaryOperation comma=new JsBinaryOperation(info,JsBinaryOperator.COMMA,asg,x);
  ctx.replaceMe(comma);
}

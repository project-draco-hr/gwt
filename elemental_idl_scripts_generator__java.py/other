'This module provides shared functionality for systems to generate\nDart APIs from the IDL database.'
import re
import pdb
_pure_interfaces = set(['DOMStringMap', 'ElementTimeControl', 'ElementTraversal', 'MediaQueryListListener', 'NodeSelector', 'SVGExternalResourcesRequired', 'SVGFilterPrimitiveStandardAttributes', 'SVGFitToViewBox', 'SVGLangSpace', 'SVGLocatable', 'SVGStylable', 'SVGTests', 'SVGTransformable', 'SVGURIReference', 'SVGViewSpec', 'SVGZoomAndPan', 'TimeoutHandler'])
_dart_attribute_renames = {'default': 'defaultValue', 'final': 'finalValue', }
interface_factories = {'Float32Array': '_TypedArrayFactoryProvider', 'Float64Array': '_TypedArrayFactoryProvider', 'Int8Array': '_TypedArrayFactoryProvider', 'Int16Array': '_TypedArrayFactoryProvider', 'Int32Array': '_TypedArrayFactoryProvider', 'Uint8Array': '_TypedArrayFactoryProvider', 'Uint16Array': '_TypedArrayFactoryProvider', 'Uint32Array': '_TypedArrayFactoryProvider', 'Uint8ClampedArray': '_TypedArrayFactoryProvider', }
_frog_dom_custom_native_specs = {'Console': "=(typeof console == 'undefined' ? {} : console)", 'DOMWindow': '@*DOMWindow', }
dom_frog_native_bodies = {'IDBCursor.continueFunction': "\n        if (key == null) return this['continue']();\n        return this['continue'](key);\n      ", }
_idl_type_registry = {'boolean': PrimitiveIDLTypeInfo('boolean', dart_type='boolean', native_type='bool', webcore_getter_name='hasAttribute', webcore_setter_name='setBooleanAttribute'), 'short': PrimitiveIDLTypeInfo('short', dart_type='short', native_type='short'), 'unsigned short': PrimitiveIDLTypeInfo('unsigned short', dart_type='int', native_type='int'), 'int': PrimitiveIDLTypeInfo('int', dart_type='int'), 'unsigned int': PrimitiveIDLTypeInfo('unsigned int', dart_type='int', native_type='unsigned'), 'long': PrimitiveIDLTypeInfo('long', dart_type='int', native_type='int', webcore_getter_name='getIntegralAttribute', webcore_setter_name='setIntegralAttribute'), 'unsigned long': PrimitiveIDLTypeInfo('unsigned long', dart_type='int', native_type='unsigned', webcore_getter_name='getUnsignedIntegralAttribute', webcore_setter_name='setUnsignedIntegralAttribute'), 'long long': PrimitiveIDLTypeInfo('long long', dart_type='double'), 'unsigned long long': PrimitiveIDLTypeInfo('unsigned long long', dart_type='double'), 'float': PrimitiveIDLTypeInfo('float', dart_type='float', native_type='double'), 'double': PrimitiveIDLTypeInfo('double', dart_type='double'), 'any': PrimitiveIDLTypeInfo('any', dart_type='Object'), 'any[]': PrimitiveIDLTypeInfo('any[]', dart_type='Indexable'), 'Array': PrimitiveIDLTypeInfo('Array', dart_type='Indexable'), 'custom': PrimitiveIDLTypeInfo('custom', dart_type='Object'), 'Date': PrimitiveIDLTypeInfo('Date', dart_type='Date', native_type='double'), 'DOMObject': PrimitiveIDLTypeInfo('DOMObject', dart_type='Object', native_type='ScriptValue'), 'DOMString': PrimitiveIDLTypeInfo('DOMString', dart_type='String', native_type='String'), 'Dictionary': PrimitiveIDLTypeInfo('Dictionary', dart_type='Mappable'), 'Flags': PrimitiveIDLTypeInfo('Flags', dart_type='Object'), 'DOMTimeStamp': PrimitiveIDLTypeInfo('DOMTimeStamp', dart_type='double', native_type='unsigned long long'), 'object': PrimitiveIDLTypeInfo('object', dart_type='Object', native_type='ScriptValue'), 'SerializedScriptValue': PrimitiveIDLTypeInfo('SerializedScriptValue', dart_type='Object'), 'WebKitFlags': PrimitiveIDLTypeInfo('WebKitFlags', dart_type='Object'), 'sequence': PrimitiveIDLTypeInfo('sequence', dart_type='Indexable'), 'void': PrimitiveIDLTypeInfo('void', dart_type='void'), 'CSSRule': IDLTypeInfo('CSSRule', conversion_includes=['CSSImportRule']), 'DOMException': IDLTypeInfo('DOMException', native_type='DOMCoreException'), 'DOMStringList': IDLTypeInfo('DOMStringList', dart_type='Indexable', custom_to_native=True), 'DOMStringMap': IDLTypeInfo('DOMStringMap', dart_type='Mappable'), 'DOMWindow': IDLTypeInfo('DOMWindow', custom_to_dart=True), 'Element': IDLTypeInfo('Element', custom_to_dart=True), 'EventListener': IDLTypeInfo('EventListener', custom_to_native=True), 'EventTarget': IDLTypeInfo('EventTarget', custom_to_native=True), 'HTMLElement': IDLTypeInfo('HTMLElement', custom_to_dart=True), 'IDBAny': IDLTypeInfo('IDBAny', dart_type='Object', custom_to_native=True), 'IDBKey': IDLTypeInfo('IDBKey', dart_type='Object', custom_to_native=True), 'StyleSheet': IDLTypeInfo('StyleSheet', conversion_includes=['CSSStyleSheet']), 'SVGElement': IDLTypeInfo('SVGElement', custom_to_dart=True), 'SVGAngle': SVGTearOffIDLTypeInfo('SVGAngle'), 'SVGLength': SVGTearOffIDLTypeInfo('SVGLength'), 'SVGLengthList': SVGTearOffIDLTypeInfo('SVGLengthList'), 'SVGMatrix': SVGTearOffIDLTypeInfo('SVGMatrix'), 'SVGNumber': SVGTearOffIDLTypeInfo('SVGNumber', native_type='SVGPropertyTearOff<float>'), 'SVGNumberList': SVGTearOffIDLTypeInfo('SVGNumberList'), 'SVGPathSegList': SVGTearOffIDLTypeInfo('SVGPathSegList', native_type='SVGPathSegListPropertyTearOff'), 'SVGPoint': SVGTearOffIDLTypeInfo('SVGPoint', native_type='SVGPropertyTearOff<FloatPoint>'), 'SVGPointList': SVGTearOffIDLTypeInfo('SVGPointList'), 'SVGPreserveAspectRatio': SVGTearOffIDLTypeInfo('SVGPreserveAspectRatio'), 'SVGRect': SVGTearOffIDLTypeInfo('SVGRect', native_type='SVGPropertyTearOff<FloatRect>'), 'SVGStringList': SVGTearOffIDLTypeInfo('SVGStringList', native_type='SVGStaticListPropertyTearOff<SVGStringList>'), 'SVGTransform': SVGTearOffIDLTypeInfo('SVGTransform'), 'SVGTransformList': SVGTearOffIDLTypeInfo('SVGTransformList', native_type='SVGTransformListPropertyTearOff'), }
_svg_supplemental_includes = ['"SVGAnimatedPropertyTearOff.h"', '"SVGAnimatedListPropertyTearOff.h"', '"SVGStaticListPropertyTearOff.h"', '"SVGAnimatedListPropertyTearOff.h"', '"SVGTransformListPropertyTearOff.h"', '"SVGPathSegListPropertyTearOff.h"']
java_lang = ['Object', 'String', 'Exception', 'DOMTimeStamp', 'DOMString', 'Date']
primitives = {'int': 'I', 'short': 'S', 'float': 'F', 'double': 'D', 'byte': 'B', 'char': 'C', 'long': 'L', 'boolean': 'Z', 'String': 'Ljava/lang/String;', 'Object': 'Ljava/lang/Object;', }

def _DartArg(args, interface):

    def OverloadedName(args):
        return '_OR_'.join(sorted(set((arg.id for arg in args))))

    def OverloadedType(args):
        type_ids = sorted(set((arg.type.id for arg in args)))
        dart_types = sorted(set((DartType(arg.type.id) for arg in args)))
        if (len(dart_types) == 1):
            if (len(type_ids) == 1):
                return (type_ids[0], dart_types[0])
            else:
                return (None, dart_types[0])
        else:
            return (None, TypeName(type_ids, interface))
    filtered = filter(None, args)
    optional = any((((not arg) or arg.is_optional) for arg in args))
    (type_id, dart_type) = OverloadedType(filtered)
    name = OverloadedName(filtered)
    if optional:
        return ParamInfo(name, type_id, dart_type, None, interface)
    else:
        return ParamInfo(name, type_id, dart_type, None, interface)

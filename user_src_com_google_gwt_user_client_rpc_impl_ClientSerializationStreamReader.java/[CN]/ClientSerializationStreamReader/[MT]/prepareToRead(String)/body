{
  try {
    List<JsStatement> stmts=JsParser.parse(SourceOrigin.UNKNOWN,JsRootScope.INSTANCE,new StringReader(encoded));
    ArrayConcatEvaler arrayConcatEvaler=new ArrayConcatEvaler();
    arrayConcatEvaler.acceptList(stmts);
    StringConcatEvaler stringConcatEvaler=new StringConcatEvaler();
    stringConcatEvaler.acceptList(stmts);
    decoder=new RpcDecoder();
    decoder.acceptList(stmts);
  }
 catch (  Exception e) {
    throw new SerializationException("Failed to parse RPC payload",e);
  }
  index=decoder.getValues().size();
  super.prepareToRead(encoded);
  if (getVersion() < SERIALIZATION_STREAM_MIN_VERSION || getVersion() > SERIALIZATION_STREAM_MAX_VERSION) {
    throw new IncompatibleRemoteServiceException("Got version " + getVersion() + ", expected version between "+ SERIALIZATION_STREAM_MIN_VERSION+ " and "+ SERIALIZATION_STREAM_MAX_VERSION);
  }
  if (!areFlagsValid()) {
    throw new IncompatibleRemoteServiceException("Got an unknown flag from " + "server: " + getFlags());
  }
}

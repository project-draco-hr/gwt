{
  if (type.isPrimitive() != null) {
    Object val=PRIMITIVE_TYPE_BINARY_NAMES.get(type.getSimpleSourceName());
    if (val == null) {
      throw new RuntimeException("Unexpected primitive type '" + type.getQualifiedSourceName() + "'");
    }
    return (String)val;
  }
  JArrayType arrayType=type.isArray();
  if (arrayType != null) {
    return "[" + getSerializedTypeName(arrayType.getComponentType(),addTypeSignature);
  }
  JParameterizedType parameterizedType=type.isParameterized();
  if (parameterizedType != null) {
    return getSerializedTypeName(parameterizedType.getRawType(),addTypeSignature);
  }
  JClassType classType=type.isClassOrInterface();
  assert(classType != null);
  String serializedTypeName;
  JClassType enclosingType=classType.getEnclosingType();
  if (enclosingType != null) {
    serializedTypeName=getSerializedTypeName(enclosingType,false) + "$";
  }
 else {
    JPackage pkg=classType.getPackage();
    if (pkg != null) {
      serializedTypeName=pkg.getName() + ".";
    }
 else {
      serializedTypeName="";
    }
  }
  serializedTypeName+=classType.getSimpleSourceName();
  if (addTypeSignature) {
    serializedTypeName+="/" + getSerializationSignature(classType);
    JClassType customSerializer=hasCustomFieldSerializer(classType);
    if (customSerializer != null) {
      serializedTypeName+="/" + getSerializedInstanceReference(customSerializer);
    }
  }
  return serializedTypeName;
}

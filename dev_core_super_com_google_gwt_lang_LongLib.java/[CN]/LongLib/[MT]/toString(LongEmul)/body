{
  if (LongLibBase.isZero(a)) {
    return "0";
  }
  if (LongLibBase.isMinValue(a)) {
    return "-9223372036854775808";
  }
  if (LongLibBase.isNegative(a)) {
    return "-" + toString(neg(a));
  }
  LongEmul rem=a;
  String res="";
  while (!LongLibBase.isZero(rem)) {
    final int tenPowerZeroes=9;
    final int tenPower=1000000000;
    LongEmul tenPowerLong=fromInt(tenPower);
    rem=LongLibBase.divMod(rem,tenPowerLong,true);
    String digits="" + toInt(LongLibBase.remainder);
    if (!LongLibBase.isZero(rem)) {
      int zeroesNeeded=tenPowerZeroes - digits.length();
      for (; zeroesNeeded > 0; zeroesNeeded--) {
        digits="0" + digits;
      }
    }
    res=digits + res;
  }
  return res;
}

{
  this.selectionModel=selectionModel;
  List<HasCell<String,?>> hasCells=new ArrayList<HasCell<String,?>>();
  hasCells.add(new HasCell<String,Boolean>(){
    public Cell<Boolean> getCell(){
      return new CheckboxCell(){
        @Override public boolean dependsOnSelection(){
          return true;
        }
      }
;
    }
    public FieldUpdater<String,Boolean> getFieldUpdater(){
      return new FieldUpdater<String,Boolean>(){
        public void update(        int index,        String object,        Boolean value){
          selectionModel.setSelected(object,value);
        }
      }
;
    }
    public Boolean getValue(    String object){
      return selectionModel.isSelected(object);
    }
  }
);
  hasCells.add(new HasCell<String,String>(){
    public Cell<String> getCell(){
      return new ButtonCell();
    }
    public FieldUpdater<String,String> getFieldUpdater(){
      return new FieldUpdater<String,String>(){
        public void update(        int index,        String object,        String value){
          Window.alert("You clicked " + object);
        }
      }
;
    }
    public String getValue(    String object){
      return object;
    }
  }
);
  compositeCell=new CompositeCell<String>(hasCells);
}

{
  char c=payload.charAt(idx++);
  if (c == '\\') {
switch (payload.charAt(idx++)) {
case '0':
      c='\0';
    break;
case '!':
  c='|';
break;
case 'b':
c='\b';
break;
case 't':
c='\t';
break;
case 'n':
c='\n';
break;
case 'f':
c='\f';
break;
case 'r':
c='\r';
break;
case '\\':
c='\\';
break;
case '"':
c='"';
break;
case 'u':
c=(char)Integer.parseInt(payload.subSequence(idx,idx+=4).toString(),16);
break;
case 'x':
c=(char)Integer.parseInt(payload.subSequence(idx,idx+=2).toString(),16);
break;
default :
throw new RuntimeException("Unhandled escape " + payload.charAt(idx));
}
}
return c;
}

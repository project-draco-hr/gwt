{
  OptimizerStats stats=new OptimizerStats(NAME);
  while (true) {
    ControlFlowAnalyzer livenessAnalyzer=new ControlFlowAnalyzer(program);
    if (saveCodeGenTypes) {
      traverseFromCodeGenTypes(livenessAnalyzer);
    }
    for (    JMethod method : program.getAllEntryMethods()) {
      livenessAnalyzer.traverseFrom(method);
    }
    livenessAnalyzer.traverseFromLeftoversFragmentHasLoaded();
    program.typeOracle.setInstantiatedTypes(livenessAnalyzer.getInstantiatedTypes());
    Set<JNode> referencedNonTypes=new IdentityHashSet<JNode>(livenessAnalyzer.getLiveFieldsAndMethods());
    referencedNonTypes.addAll(livenessAnalyzer.getMethodsReferencedButNotExecuted());
    PruneVisitor pruner=new PruneVisitor(livenessAnalyzer.getReferencedTypes(),referencedNonTypes,livenessAnalyzer.getMethodsReferencedButNotExecuted());
    pruner.accept(program);
    stats.recordModified(pruner.getNumMods());
    if (!pruner.didChange()) {
      break;
    }
    CleanupRefsVisitor cleaner=new CleanupRefsVisitor(referencedNonTypes,pruner.getMethodToOriginalParamsMap());
    cleaner.accept(program.getDeclaredTypes());
  }
  return stats;
}

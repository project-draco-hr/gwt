{
  assert(referencedTypes.contains(type));
  boolean isInstantiated=program.typeOracle.isInstantiatedType(type);
  for (Iterator<JField> it=type.fields.iterator(); it.hasNext(); ) {
    JField field=it.next();
    if (!referencedNonTypes.contains(field) || pruneViaNoninstantiability(isInstantiated,field)) {
      it.remove();
      didChange=true;
    }
  }
  for (Iterator<JMethod> it=type.methods.iterator(); it.hasNext(); ) {
    JMethod method=it.next();
    if (!methodIsReferenced(method) || pruneViaNoninstantiability(isInstantiated,method)) {
      it.remove();
      didChange=true;
    }
 else {
      accept(method);
    }
  }
  return false;
}

{
  assert(referencedTypes.contains(type));
  boolean isInstantiated=program.typeOracle.isInstantiatedType(type);
  for (int i=0; i < type.getFields().size(); ++i) {
    JField field=type.getFields().get(i);
    if (!referencedNonTypes.contains(field) || pruneViaNoninstantiability(isInstantiated,field)) {
      type.removeField(i);
      didChange=true;
      --i;
    }
  }
  for (int i=0; i < type.getMethods().size(); ++i) {
    JMethod method=type.getMethods().get(i);
    if (!methodIsReferenced(method) || pruneViaNoninstantiability(isInstantiated,method)) {
      type.removeMethod(i);
      didChange=true;
      --i;
    }
 else {
      accept(method);
    }
  }
  return false;
}

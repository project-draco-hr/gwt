{
  if (tree == null) {
    return 0;
  }
  if (isRed && tree.isRed) {
    throw new RuntimeException("Two red nodes adjacent");
  }
  if (tree.child[LEFT] != null && cmp.compare(tree.child[LEFT].key,tree.key) > 0) {
    throw new RuntimeException("Left child " + tree.child[LEFT] + " larger than "+ tree);
  }
  if (tree.child[RIGHT] != null && cmp.compare(tree.child[RIGHT].key,tree.key) < 0) {
    throw new RuntimeException("Right child " + tree.child[RIGHT] + " smaller than "+ tree);
  }
  int leftHeight=assertCorrectness(tree.child[LEFT],tree.isRed);
  int rightHeight=assertCorrectness(tree.child[RIGHT],tree.isRed);
  if (leftHeight != 0 && rightHeight != 0 && leftHeight != rightHeight) {
    throw new RuntimeException("Black heights don't match");
  }
  return tree.isRed ? leftHeight : leftHeight + 1;
}

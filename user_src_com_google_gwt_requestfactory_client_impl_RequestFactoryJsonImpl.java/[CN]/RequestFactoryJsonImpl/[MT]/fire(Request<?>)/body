{
  final AbstractRequest<?,?> abstractRequest=(AbstractRequest<?,?>)requestObject;
  RequestData requestData=((AbstractRequest<?,?>)requestObject).getRequestData();
  for (  Object proxy : requestData.getProxyParameters()) {
    abstractRequest.deltaValueStore.retainValue(proxy);
  }
  Map<String,String> requestMap=requestData.getRequestMap(abstractRequest.deltaValueStore.toJson());
  String payload=ClientRequestHelper.getRequestString(requestMap);
  transport.send(payload,new RequestTransport.TransportReceiver(){
    public void onTransportFailure(    String message){
      abstractRequest.fail(new ServerFailure(message,null,null));
    }
    public void onTransportSuccess(    String payload){
      abstractRequest.handleResponseText(payload);
    }
  }
);
}

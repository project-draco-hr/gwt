{
  HandleIE6.releaseQueuedPtrs();
  OleAutomation funcObj=null;
  Variant funcObjVar=null;
  Variant[] vArgs=null;
  try {
    int len=args.length;
    vArgs=new Variant[len + 1];
    vArgs[0]=SwtOleGlue.wrapObjectAsVariant(getIsolatedClassLoader(),jthis);
    for (int i=0; i < len; ++i) {
      vArgs[i + 1]=SwtOleGlue.convertObjectToVariant(getIsolatedClassLoader(),types[i],args[i]);
    }
    int[] ids=window.getIDsOfNames(new String[]{name});
    if (ids == null) {
      throw new RuntimeException("Could not find a native method with the signature '" + name + "'");
    }
    int functionId=ids[0];
    funcObjVar=window.getProperty(functionId);
    funcObj=funcObjVar.getAutomation();
    int callDispId=funcObj.getIDsOfNames(new String[]{"call"})[0];
    Variant result=funcObj.invoke(callDispId,vArgs);
    if (!isExceptionActive()) {
      if (returnsValue) {
        if (result.getType() == OLE.VT_EMPTY) {
          throw new RuntimeException("JavaScript method '" + name + "' returned 'undefined'. This can happen either because of a "+ "missing return statement, or explicitly returning a value "+ "of 'undefined' (e.g. 'return element[nonexistent property]')");
        }
      }
 else {
        if (result.getType() != OLE.VT_EMPTY) {
          getLogger().log(TreeLogger.WARN,"JavaScript method '" + name + "' is not supposed to return a value",null);
        }
      }
      return result;
    }
    result.dispose();
    RuntimeException thrown=takeJavaException();
    thrown.fillInStackTrace();
    throw thrown;
  }
  finally {
    for (int i=0; i < vArgs.length; ++i) {
      if (vArgs[i] != null) {
        vArgs[i].dispose();
      }
    }
    if (funcObjVar != null) {
      funcObjVar.dispose();
    }
    if (funcObj != null) {
      funcObj.dispose();
    }
  }
}

{
  com.google.gwt.dev.protobuf.UnknownFieldSet.Builder unknownFields=com.google.gwt.dev.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    return this;
default :
{
    if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
      this.setUnknownFields(unknownFields.build());
      return this;
    }
    break;
  }
case 8:
{
  int rawValue=input.readEnum();
  com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.LogType value=com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.LogType.valueOf(rawValue);
  if (value == null) {
    unknownFields.mergeVarintField(1,rawValue);
  }
 else {
    setType(value);
  }
  break;
}
case 18:
{
com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.ModuleLog.Builder subBuilder=com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.ModuleLog.newBuilder();
if (hasModuleLog()) {
  subBuilder.mergeFrom(getModuleLog());
}
input.readMessage(subBuilder,extensionRegistry);
setModuleLog(subBuilder.buildPartial());
break;
}
case 26:
{
com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.ServerLog.Builder subBuilder=com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.ServerLog.newBuilder();
if (hasServerLog()) {
subBuilder.mergeFrom(getServerLog());
}
input.readMessage(subBuilder,extensionRegistry);
setServerLog(subBuilder.buildPartial());
break;
}
case 34:
{
com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.MainLog.Builder subBuilder=com.google.gwt.dev.shell.remoteui.RemoteMessageProto.Message.Request.ViewerRequest.AddLog.MainLog.newBuilder();
if (hasMainLog()) {
subBuilder.mergeFrom(getMainLog());
}
input.readMessage(subBuilder,extensionRegistry);
setMainLog(subBuilder.buildPartial());
break;
}
}
}
}

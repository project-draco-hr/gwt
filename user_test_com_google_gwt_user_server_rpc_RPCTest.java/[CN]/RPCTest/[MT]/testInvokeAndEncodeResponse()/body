{
  try {
    RPC.invokeAndEncodeResponse(null,null,null);
  }
 catch (  NullPointerException e) {
  }
catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  Method A_method1=A.class.getMethod("method1",null);
  try {
    RPC.invokeAndEncodeResponse(new B(){
      public void method1(){
      }
    }
,A_method1,null);
  }
 catch (  SecurityException e) {
    System.out.println(e.getMessage());
  }
catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  try {
    RPC.invokeAndEncodeResponse(new A(){
      public void method1() throws SerializableException {
      }
      public int method2(){
        return 0;
      }
      public int method3(      int val){
        return 0;
      }
    }
,A_method1,new Integer[]{new Integer(1)});
  }
 catch (  SecurityException e) {
    System.out.println(e.getMessage());
  }
catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  try {
    RPC.invokeAndEncodeResponse(new A(){
      public void method1() throws SerializableException {
        throw new IllegalArgumentException();
      }
      public int method2(){
        return 0;
      }
      public int method3(      int val){
        return 0;
      }
    }
,A_method1,null);
  }
 catch (  UnexpectedException e) {
    System.out.println(e.getMessage());
  }
catch (  Throwable e) {
    e.printStackTrace();
    fail(e.getMessage());
  }
  try {
    RPC.invokeAndEncodeResponse(new A(){
      public void method1() throws SerializableException {
        throw new SerializableException();
      }
      public int method2(){
        return 0;
      }
      public int method3(      int val){
        return 0;
      }
    }
,A_method1,null);
  }
 catch (  Throwable e) {
    fail(e.getMessage());
  }
}

{
  super(writer,localizableClass,messageBindings);
  try {
    JClassType stringClass=oracle.getType(String.class.getName());
    JClassType mapClass=oracle.getType(Map.class.getName());
    JType stringArrayClass=oracle.getArrayType(stringClass);
    JType intClass=oracle.parse(int.class.getName());
    JType doubleClass=oracle.parse(double.class.getName());
    JType floatClass=oracle.parse(float.class.getName());
    JType booleanClass=oracle.parse(boolean.class.getName());
    register(stringClass,new SimpleValueMethodCreator(this,SimpleValueMethodCreator.STRING));
    register(mapClass,new ConstantsMapMethodCreator(this));
    register(intClass,new SimpleValueMethodCreator(this,SimpleValueMethodCreator.INT));
    register(doubleClass,new SimpleValueMethodCreator(this,SimpleValueMethodCreator.DOUBLE));
    register(floatClass,new SimpleValueMethodCreator(this,SimpleValueMethodCreator.FLOAT));
    register(booleanClass,new SimpleValueMethodCreator(this,SimpleValueMethodCreator.BOOLEAN));
    register(stringArrayClass,new ConstantsStringArrayMethodCreator(this));
  }
 catch (  NotFoundException e) {
    throw error(logger,e);
  }
catch (  TypeOracleException e) {
    throw error(logger,e);
  }
}

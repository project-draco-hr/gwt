{
  JType returnType=method.getReturnType();
  JPrimitiveType primitive=returnType.isPrimitive();
  if (primitive != null && (primitive == JPrimitiveType.BOOLEAN || primitive == JPrimitiveType.DOUBLE || primitive == JPrimitiveType.FLOAT || primitive == JPrimitiveType.INT)) {
    return;
  }
  JArrayType arrayType=returnType.isArray();
  if (arrayType != null) {
    String arrayComponent=arrayType.getComponentType().getQualifiedSourceName();
    if (!arrayComponent.equals("java.lang.String")) {
      throw error(logger,"Methods in interfaces extending Constant only support arrays of Strings");
    }
    return;
  }
  String returnTypeName=returnType.getQualifiedSourceName();
  if (returnTypeName.equals("java.lang.String")) {
    return;
  }
  if (returnTypeName.equals("java.util.Map")) {
    JParameterizedType paramType=returnType.isParameterized();
    if (paramType != null) {
      JClassType[] typeArgs=paramType.getTypeArgs();
      if (typeArgs.length != 2 || !typeArgs[0].getQualifiedSourceName().equals("java.lang.String") || !typeArgs[1].getQualifiedSourceName().equals("java.lang.String")) {
        throw error(logger,"Map Methods in interfaces extending Constant must be raw or <String, String>");
      }
    }
    return;
  }
  throw error(logger,"Methods in interfaces extending Constant must have a return type of " + "String/int/float/boolean/double/String[]/Map");
}

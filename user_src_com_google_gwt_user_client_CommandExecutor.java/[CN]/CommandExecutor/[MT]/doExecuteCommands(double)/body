{
  assert(!isExecutionTimerPending());
  boolean wasCanceled=false;
  try {
    setExecuting(true);
    iterator.setEnd(commands.size());
    cancellationTimer.schedule(DEFAULT_CANCELLATION_TIMEOUT_MILLIS);
    while (iterator.hasNext()) {
      Object element=iterator.next();
      boolean removeCommand=true;
      try {
        if (element == null) {
          return;
        }
        if (element instanceof Command) {
          Command command=(Command)element;
          command.execute();
        }
 else         if (element instanceof IncrementalCommand) {
          IncrementalCommand incrementalCommand=(IncrementalCommand)element;
          removeCommand=!incrementalCommand.execute();
        }
      }
  finally {
        wasCanceled=iterator.wasRemoved();
        if (!wasCanceled) {
          if (removeCommand) {
            iterator.remove();
          }
        }
      }
      if (hasTimeSliceExpired(Duration.currentTimeMillis(),startTimeMillis)) {
        return;
      }
    }
  }
  finally {
    if (!wasCanceled) {
      cancellationTimer.cancel();
      setExecuting(false);
      maybeStartExecutionTimer();
    }
  }
}

{
  if (List.class.isAssignableFrom(domainClass)) {
    return List.class.asSubclass(clientClass);
  }
  if (Set.class.isAssignableFrom(domainClass)) {
    return Set.class.asSubclass(clientClass);
  }
  if (Map.class.isAssignableFrom(domainClass)) {
    return Map.class.asSubclass(clientClass);
  }
  if (TypeUtils.isValueType(domainClass)) {
    return domainClass.asSubclass(clientClass);
  }
  Class<? extends T> ret=resolveClientType(domainClass,clientClass);
  if (ret == null && required) {
    die(null,"The domain type %s cannot be sent to the client",domainClass.getCanonicalName());
  }
  return ret;
}

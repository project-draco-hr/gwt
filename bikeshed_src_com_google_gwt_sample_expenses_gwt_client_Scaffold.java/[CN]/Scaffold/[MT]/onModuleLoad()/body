{
  ScaffoldFactory factory=GWT.create(ScaffoldFactory.class);
  final EventBus eventBus=factory.getEventBus();
  final ExpensesRequestFactory requestFactory=factory.getRequestFactory();
  final PlaceController placeController=factory.getPlaceController();
  final ScaffoldShell shell=factory.getShell();
  eventBus.addHandler(RequestEvent.TYPE,new RequestEvent.Handler(){
    private static final int LOADING_TIMEOUT=250;
    public void onRequestEvent(    RequestEvent requestEvent){
      if (requestEvent.getState() == State.SENT) {
        shell.getMole().showDelayed(LOADING_TIMEOUT);
      }
 else {
        shell.getMole().hide();
      }
    }
  }
);
  eventBus.addHandler(RequestEvent.TYPE,new AuthenticationFailureHandler());
  final LoginWidget login=shell.getLoginWidget();
  Receiver<UserInformationRecord> receiver=new Receiver<UserInformationRecord>(){
    public void onSuccess(    UserInformationRecord userInformationRecord,    Set<SyncResult> syncResults){
      login.setUserInformation(userInformationRecord);
    }
  }
;
  requestFactory.userInformationRequest().getCurrentUserInformation(Location.getHref()).fire(receiver);
  HasConstrainedValue<ProxyListPlace> listPlacePickerView=shell.getPlacesBox();
  listPlacePickerView.setAcceptableValues(getTopPlaces());
  factory.getListPlacePicker().register(eventBus,listPlacePickerView);
  CachingActivityMapper cached=new CachingActivityMapper(new ExpensesMasterActivities(requestFactory,placeController));
  ActivityMapper masterActivityMap=new FilteredActivityMapper(factory.getProxyPlaceToListPlace(),cached);
  final ActivityManager masterActivityManager=new ActivityManager(masterActivityMap,eventBus);
  masterActivityManager.setDisplay(new Activity.Display(){
    public void showActivityWidget(    IsWidget widget){
      shell.getMasterPanel().setWidget(widget == null ? null : widget.asWidget());
    }
  }
);
  final ActivityManager detailsActivityManager=new ActivityManager(new ExpensesDetailsActivities(requestFactory,placeController),eventBus);
  detailsActivityManager.setDisplay(new Activity.Display(){
    public void showActivityWidget(    IsWidget widget){
      shell.getDetailsPanel().setWidget(widget == null ? null : widget.asWidget());
    }
  }
);
  Element loading=Document.get().getElementById("loading");
  loading.getParentElement().removeChild(loading);
  PlaceHistoryHandler placeHistoryHandler=factory.getPlaceHistoryHandler();
  placeHistoryHandler.register(placeController,eventBus,getTopPlaces().iterator().next());
  placeHistoryHandler.handleCurrentHistory();
  RootLayoutPanel.get().add(shell);
}

{
  delayTestFinish(DELAY_TEST_FINISH);
  SimpleFooRequest context=simpleFooRequest();
  SimpleFooProxy newFoo=context.create(SimpleFooProxy.class);
  final SimpleBarProxy newBar=context.create(SimpleBarProxy.class);
  Request<SimpleFooProxy> fooReq=context.persistAndReturnSelf().using(newFoo).with("barField");
  newFoo=context.edit(newFoo);
  newFoo.setBarField(newBar);
  fooReq.fire(new Receiver<SimpleFooProxy>(){
    @Override public void onSuccess(    SimpleFooProxy response){
      response=checkSerialization(response);
      assertNotNull(response.getBarField());
      assertEquals(newBar.stableId(),response.getBarField().stableId());
      finishTestAndReset();
    }
  }
);
}

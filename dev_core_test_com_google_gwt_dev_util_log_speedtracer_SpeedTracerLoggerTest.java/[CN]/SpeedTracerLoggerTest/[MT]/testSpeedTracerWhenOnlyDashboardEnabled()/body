{
  Properties props=(Properties)System.getProperties().clone();
  try {
    System.clearProperty("gwt.speedtracerlog");
    System.setProperty("gwt.speedtracer.logGcTime","yes");
    SpeedTracerLoggerTestMockNotifier notifier=SpeedTracerLoggerTestMockNotifier.enable();
    DevModeSession session1=DevModeSessionTestUtil.createSession("test1","test",true);
    DevModeSession session2=DevModeSessionTestUtil.createSession("test2","test",false);
    LinkedList<Event> expectedEvents=new LinkedList<Event>();
    LinkedList<DevModeSession> expectedSessions=new LinkedList<DevModeSession>();
    Event evt1, evt2;
    evt1=SpeedTracerLogger.start(DevModeEventType.MODULE_INIT,"k1","v1","k2","v2");
    evt2=SpeedTracerLogger.start(DevModeEventType.CLASS_BYTES_REWRITE);
    evt2.end();
    evt1.end();
    expectedEvents.add(evt1);
    expectedSessions.add(session1);
    evt1=SpeedTracerLogger.start(session2,DevModeEventType.JAVA_TO_JS_CALL,"k1","v1");
    evt2=SpeedTracerLogger.start(DevModeEventType.CREATE_UI);
    evt2.end();
    evt1.end();
    expectedEvents.add(evt1);
    expectedSessions.add(session2);
    evt1=SpeedTracerLogger.start(session1,DevModeEventType.JS_TO_JAVA_CALL,"k1","v1");
    evt1.end();
    expectedEvents.add(evt1);
    expectedSessions.add(session1);
    assertEquals("Events posted to dashboard do not match expected events!",expectedEvents,notifier.getEventSequence());
    LinkedList<DevModeSession> actualSessions=new LinkedList<DevModeSession>();
    for (    Event event : notifier.getEventSequence()) {
      actualSessions.add(event.getDevModeSession());
    }
    assertEquals("Events posted to dashboard are associated with incorrect sessions!",expectedSessions,actualSessions);
  }
  finally {
    System.setProperties(props);
  }
}

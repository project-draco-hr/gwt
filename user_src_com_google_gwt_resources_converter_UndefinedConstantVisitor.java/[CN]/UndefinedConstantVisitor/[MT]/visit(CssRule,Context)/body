{
  List<CssProperty> properties=x.getProperties();
  for (  CssProperty cssProperty : properties) {
    if (propertyNamesToSkip.contains(cssProperty.getName())) {
      continue;
    }
    String cssPropertyString=cssProperty.getValues().toCss();
    Matcher matcher=pattern.matcher(cssPropertyString);
    boolean needsUpdate=false;
    while (matcher.find()) {
      String upperCaseString=matcher.group();
      if (!gssContantNames.contains(upperCaseString)) {
        treeLogger.log(Type.WARN,"Property '" + cssProperty.getName() + "' from rule '"+ x.getSelectors().toString()+ "' uses an undefined constant: "+ upperCaseString);
        if (lenient) {
          treeLogger.log(Type.WARN,"turning '" + upperCaseString + "' to lower case. This is probably not what you wanted here in the "+ "first place!");
          cssPropertyString=cssPropertyString.replace(upperCaseString,upperCaseString.toLowerCase());
          needsUpdate=true;
        }
 else {
          throw new Css2GssConversionException("Found undefined constant in input. " + cssProperty.getName() + "' from rule '"+ x.getSelectors().toString()+ "' undefined constant: "+ upperCaseString);
        }
      }
    }
    if (needsUpdate) {
      cssProperty.setValue(new SimpleValue(cssPropertyString));
    }
  }
  return false;
}

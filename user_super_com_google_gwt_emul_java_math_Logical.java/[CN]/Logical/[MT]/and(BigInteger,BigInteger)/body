{
  if (that.sign == 0 || val.sign == 0) {
    return BigInteger.ZERO;
  }
  if (that.equals(BigInteger.MINUS_ONE)) {
    return val;
  }
  if (val.equals(BigInteger.MINUS_ONE)) {
    return that;
  }
  if (val.sign > 0) {
    if (that.sign > 0) {
      return andPositive(val,that);
    }
 else {
      return andDiffSigns(val,that);
    }
  }
 else {
    if (that.sign > 0) {
      return andDiffSigns(that,val);
    }
 else     if (val.numberLength > that.numberLength) {
      return andNegative(val,that);
    }
 else {
      return andNegative(that,val);
    }
  }
}

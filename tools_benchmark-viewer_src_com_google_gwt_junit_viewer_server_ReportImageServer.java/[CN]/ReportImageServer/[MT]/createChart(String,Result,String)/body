{
  List trials=result.getTrials();
  Trial firstTrial=(Trial)trials.get(0);
  int numVariables=firstTrial.getVariables().size();
  String domainVariable=null;
  String seriesVariable=null;
  Map variableValues=null;
  if (numVariables == 1) {
    domainVariable=(String)firstTrial.getVariables().keySet().iterator().next();
  }
 else {
    variableValues=new HashMap();
    for (int i=0; i < trials.size(); ++i) {
      Trial trial=(Trial)trials.get(i);
      Map variables=trial.getVariables();
      for (Iterator it=variables.entrySet().iterator(); it.hasNext(); ) {
        Map.Entry entry=(Map.Entry)it.next();
        String variable=(String)entry.getKey();
        String value=(String)entry.getValue();
        Set set=(Set)variableValues.get(variable);
        if (set == null) {
          set=new TreeSet();
          variableValues.put(variable,set);
        }
        set.add(value);
      }
    }
    TreeMap numValuesMap=new TreeMap();
    for (Iterator it=variableValues.entrySet().iterator(); it.hasNext(); ) {
      Map.Entry entry=(Map.Entry)it.next();
      String variable=(String)entry.getKey();
      Set values=(Set)entry.getValue();
      Integer numValues=new Integer(values.size());
      List variables=(List)numValuesMap.get(numValues);
      if (variables == null) {
        variables=new ArrayList();
        numValuesMap.put(numValues,variables);
      }
      variables.add(variable);
    }
    if (numValuesMap.values().size() > 0) {
      domainVariable=(String)((List)numValuesMap.get(numValuesMap.lastKey())).get(0);
      seriesVariable=(String)((List)numValuesMap.get(numValuesMap.firstKey())).get(0);
    }
  }
  String valueTitle="time (ms)";
  if (numVariables == 0) {
    Trial trial=(Trial)trials.iterator().next();
    DefaultCategoryDataset data=new DefaultCategoryDataset();
    data.addValue(trial.getRunTimeMillis(),"result","result");
    return ChartFactory.createBarChart(title,testName,valueTitle,data,PlotOrientation.VERTICAL,false,false,false);
  }
 else   if (numVariables == 1) {
    XYSeriesCollection data=new XYSeriesCollection();
    XYSeries series=new XYSeries(domainVariable);
    for (Iterator it=trials.iterator(); it.hasNext(); ) {
      Trial trial=(Trial)it.next();
      if (trial.getException() != null) {
        continue;
      }
      double time=trial.getRunTimeMillis();
      String domainValue=(String)trial.getVariables().get(domainVariable);
      series.add(Double.parseDouble(domainValue),time);
    }
    data.addSeries(series);
    return ChartFactory.createXYLineChart(title,domainVariable,valueTitle,data,PlotOrientation.VERTICAL,false,false,false);
  }
 else   if (numVariables == 2) {
    XYSeriesCollection data=new XYSeriesCollection();
    Set seriesValues=(Set)variableValues.get(seriesVariable);
    for (Iterator it=seriesValues.iterator(); it.hasNext(); ) {
      String seriesValue=(String)it.next();
      XYSeries series=new XYSeries(seriesValue);
      for (Iterator trialsIt=trials.iterator(); trialsIt.hasNext(); ) {
        Trial trial=(Trial)trialsIt.next();
        if (trial.getException() != null) {
          continue;
        }
        Map variables=trial.getVariables();
        if (variables.get(seriesVariable).equals(seriesValue)) {
          double time=trial.getRunTimeMillis();
          String domainValue=(String)trial.getVariables().get(domainVariable);
          series.add(Double.parseDouble(domainValue),time);
        }
      }
      data.addSeries(series);
    }
    return ChartFactory.createXYLineChart(title,domainVariable,valueTitle,data,PlotOrientation.VERTICAL,true,true,false);
  }
  return null;
}

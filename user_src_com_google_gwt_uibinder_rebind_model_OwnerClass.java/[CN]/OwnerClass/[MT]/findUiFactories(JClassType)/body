{
  JMethod[] methods=ownerType.getMethods();
  for (  JMethod method : methods) {
    if (method.isAnnotationPresent(UiFactory.class)) {
      JClassType factoryType=method.getReturnType().isClassOrInterface();
      if (factoryType == null) {
        logger.die("Factory return type is not a class in method " + method.getName());
      }
      JParameterizedType paramType=factoryType.isParameterized();
      if (paramType != null) {
        factoryType=paramType.getRawType();
      }
      if (uiFactories.containsKey(factoryType)) {
        logger.die("Duplicate factory in class " + method.getEnclosingType().getName() + " for type "+ factoryType.getName());
      }
      uiFactories.put(factoryType,method);
    }
  }
  JClassType superclass=ownerType.getSuperclass();
  if (superclass != null) {
    findUiFactories(superclass);
  }
}

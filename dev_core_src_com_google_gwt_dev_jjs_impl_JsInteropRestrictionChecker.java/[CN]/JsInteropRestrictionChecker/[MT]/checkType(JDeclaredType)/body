{
  minimalRebuildCache.removeExportedNames(type.getName());
  if (type.isJsType()) {
    if (!checkJsType(type)) {
      return;
    }
    checkJsName(type);
    checkJsNamespace(type);
  }
  if (type.isJsNative()) {
    if (!checkNativeJsType(type)) {
      return;
    }
  }
  if (type.isJsFunction()) {
    checkJsFunction(type);
  }
 else   if (type.isJsFunctionImplementation()) {
    checkJsFunctionImplementation(type);
  }
 else {
    checkJsFunctionSubtype(type);
    checkJsConstructors(type);
  }
  Map<String,JsMember> ownGlobalNames=Maps.newHashMap();
  Map<String,JsMember> localNames=collectLocalNames(type.getSuperClass());
  for (  JMember member : type.getMembers()) {
    checkMember(member,localNames,ownGlobalNames);
  }
}

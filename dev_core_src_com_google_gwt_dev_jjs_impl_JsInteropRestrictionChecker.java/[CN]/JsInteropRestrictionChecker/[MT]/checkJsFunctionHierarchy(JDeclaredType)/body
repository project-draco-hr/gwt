{
  SortedSet<String> implementedJsFunctions=FluentIterable.from(jprogram.typeOracle.getImplementedJsFunctions(type)).transform(new Function<JInterfaceType,String>(){
    @Override public String apply(    JInterfaceType type){
      return type.getName();
    }
  }
).toSortedSet(Ordering.natural());
  if (implementedJsFunctions.size() > 1) {
    logError("'%s' implements more than one JsFunction interfaces: %s",type.getName(),implementedJsFunctions);
  }
}

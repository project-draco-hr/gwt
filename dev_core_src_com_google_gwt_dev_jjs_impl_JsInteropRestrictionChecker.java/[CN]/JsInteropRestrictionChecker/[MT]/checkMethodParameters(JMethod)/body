{
  boolean hasOptionalParameters=false;
  for (  JParameter parameter : method.getParams()) {
    if (parameter.isOptional()) {
      hasOptionalParameters=true;
      continue;
    }
    if (hasOptionalParameters && !parameter.isVarargs()) {
      logError(method,"JsOptional parameter '%s' in method %s cannot precede parameters " + "that are not optional.",parameter.getName(),getMemberDescription(method));
      break;
    }
  }
  if (hasOptionalParameters && method.getJsMemberType() != JsMemberType.CONSTRUCTOR && method.getJsMemberType() != JsMemberType.METHOD && !method.isOrOverridesJsFunctionMethod()) {
    logError(method,"Method %s has JsOptional parameters and is not a JsMethod, " + "a JsConstructor or a JsFunction method.",getMemberDescription(method));
  }
  if (method.isJsMethodVarargs()) {
    checkJsVarargs(method);
  }
}

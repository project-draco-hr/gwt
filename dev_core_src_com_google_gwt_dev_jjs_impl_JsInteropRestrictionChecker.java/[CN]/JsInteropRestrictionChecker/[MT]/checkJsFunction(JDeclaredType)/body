{
  if (!isClinitEmpty(type)) {
    logError("JsFunction '%s' cannot have static initializer.",type);
  }
  if (type.getImplements().size() > 0) {
    logError("JsFunction '%s' cannot extend other interfaces.",type);
  }
  if (type.isJsType()) {
    logError("'%s' cannot be both a JsFunction and a JsType at the same time.",type);
  }
  Set<String> subTypes=jprogram.typeOracle.getSubTypeNames(type.getName());
  if (!subTypes.isEmpty()) {
    logError("JsFunction '%s' cannot be extended by other interfaces:%s",type,subTypes);
  }
}

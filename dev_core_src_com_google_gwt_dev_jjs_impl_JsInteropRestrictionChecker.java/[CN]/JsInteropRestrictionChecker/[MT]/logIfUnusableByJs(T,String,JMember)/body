{
  if (hasType.getType().canBeReferencedExternally()) {
    return;
  }
  if (isUnusableByJsSuppressed(x.getEnclosingType()) || isUnusableByJsSuppressed(x) || isUnusableByJsSuppressed(hasType)) {
    return;
  }
  logWarning(x,"[unusable-by-js] %s %s is not usable by but exposed to JavaScript.",prefix,getMemberDescription(x));
  wasUnusableByJsWarningReported=true;
}

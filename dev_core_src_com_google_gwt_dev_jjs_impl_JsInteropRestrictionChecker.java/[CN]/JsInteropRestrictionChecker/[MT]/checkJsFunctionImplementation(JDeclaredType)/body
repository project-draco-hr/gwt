{
  if (type.getImplements().size() != 1) {
    logError("JsFunction implementation '%s' cannot implement more than one interface.",type);
  }
  if (type.isJsType()) {
    logError("'%s' cannot be both a JsFunction implementation and a JsType at the same time.",type);
  }
  if (type.getSuperClass() != jprogram.getTypeJavaLangObject()) {
    logError("JsFunction implementation '%s' cannot extend a class.",type);
  }
  Set<String> subTypes=jprogram.typeOracle.getSubClassNames(type.getName());
  if (!subTypes.isEmpty()) {
    logError("Implementation of JsFunction '%s' cannot be extended by other classes:%s",type,subTypes);
  }
}

{
  if (member.isSynthetic() || member.isJsNative() || member.isJsOverlay()) {
    return;
  }
  if (member.getJsName() == null) {
    logError(member,"Native JsType member %s is not public or has @JsIgnore.",getMemberDescription(member));
    return;
  }
  JMethod method=(JMethod)member;
  if (method.isJsniMethod()) {
    logError(method,"JSNI method %s is not allowed in a native JsType.",getMemberDescription(method));
    return;
  }
  logError(method,"Native JsType method %s should be native or abstract.",getMemberDescription(method));
}

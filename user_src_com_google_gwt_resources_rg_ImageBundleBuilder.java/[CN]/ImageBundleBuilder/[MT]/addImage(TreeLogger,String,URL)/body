{
  logger=logger.branch(TreeLogger.TRACE,"Adding image '" + imageName + "'",null);
  BufferedImage image=null;
  try {
    String path=imageUrl.getPath();
    String suffix=path.substring(path.lastIndexOf('.') + 1);
    Iterator<ImageReader> it=ImageIO.getImageReadersBySuffix(suffix);
    if (it.hasNext()) {
      ImageReader reader=it.next();
      reader.setInput(new MemoryCacheImageInputStream(imageUrl.openStream()));
      int numImages=reader.getNumImages(true);
      if (numImages == 0) {
      }
 else       if (numImages == 1) {
        image=reader.read(0);
      }
 else {
        BufferedImage[] images=new BufferedImage[numImages];
        for (int i=0; i < numImages; i++) {
          images[i]=reader.read(i);
        }
        ImageRect rect=new ImageRect(imageName,images);
        throw new UnsuitableForStripException(rect);
      }
    }
  }
 catch (  IllegalArgumentException iex) {
    if (imageName.toLowerCase().endsWith("png") && iex.getMessage() != null && iex.getStackTrace()[0].getClassName().equals("javax.imageio.ImageTypeSpecifier$Indexed")) {
      logger.log(TreeLogger.ERROR,"Unable to read image. The image may not be in valid PNG format. " + "This problem may also be due to a bug in versions of the " + "JRE prior to 1.6. See "+ "http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5098176 "+ "for more information. If this bug is the cause of the "+ "error, try resaving the image using a different image "+ "program, or upgrade to a newer JRE.",null);
      throw new UnableToCompleteException();
    }
 else {
      throw iex;
    }
  }
catch (  IOException e) {
    logger.log(TreeLogger.ERROR,"Unable to read image resource",e);
    throw new UnableToCompleteException();
  }
  if (image == null) {
    logger.log(TreeLogger.ERROR,"Unrecognized image file format",null);
    throw new UnableToCompleteException();
  }
  ImageRect toReturn=new ImageRect(imageName,image);
  if (toReturn.height > IMAGE_MAX_SIZE || toReturn.width > IMAGE_MAX_SIZE) {
    throw new UnsuitableForStripException(toReturn);
  }
  return toReturn;
}

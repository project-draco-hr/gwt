{
  JUnitMessageQueue queue=new JUnitMessageQueue();
  queue.setNumClients(10);
  assertEquals(0,queue.getTestBlocks().size());
  List<TestInfo[]> expectedBlocks=new ArrayList<TestInfo[]>();
{
    List<TestInfo[]> testBlocks=createTestBlocks(5,3);
    queue.addTestBlocks(testBlocks,false);
    expectedBlocks.addAll(testBlocks);
    assertEquals(expectedBlocks,queue.getTestBlocks());
  }
{
    List<TestInfo[]> testBlocks=createTestBlocks(5,0);
    try {
      queue.addTestBlocks(testBlocks,false);
      fail("Expected IllegalArgumentException");
    }
 catch (    IllegalArgumentException e) {
    }
    assertEquals(expectedBlocks,queue.getTestBlocks());
  }
{
    List<TestInfo[]> testBlocks=createTestBlocks(3,1);
    queue.addTestBlocks(testBlocks,true);
    expectedBlocks.addAll(testBlocks);
    assertEquals(expectedBlocks,queue.getTestBlocks());
  }
{
    List<TestInfo[]> testBlocks=createTestBlocks(1,1);
    try {
      queue.addTestBlocks(testBlocks,false);
      fail("Expected IllegalArgumentException");
    }
 catch (    IllegalArgumentException e) {
    }
    assertEquals(expectedBlocks,queue.getTestBlocks());
  }
}

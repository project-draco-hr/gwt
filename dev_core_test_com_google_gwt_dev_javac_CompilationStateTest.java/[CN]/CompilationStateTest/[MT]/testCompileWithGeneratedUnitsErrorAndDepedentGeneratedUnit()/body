{
  assertUnitsChecked(state.getCompilationUnits());
  MockJavaResource badFoo=new MockJavaResource(Shared.getTypeName(JavaResourceBase.FOO)){
    @Override public CharSequence getContent(){
      return "compilation error LOL!";
    }
  }
;
  oracle.add(badFoo);
  rebuildCompilationState();
  addGeneratedUnits(JavaResourceBase.BAR);
  CompilationUnit badUnit=state.getCompilationUnitMap().get(Shared.getTypeName(badFoo));
  assertTrue(badUnit.isError());
  CompilationUnit invalidUnit=state.getCompilationUnitMap().get(Shared.getTypeName(JavaResourceBase.BAR));
  assertTrue(invalidUnit.isError());
  Set<CompilationUnit> goodUnits=new HashSet<CompilationUnit>(state.getCompilationUnits());
  goodUnits.remove(badUnit);
  goodUnits.remove(invalidUnit);
  assertUnitsChecked(goodUnits);
}

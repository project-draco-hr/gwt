{
  Map<String,CompilationUnit> unitMap=state.getCompilationUnitMap();
  Set<CompilationUnit> units=state.getCompilationUnits();
  assertEquals(new HashSet<CompilationUnit>(unitMap.values()),units);
  Map<String,JavaSourceFile> sourceMap=new HashMap<String,JavaSourceFile>(oracle.getSourceMap());
  Set<String> generatedTypes=new HashSet<String>(Arrays.asList(generatedTypeNames));
  assertEquals(sourceMap.size() + generatedTypes.size(),units.size());
  for (  Entry<String,CompilationUnit> entry : unitMap.entrySet()) {
    String className=entry.getKey();
    CompilationUnit unit=entry.getValue();
    assertEquals(className,unit.getTypeName());
    if (unit.isGenerated()) {
      assertTrue(generatedTypes.contains(className));
      assertNotNull(generatedTypes.remove(className));
    }
 else {
      assertTrue(sourceMap.containsKey(className));
      assertNotNull(sourceMap.remove(className));
    }
  }
  assertEquals(0,sourceMap.size());
  assertEquals(0,generatedTypes.size());
}

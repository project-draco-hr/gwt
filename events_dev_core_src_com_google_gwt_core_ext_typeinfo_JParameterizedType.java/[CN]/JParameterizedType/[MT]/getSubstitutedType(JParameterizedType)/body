{
  maybeInitializeTypeParameterSubstitutionMap();
  if (this == parameterizedType) {
    return this;
  }
  JClassType[] newTypeArgs=new JClassType[typeArgs.size()];
  for (int i=0; i < newTypeArgs.length; ++i) {
    newTypeArgs[i]=typeArgs.get(i).getSubstitutedType(parameterizedType);
  }
  return getOracle().getParameterizedType(getBaseType(),getEnclosingType(),newTypeArgs);
}

{
  this.eventBus=eventBus;
  this.requestFactory=requestFactory;
  this.numRows=numRows;
  table=new DataGrid<PersonProxy>(numRows,GWT.<TableResources>create(TableResources.class));
  initWidget(GWT.<Binder>create(Binder.class).createAndBindUi(this));
  Column<PersonProxy,String> nameColumn=new NameColumn();
  table.addColumn(nameColumn,"Name");
  table.setColumnWidth(nameColumn,"25ex");
  Column<PersonProxy,String> descriptionColumn=new DescriptionColumn();
  table.addColumn(descriptionColumn,"Description");
  table.setColumnWidth(descriptionColumn,"40ex");
  table.addColumn(new ScheduleColumn(),"Schedule");
  table.setRowCount(numRows,false);
  table.setSelectionModel(selectionModel);
  table.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.DISABLED);
  EntityProxyChange.registerForProxyType(eventBus,PersonProxy.class,new EntityProxyChange.Handler<PersonProxy>(){
    @Override public void onProxyChange(    EntityProxyChange<PersonProxy> event){
      SummaryWidget.this.onPersonChanged(event);
    }
  }
);
  FilterChangeEvent.register(eventBus,new FilterChangeEvent.Handler(){
    @Override public void onFilterChanged(    FilterChangeEvent e){
      filter.set(e.getDay(),e.isSelected());
      if (!pending) {
        pending=true;
        Scheduler.get().scheduleFinally(new ScheduledCommand(){
          @Override public void execute(){
            pending=false;
            fetch(0);
          }
        }
);
      }
    }
  }
);
  selectionModel.addSelectionChangeHandler(new SelectionChangeEvent.Handler(){
    @Override public void onSelectionChange(    SelectionChangeEvent event){
      SummaryWidget.this.refreshSelection();
    }
  }
);
  fetch(0);
}

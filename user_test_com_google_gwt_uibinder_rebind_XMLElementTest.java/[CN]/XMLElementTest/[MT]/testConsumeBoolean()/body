{
  init("<doc>\n\n<elm yes='true' no='false' " + "fnord='fnord' ref='{foo.bar.baz}'/></doc>");
  assertNull(elm.consumeBooleanAttribute("foo"));
  assertEquals("true",elm.consumeBooleanAttribute("yes"));
  assertNull(elm.consumeBooleanAttribute("yes"));
  assertEquals("false",elm.consumeBooleanAttribute("no"));
  assertNull(elm.consumeBooleanAttribute("no"));
  assertEquals("foo.bar().baz()",elm.consumeBooleanAttribute("ref"));
  assertNull(logger.died);
  try {
    elm.consumeBooleanAttribute("fnord");
    fail("Should throw UnableToCompleteException on misparse");
  }
 catch (  UnableToCompleteException c) {
    assertNotNull(logger.died);
    assertTrue("Expect line number",logger.died.contains("Unknown:3"));
  }
}

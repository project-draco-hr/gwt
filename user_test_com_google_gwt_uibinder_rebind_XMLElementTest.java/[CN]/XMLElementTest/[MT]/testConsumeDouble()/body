{
  init("<doc><elm minus='-123.45' plus='123.45' minus-one='-1' " + "plus-one='1' fnord='fnord' ref='{foo.bar.baz}' empty=''/></doc>");
  assertEquals("1",elm.consumeDoubleAttribute("plus-one"));
  assertEquals("",elm.consumeDoubleAttribute("plus-one"));
  assertEquals("-1",elm.consumeDoubleAttribute("minus-one"));
  assertEquals("",elm.consumeDoubleAttribute("minus-one"));
  assertEquals("123.45",elm.consumeDoubleAttribute("plus"));
  assertEquals("",elm.consumeDoubleAttribute("plus"));
  assertEquals("-123.45",elm.consumeDoubleAttribute("minus"));
  assertEquals("",elm.consumeDoubleAttribute("minus"));
  assertEquals("(double)foo.bar().baz()",elm.consumeDoubleAttribute("ref"));
  assertEquals("",elm.consumeDoubleAttribute("ref"));
  assertEquals("",elm.consumeDoubleAttribute("empty"));
  try {
    elm.consumeDoubleAttribute("fnord");
    fail("Should throw UnableToCompleteException on misparse");
  }
 catch (  UnableToCompleteException c) {
    assertNotNull(logger.died);
  }
}

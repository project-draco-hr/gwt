{
  init("<doc><elm yes='true' no='false' " + "fnord='fnord' ref='{foo.bar.baz}' empty=''/></doc>");
  assertNull(elm.consumeBooleanConstantAttribute("foo"));
  assertTrue(elm.consumeBooleanConstantAttribute("yes"));
  assertNull(elm.consumeBooleanConstantAttribute("yes"));
  assertFalse(elm.consumeBooleanConstantAttribute("no"));
  assertNull(elm.consumeBooleanConstantAttribute("no"));
  assertNull(logger.died);
  try {
    elm.consumeBooleanConstantAttribute("empty");
  }
 catch (  UnableToCompleteException c) {
    assertNotNull(logger.died);
  }
  logger.died=null;
  try {
    elm.consumeBooleanConstantAttribute("ref");
    fail("Should throw UnableToCompleteException on field ref");
  }
 catch (  UnableToCompleteException c) {
    assertNotNull(logger.died);
  }
  logger.died=null;
  try {
    elm.consumeBooleanConstantAttribute("fnord");
    fail("Should throw UnableToCompleteException on misparse");
  }
 catch (  UnableToCompleteException c) {
    assertNotNull(logger.died);
  }
}

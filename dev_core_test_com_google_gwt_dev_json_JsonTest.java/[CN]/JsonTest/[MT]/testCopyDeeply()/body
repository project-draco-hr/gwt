{
  final JsonObject a=new JsonObject();
  a.put("a",3);
  a.put("b",120.456);
  a.put("c","json\n\r\f\t\b\u8730");
  a.put("d",new JsonObject());
  a.put("e",new JsonArray());
  a.put("f",true);
  a.put("g",JsonValue.NULL);
  final JsonNumber aa=a.get("a").asNumber();
  final JsonNumber ab=a.get("b").asNumber();
  final JsonString ac=a.get("c").asString();
  final JsonObject ad=a.get("d").asObject();
  final JsonArray ae=a.get("e").asArray();
  final JsonObject b=a.copyDeeply();
  final JsonNumber ba=b.get("a").asNumber();
  final JsonNumber bb=b.get("b").asNumber();
  final JsonString bc=b.get("c").asString();
  final JsonObject bd=b.get("d").asObject();
  final JsonArray be=b.get("e").asArray();
  final JsonBoolean bf=b.get("f").asBoolean();
  final JsonValue bg=b.get("g");
  assertEquals(3,ba.getInteger());
  assertNotSame(aa,ba);
  assertEquals(120.456,bb.getDecimal(),0.0001);
  assertNotSame(ab,bb);
  assertEquals("json\n\r\f\t\b\u8730",bc.getString());
  assertNotSame(ac,bc);
  assertTrue(bd.isEmpty());
  assertNotSame(ad,bd);
  assertEquals(0,be.getLength());
  assertNotSame(ae,be);
  assertTrue(bf.getBoolean());
  assertEquals(bg,JsonValue.NULL);
}

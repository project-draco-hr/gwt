{
  UrlBuilder builder=new UrlBuilder();
  builder.setHost("google.com");
  builder.setPath("path to file");
  builder.setParameter("the key","the value");
  assertEquals("http://google.com/path%20to%20file?the+key=the+value",builder.buildString());
  builder=new UrlBuilder();
  builder.setHost("google.com");
  builder.setPath("?not-query#not-hash");
  builder.setParameter("not=value&not-next","&not-next=pair");
  builder.setParameter("#not-hash","#not-hash");
  builder.setHash("hash#in-hash");
  assertEquals("http://google.com/%3Fnot-query%23not-hash?not%3Dvalue%26not-next=%26not-next%3Dpair&%23not-hash=%23not-hash#hash%23in-hash",builder.buildString());
  builder=new UrlBuilder();
  builder.setHost("google.com");
  builder.setPath("path");
  builder.setHash("hash");
  builder.setParameter("a_b","a+b");
  assertEquals("http://google.com/path?a_b=a%2Bb#hash",builder.buildString());
  builder.setParameter("a_b","a&b");
  assertEquals("http://google.com/path?a_b=a%26b#hash",builder.buildString());
  builder.setParameter("a_b","a%b");
  assertEquals("http://google.com/path?a_b=a%25b#hash",builder.buildString());
  builder.setHash("ha#sh#");
  assertEquals("http://google.com/path?a_b=a%25b#ha%23sh%23",builder.buildString());
}

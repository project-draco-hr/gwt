{
  if (context.getCachedData(KEY_HAS_CACHED_DATA,Boolean.class) == Boolean.TRUE) {
    replacementsByClassAndMethod=context.getCachedData(KEY_BY_CLASS_AND_METHOD,Map.class);
    replacementsForSharedMethods=context.getCachedData(KEY_SHARED_METHODS,Map.class);
    logger.log(TreeLogger.DEBUG,"Using cached replacements maps");
  }
 else {
    context.putCachedData(KEY_HAS_CACHED_DATA,Boolean.TRUE);
    replacementsByClassAndMethod=new IdentityHashMap<JClassType,Map<JMethod,String>>();
    context.putCachedData(KEY_BY_CLASS_AND_METHOD,replacementsByClassAndMethod);
    replacementsForSharedMethods=new IdentityHashMap<JMethod,String>();
    context.putCachedData(KEY_SHARED_METHODS,replacementsForSharedMethods);
    computeObfuscatedNames(logger);
  }
}

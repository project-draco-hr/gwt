{
  JClassType bundleType=method.getEnclosingType();
  String qualifiedMethodName=bundleType.getQualifiedSourceName() + "." + method.getName();
  String mappingFileName="cssResource/" + qualifiedMethodName + ".cssmap";
  OutputStream os=null;
  try {
    os=context.getGeneratorContext().tryCreateResource(logger,mappingFileName);
  }
 catch (  UnableToCompleteException e) {
    logger.log(TreeLogger.WARN,"Could not create resource: " + mappingFileName);
    return;
  }
  if (os == null) {
    return;
  }
  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(os));
  try {
    for (    Map.Entry<JMethod,String> replacement : actualReplacements.entrySet()) {
      String qualifiedName=replacement.getKey().getEnclosingType().getQualifiedSourceName();
      String baseName=replacement.getKey().getName();
      writer.write(qualifiedName.replaceAll("[.$]","-") + "-" + baseName);
      writer.write(",");
      writer.write(replacement.getValue());
      writer.newLine();
    }
    writer.flush();
    writer.close();
  }
 catch (  IOException e) {
    logger.log(TreeLogger.WARN,"Error writing artifact: " + mappingFileName);
  }
  try {
    context.getGeneratorContext().commitResource(logger,os).setVisibility(Visibility.Private);
  }
 catch (  UnableToCompleteException e) {
    logger.log(TreeLogger.WARN,"Error trying to commit artifact: " + mappingFileName);
  }
}

{
  DefsCollector collector=new DefsCollector();
  collector.accept(sheet);
  Set<String> defs=collector.getDefs();
  for (  JMethod toImplement : methods) {
    String name=toImplement.getName();
    if (ignoredMethods.contains(name)) {
      continue;
    }
    if (defs.contains(name) && obfuscatedClassNames.containsKey(toImplement)) {
      logger.log(TreeLogger.ERROR,"@def shadows CSS class name: " + name + ". Fix by renaming the @def name or the CSS class name.");
      throw new UnableToCompleteException();
    }
    if (defs.contains(toImplement.getName()) && toImplement.getParameters().length == 0) {
      writeDefAssignment(logger,sw,toImplement,sheet);
    }
 else     if (toImplement.getReturnType().equals(stringType) && toImplement.getParameters().length == 0) {
      writeClassAssignment(sw,toImplement,obfuscatedClassNames);
    }
 else {
      logger.log(TreeLogger.ERROR,"Don't know how to implement method " + toImplement.getName());
      throw new UnableToCompleteException();
    }
  }
}

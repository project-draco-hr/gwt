{
  Strict strictAnnotation=method.getAnnotation(Strict.class);
  NotStrict nonStrictAnnotation=method.getAnnotation(NotStrict.class);
  boolean strict=false;
  if (strictAnnotation != null && nonStrictAnnotation != null) {
    logger.log(TreeLogger.WARN,"Contradictory annotations " + Strict.class.getName() + " and "+ NotStrict.class.getName()+ " applied to the CssResource accessor method; assuming strict");
    strict=true;
  }
 else   if (strictAnnotation == null && nonStrictAnnotation == null) {
    try {
      PropertyOracle propertyOracle=context.getGeneratorContext().getPropertyOracle();
      ConfigurationProperty prop=propertyOracle.getConfigurationProperty("CssResource.strictAccessors");
      String propertyValue=prop.getValues().get(0);
      if (Boolean.valueOf(propertyValue)) {
        logger.log(TreeLogger.WARN,"CssResource.strictAccessors is true, but " + method.getName() + "() is missing the @Strict annotation.");
        strict=true;
      }
    }
 catch (    BadPropertyValueException e) {
    }
    if (!strict) {
      logger.log(TreeLogger.WARN,"Accessor does not specify " + Strict.class.getName() + " or "+ NotStrict.class.getName()+ ". The default behavior will change from non-strict "+ "to strict in a future revision.");
    }
  }
 else   if (nonStrictAnnotation != null) {
    strict=false;
  }
 else   if (strictAnnotation != null) {
    strict=true;
  }
  return strict;
}

{
  final Iterator<T> backing=super.iterator();
  return new ForwardingIterator<T>(){
    private T previous;
    @Override protected Iterator<T> delegate(){
      return backing;
    }
    @Override public T next(){
      previous=delegate().next();
      return previous;
    }
    @Override public void remove(){
      delegate().remove();
      byType.remove(previous);
    }
  }
;
}

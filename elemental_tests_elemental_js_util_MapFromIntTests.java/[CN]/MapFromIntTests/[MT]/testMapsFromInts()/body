{
  final MapFromIntTo<TestItem> map=Collections.mapFromIntTo();
  final int[] keys=new int[]{1,2,3};
  final TestItem[] vals=new TestItem[]{new TestItem(0),new TestItem(1),new TestItem(2)};
  for (int i=0, n=keys.length; i < n; ++i) {
    map.put(keys[i],vals[i]);
  }
  for (int i=0, n=keys.length; i < n; ++i) {
    assertTrue(map.hasKey(keys[i]));
    assertEquals(vals[i],map.get(keys[i]));
  }
  final TestItem[] newVals=new TestItem[]{new TestItem(3),new TestItem(4),new TestItem(5)};
  for (int i=0, n=keys.length; i < n; ++i) {
    map.put(keys[i],newVals[i]);
  }
  for (int i=0, n=keys.length; i < n; ++i) {
    assertTrue(map.hasKey(keys[i]));
    assertEquals(newVals[i],map.get(keys[i]));
  }
  assertSamelitude(keys,map.keys());
  assertSamelitude(newVals,map.values());
  map.remove(keys[0]);
  assertNull(map.get(keys[0]));
  assertFalse(map.hasKey(keys[0]));
}

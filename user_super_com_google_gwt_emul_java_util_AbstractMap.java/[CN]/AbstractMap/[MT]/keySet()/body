{
  final Set<Entry<K,V>> entrySet=entrySet();
  return new AbstractSet<K>(){
    public boolean contains(    Object key){
      return containsKey(key);
    }
    public Iterator<K> iterator(){
      final Iterator<Entry<K,V>> outerIter=entrySet.iterator();
      return new Iterator<K>(){
        public boolean hasNext(){
          return outerIter.hasNext();
        }
        public K next(){
          Map.Entry<K,V> entry=outerIter.next();
          return entry.getKey();
        }
        public void remove(){
          outerIter.remove();
        }
      }
;
    }
    public int size(){
      return entrySet.size();
    }
  }
;
}

{
  if (args.length < 1) {
    System.err.println("usage: java com.google.doctool.custom.FindPackages <root dir>");
    System.exit(1);
  }
  try {
    File rootDir=new File(args[0]);
    File build=new File(rootDir,"build");
    File buildOut=new File(build,"out");
    File outFile=new File(buildOut,"packages.properties");
    PrintStream out=new PrintStream(new FileOutputStream(outFile),false,"UTF-8");
    out.println("# THIS FILE IS AUTOMATICALLY GENERATED BY");
    out.println("# com.google.doctool.custom.FindPackages");
    out.println("#");
    out.println("# This file contains all of the user javadoc packages");
    out.println("#");
    out.println("# JRE emulation packages");
    out.println("JAVA_PKGS=\\");
    for (int i=0; i < JAVA_PKGS.length; i++) {
      if (i < JAVA_PKGS.length - 1) {
        out.println(JAVA_PKGS[i] + ";\\");
      }
 else {
        out.println(JAVA_PKGS[i]);
      }
    }
    out.println("# The last package should not have a trailing semicolon");
    out.println("");
    out.println("# Individual classes to include when we don't want to include an entire package");
    out.println("USER_CLASSES=\\");
    Set<String> classPaths=new HashSet<String>();
    for (int i=0; i < USER_CLASSES.length; i++) {
      String className=USER_CLASSES[i];
      String classPath=className.substring(0,className.lastIndexOf('/'));
      if (!classPaths.contains(classPath)) {
        classPaths.add(classPath);
        out.println("${gwt.root}/" + classPath + "/package-info.java"+ ":\\");
      }
      if (i < USER_CLASSES.length - 1) {
        out.println("${gwt.root}/" + className + ":\\");
      }
 else {
        out.println("${gwt.root}/" + className);
      }
    }
    out.println("");
    out.println("# Packages to include");
    out.println("USER_PKGS=\\");
    Set<String> packages=new HashSet<String>();
    for (    String dir : SOURCE_DIRS) {
      File f=new File(rootDir,dir);
      findPackages(f,null,packages);
    }
    for (    String s : PACKAGE_WHITELIST) {
      packages.add(s);
    }
    ArrayList<String> packageList=new ArrayList<String>(packages);
    Collections.sort(packageList);
    for (int i=0; i < packages.size(); i++) {
      if (i < packages.size() - 1) {
        out.println(packageList.get(i) + ";\\");
      }
 else {
        out.println(packageList.get(i));
      }
    }
    out.println("# The last package should not have a trailing semicolon");
    out.close();
  }
 catch (  IOException e) {
    System.err.println("Got I/O Exception: " + e);
    System.exit(2);
  }
}

{
  SourceInfo sourceInfo=x.getSourceInfo().makeChild("Creating dimensions");
  JMethodCall call=new JMethodCall(program,sourceInfo,null,initDims,arrayType);
  JsonArray classLitList=new JsonArray(program,sourceInfo);
  JsonArray typeIdList=new JsonArray(program,sourceInfo);
  JsonArray queryIdList=new JsonArray(program,sourceInfo);
  JsonArray dimList=new JsonArray(program,sourceInfo);
  JType cur=arrayType;
  for (int i=0; i < dims; ++i) {
    JArrayType curArrayType=(JArrayType)cur;
    JLiteral classLit=x.getClassLiterals().get(i);
    classLitList.exprs.add(classLit);
    JLiteral typeIdLit=program.getLiteralInt(program.getTypeId(curArrayType));
    typeIdList.exprs.add(typeIdLit);
    JLiteral queryIdLit=program.getLiteralInt(tryGetQueryId(curArrayType));
    queryIdList.exprs.add(queryIdLit);
    dimList.exprs.add(x.dims.get(i));
    cur=curArrayType.getElementType();
  }
  call.getArgs().add(classLitList);
  call.getArgs().add(typeIdList);
  call.getArgs().add(queryIdList);
  call.getArgs().add(dimList);
  call.getArgs().add(program.getLiteralInt(dims));
  call.getArgs().add(getSeedTypeLiteralFor(cur));
  ctx.replaceMe(call);
}

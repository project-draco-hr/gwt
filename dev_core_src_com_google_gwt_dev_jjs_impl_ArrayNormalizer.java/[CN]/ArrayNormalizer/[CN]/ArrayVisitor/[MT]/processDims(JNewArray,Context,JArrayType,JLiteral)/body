{
  JMethodCall call=new JMethodCall(program,x.getSourceInfo(),null,initDims,arrayType);
  JsonArray typeIdList=new JsonArray(program);
  JsonArray queryIdList=new JsonArray(program);
  JsonArray dimList=new JsonArray(program);
  JType leafType=arrayType.getLeafType();
  int outstandingDims=arrayType.getDims();
  for (int i=0; i < x.dims.size(); ++i) {
    JExpression dim=(JExpression)x.dims.get(i);
    if (dim instanceof JAbsentArrayDimension) {
      break;
    }
    JArrayType cur=program.getTypeArray(leafType,outstandingDims--);
    JLiteral typeIdLit=program.getLiteralInt(program.getTypeId(cur));
    typeIdList.exprs.add(typeIdLit);
    JLiteral queryIdLit=program.getLiteralInt(tryGetQueryId(cur));
    queryIdList.exprs.add(queryIdLit);
    dimList.exprs.add(dim);
  }
  JType targetType=leafType;
  if (outstandingDims > 0) {
    targetType=program.getTypeArray(targetType,outstandingDims);
  }
  call.getArgs().add(litTypeName);
  call.getArgs().add(typeIdList);
  call.getArgs().add(queryIdList);
  call.getArgs().add(dimList);
  call.getArgs().add(getSeedTypeLiteralFor(targetType));
  ctx.replaceMe(call);
}

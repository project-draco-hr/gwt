{
  resetEmpty();
  List list=getList();
  assertTrue("Empty lists should be equal",list.equals(confirmed));
  verify();
  assertTrue("Empty list should equal self",list.equals(list));
  verify();
  List list2=Arrays.asList(getFullElements());
  assertTrue("Empty list shouldn't equal full",!list.equals(list2));
  verify();
  list2=Arrays.asList(getOtherElements());
  assertTrue("Empty list shouldn't equal other",!list.equals(list2));
  verify();
  resetFull();
  list=getList();
  assertTrue("Full lists should be equal",list.equals(confirmed));
  verify();
  assertTrue("Full list should equal self",list.equals(list));
  verify();
  list2=makeEmptyList();
  assertTrue("Full list shouldn't equal empty",!list.equals(list2));
  verify();
  list2=Arrays.asList(getOtherElements());
  assertTrue("Full list shouldn't equal other",!list.equals(list2));
  verify();
  list2=Arrays.asList(getFullElements());
  Collections.reverse(list2);
  assertTrue("Full list shouldn't equal full list with same elements" + " but different order",!list.equals(list2));
  verify();
  assertTrue("List shouldn't equal String",!list.equals(""));
  verify();
  final List listForC=Arrays.asList(getFullElements());
  Collection c=new AbstractCollection(){
    @Override public int size(){
      return listForC.size();
    }
    @Override public Iterator iterator(){
      return listForC.iterator();
    }
  }
;
  assertTrue("List shouldn't equal nonlist with same elements " + " in same order",!list.equals(c));
  verify();
}

{
  try {
    if (Boolean.class == valueType) {
      return Boolean.valueOf(value);
    }
    if (Character.class == valueType) {
      return value.charAt(0);
    }
    if (Byte.class == valueType) {
      return Byte.valueOf(value);
    }
    if (Short.class == valueType) {
      return Short.valueOf(value);
    }
    if (Float.class == valueType) {
      return Float.valueOf(value);
    }
    if (BigInteger.class == valueType) {
      return new BigDecimal(value).toBigInteger();
    }
    if (BigDecimal.class == valueType) {
      return new BigDecimal(value);
    }
    if (Integer.class == valueType) {
      return Integer.valueOf(value);
    }
    if (Long.class == valueType) {
      return Long.valueOf(value);
    }
    if (Double.class == valueType) {
      return Double.valueOf(value);
    }
    if (Date.class == valueType) {
      double millis=new Date().getTime();
      millis=Double.parseDouble(value);
      if (GWT.isScript()) {
        return ProxyJsoImpl.dateForDouble(millis);
      }
 else {
        return new Date((long)millis);
      }
    }
  }
 catch (  final Exception ex) {
    throw new IllegalStateException("Value  " + value + " cannot be converted to  "+ valueType);
  }
  if (Enum.class == valueType) {
    int ordinal=Integer.parseInt(value);
    for (    Enum<?> evalue : enumValues) {
      if (ordinal == evalue.ordinal()) {
        return value;
      }
    }
  }
  if (String.class == valueType) {
    return value;
  }
  return null;
}

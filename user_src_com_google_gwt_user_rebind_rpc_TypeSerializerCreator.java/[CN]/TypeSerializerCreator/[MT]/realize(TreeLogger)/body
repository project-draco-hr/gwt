{
  logger=logger.branch(TreeLogger.DEBUG,"Generating TypeSerializer for service interface '" + typeSerializerClassName + "'",null);
  createFieldSerializers(logger,context);
  int index=0;
  for (  JType type : getSerializableTypes()) {
    String typeString;
    if (elideTypeNames) {
      typeString=Integer.toString(++index,Character.MAX_RADIX);
    }
 else {
      typeString=getTypeString(type);
    }
    typeStrings.put(type,typeString);
  }
  if (srcWriter != null) {
    writeStaticFields();
    writeStaticInitializer();
    if (context.isProdMode()) {
      writeLoadMethodsNative();
      writeLoadSignaturesNative();
    }
 else {
      writeLoadMethodsJava();
      writeLoadSignaturesJava();
    }
    writeConstructor();
    srcWriter.commit(logger);
  }
  return typeSerializerClassName;
}

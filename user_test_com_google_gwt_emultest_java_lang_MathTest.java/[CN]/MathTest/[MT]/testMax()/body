{
  assertEquals(2d,Math.max(1d,2d));
  assertEquals(2d,Math.max(2d,1d));
  assertEquals(0d,Math.max(-0d,0d));
  assertEquals(0d,Math.max(0d,-0d));
  assertEquals(1d,Math.max(-1d,1d));
  assertEquals(1d,Math.max(1d,-1d));
  assertEquals(-1d,Math.max(-1d,-2d));
  assertEquals(-1d,Math.max(-2d,-1d));
  assertTrue(Double.isNaN(Math.max(Double.NaN,1d)));
  assertTrue(Double.isNaN(Math.max(1d,Double.NaN)));
  assertTrue(Double.isNaN(Math.max(Double.NaN,Double.POSITIVE_INFINITY)));
  assertTrue(Double.isNaN(Math.max(Double.POSITIVE_INFINITY,Double.NaN)));
  assertTrue(Double.isNaN(Math.max(Double.NaN,Double.NEGATIVE_INFINITY)));
  assertTrue(Double.isNaN(Math.max(Double.NEGATIVE_INFINITY,Double.NaN)));
  assertEquals(2f,Math.max(1f,2f));
  assertEquals(2f,Math.max(2f,1f));
  assertEquals(0f,Math.max(-0f,0f));
  assertEquals(0f,Math.max(0f,-0f));
  assertEquals(1f,Math.max(-1f,1f));
  assertEquals(1f,Math.max(1f,-1f));
  assertEquals(-1f,Math.max(-1f,-2f));
  assertEquals(-1f,Math.max(-2f,-1f));
  assertTrue(Float.isNaN(Math.max(Float.NaN,1f)));
  assertTrue(Float.isNaN(Math.max(1f,Float.NaN)));
  assertTrue(Float.isNaN(Math.max(Float.NaN,Float.POSITIVE_INFINITY)));
  assertTrue(Float.isNaN(Math.max(Float.POSITIVE_INFINITY,Float.NaN)));
  assertTrue(Float.isNaN(Math.max(Float.NaN,Float.NEGATIVE_INFINITY)));
  assertTrue(Float.isNaN(Math.max(Float.NEGATIVE_INFINITY,Float.NaN)));
}

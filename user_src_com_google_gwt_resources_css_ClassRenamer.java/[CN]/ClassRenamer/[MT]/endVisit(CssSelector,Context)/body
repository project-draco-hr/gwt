{
  String sel=x.getSelector();
  int originalLength=sel.length();
  Matcher ma=CssSelector.CLASS_SELECTOR_PATTERN.matcher(sel);
  StringBuilder sb=new StringBuilder(originalLength);
  int start=0;
  while (ma.find()) {
    String sourceClassName=ma.group(1);
    Replacement entry=potentialReplacements.get(sourceClassName);
    if (entry == null) {
      unknownClasses.add(sourceClassName);
      sheet.getDebugInfo().addToClassMap(sourceClassName,sourceClassName);
      continue;
    }
 else     if (entry == UNREFERENCED_EXTERNAL) {
      sheet.getDebugInfo().addToClassMap(sourceClassName,sourceClassName);
      continue;
    }
    JMethod method=entry.getMethod();
    String obfuscatedClassName=entry.getObfuscatedClassName();
    sb.append(sel.subSequence(start,ma.start(1)));
    sb.append(obfuscatedClassName);
    start=ma.end(1);
    actualReplacements.put(method,obfuscatedClassName);
    missingClasses.remove(method);
    sheet.getDebugInfo().addToClassMap(sourceClassName,obfuscatedClassName);
  }
  if (start != 0) {
    sb.append(sel.subSequence(start,originalLength));
    x.setSelector(sb.toString());
  }
}

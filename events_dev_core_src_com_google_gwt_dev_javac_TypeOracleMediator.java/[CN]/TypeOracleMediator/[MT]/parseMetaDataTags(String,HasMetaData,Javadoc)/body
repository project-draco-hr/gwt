{
  int start=javadoc.sourceStart;
  int end=javadoc.sourceEnd;
  if (start < 0 || end > unitSource.length() || start > end) {
    return false;
  }
  String comment=unitSource.substring(start,end + 1);
  BufferedReader reader=new BufferedReader(new StringReader(comment.toString()));
  String activeTag=null;
  final List<String> tagValues=new ArrayList<String>();
  try {
    boolean firstLine=true;
    for (String line=reader.readLine(); line != null; line=reader.readLine()) {
      if (firstLine) {
        firstLine=false;
        int commentStart=line.indexOf("/**");
        if (commentStart == -1) {
          return false;
        }
        line=line.substring(commentStart + 3);
      }
      if (activeTag == null && line.indexOf('@') < 0) {
        continue;
      }
      String[] tokens=PATTERN_WHITESPACE.split(line);
      boolean canIgnoreStar=true;
      for (int i=0; i < tokens.length; i++) {
        String token=tokens[i];
        if (token.endsWith("*/")) {
          token=token.substring(0,token.length() - 2);
        }
        if (canIgnoreStar && token.startsWith("*")) {
          token=token.substring(1);
          canIgnoreStar=false;
        }
        if (token.length() > 0) {
          canIgnoreStar=false;
          if (token.startsWith("@")) {
            if (activeTag != null) {
              finishTag(hasMetaData,activeTag,tagValues);
            }
            activeTag=token.substring(1);
          }
 else           if (activeTag != null) {
            tagValues.add(token);
          }
 else {
          }
        }
      }
    }
  }
 catch (  IOException e) {
    return false;
  }
  finishTag(hasMetaData,activeTag,tagValues);
  return true;
}

{
  Object o1=new Object();
  Object o2=new Object();
  Object o3=new Object();
  ArrayDeque<Object> deque=new ArrayDeque<>();
  Iterator<Object> it=deque.descendingIterator();
  assertFalse(it.hasNext());
  try {
    it.next();
    fail();
  }
 catch (  NoSuchElementException expected) {
  }
  deque.add(o1);
  deque.add(o2);
  deque.add(o3);
  it=deque.descendingIterator();
  assertTrue(it.hasNext());
  assertEquals(o3,it.next());
  assertTrue(it.hasNext());
  assertEquals(o2,it.next());
  assertTrue(it.hasNext());
  assertEquals(o1,it.next());
  assertFalse(it.hasNext());
  try {
    it.next();
    fail();
  }
 catch (  NoSuchElementException expected) {
  }
  checkDequeSizeAndContent(deque,o1,o2,o3);
  deque=new ArrayDeque<>();
  deque.add(o1);
  deque.add(o2);
  deque.add(o3);
  it=deque.descendingIterator();
  assertTrue(it.hasNext());
  assertEquals(o3,it.next());
  it.remove();
  assertEquals(2,deque.size());
  assertTrue(it.hasNext());
  assertEquals(o2,it.next());
  assertTrue(it.hasNext());
  assertEquals(o1,it.next());
  it.remove();
  checkDequeSizeAndContent(deque,o2);
}

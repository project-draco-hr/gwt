{
  ArrayDeque<Object> deque=new ArrayDeque<>(asList(getFullNonNullElements()));
  Iterator<Object> it=deque.iterator();
  it.next();
  deque.removeFirst();
  try {
    it.next();
  }
 catch (  ConcurrentModificationException e) {
    fail();
  }
  deque.removeLast();
  try {
    it.next();
    fail();
  }
 catch (  ConcurrentModificationException expected) {
  }
  deque=new ArrayDeque<>(asList(getFullNonNullElements()));
  it=deque.iterator();
  it.next();
  deque.clear();
  try {
    it.next();
    fail();
  }
 catch (  ConcurrentModificationException expected) {
  }
  deque=new ArrayDeque<>(asList(getFullNonNullElements()));
  it=deque.iterator();
  it.next();
  deque.addFirst(new Object());
  try {
    it.next();
  }
 catch (  ConcurrentModificationException e) {
    fail();
  }
  deque.addLast(new Object());
  try {
    it.next();
    fail();
  }
 catch (  ConcurrentModificationException expected) {
  }
  deque=new ArrayDeque<>(asList(getFullNonNullElements()));
  it=deque.iterator();
  it.next();
  it.next();
  deque.removeFirst();
  try {
    it.remove();
  }
 catch (  ConcurrentModificationException e) {
    fail();
  }
  deque=new ArrayDeque<>(asList(getFullNonNullElements()));
  it=deque.iterator();
  it.next();
  it.next();
  deque.removeFirst();
  deque.removeFirst();
  try {
    it.remove();
    fail();
  }
 catch (  ConcurrentModificationException expected) {
  }
}

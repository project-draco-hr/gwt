{
  CellBasedWidgetImpl.get().onBrowserEvent(this,event);
  super.onBrowserEvent(event);
  String eventType=event.getType();
  if ("blur".equals(eventType)) {
    keyboardSelectedNode.keyboardBlur();
    return;
  }
  if ("focus".equals(eventType)) {
    keyboardSelectedNode.keyboardFocus();
    return;
  }
  boolean keyUp="keyup".equals(eventType);
  boolean keyDown="keydown".equals(eventType);
  if (keyDown && !cellIsEditing) {
    return;
  }
  if (keyUp && !cellIsEditing) {
    if (handleKey(event)) {
      return;
    }
  }
  Element target=event.getEventTarget().cast();
  ArrayList<Element> chain=new ArrayList<Element>();
  collectElementChain(chain,getElement(),target);
  CellTreeNodeView<?> nodeView=findItemByChain(chain,0,rootNode);
  if (nodeView != null && nodeView != rootNode) {
    if ("click".equals(event.getType())) {
      Element showMoreElem=nodeView.getShowMoreElement();
      if (nodeView.getImageElement().isOrHasChild(target)) {
        nodeView.setOpen(!nodeView.isOpen(),true);
        return;
      }
 else       if (showMoreElem != null && showMoreElem.isOrHasChild(target)) {
        nodeView.showMore();
        return;
      }
      keyboardSelectedNode.keyboardExit();
      keyboardSelectedNode=nodeView.getParentNode();
      keyboardSelectedNode.keyboardEnter(target,true);
    }
    if (nodeView.getCellParent().isOrHasChild(target) || (eventType.startsWith("key") && nodeView.getCellParent().getParentElement() == target)) {
      nodeView.fireEventToCell(event);
    }
  }
}

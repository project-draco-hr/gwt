{
  TypeOracle oracle=genCtx.getTypeOracle();
  ResourceOracle resourceOracle=genCtx.getResourcesOracle();
  JClassType interfaceType;
  try {
    interfaceType=oracle.getType(fqInterfaceName);
  }
 catch (  NotFoundException e) {
    throw new RuntimeException(e);
  }
  DesignTimeUtils designTime;
  if (DesignTimeUtilsImpl.isDesignTime(fqInterfaceName)) {
    designTime=new DesignTimeUtilsImpl();
  }
 else {
    designTime=DesignTimeUtilsStub.EMPTY;
  }
  String implName=interfaceType.getName().replace('.','_') + "Impl";
  implName=designTime.getImplName(implName);
  String packageName=interfaceType.getPackage().getName();
  PrintWriterManager writers=new PrintWriterManager(genCtx,logger,packageName);
  PrintWriter printWriter=writers.tryToMakePrintWriterFor(implName);
  Class<?> elementFactoryClass;
  HtmlElementFactory elementFactory=null;
  try {
    PropertyOracle propertyOracle=genCtx.getPropertyOracle();
    ConfigurationProperty factoryProperty=propertyOracle.getConfigurationProperty("uibinder.html.elementfactory");
    elementFactoryClass=Class.forName(factoryProperty.getValues().get(0));
    elementFactory=(HtmlElementFactory)elementFactoryClass.newInstance();
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  if (printWriter != null) {
    generateOnce(interfaceType,implName,printWriter,logger,oracle,resourceOracle,writers,designTime,elementFactory);
  }
  return packageName + "." + implName;
}

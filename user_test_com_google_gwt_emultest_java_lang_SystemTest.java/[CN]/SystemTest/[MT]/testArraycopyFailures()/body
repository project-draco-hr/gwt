{
  int[] src=new int[4];
  int[] dest=new int[]{1,1,1,1};
  double[] destDouble=new double[4];
  String[] strings=new String[4];
  try {
    System.arraycopy(src,5,dest,0,7);
    fail("Should have thrown IndexOutOfBoundsException: src past end");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    System.arraycopy(src,0,dest,5,7);
    fail("Should have thrown IndexOutOfBoundsException: dest past end");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    System.arraycopy(src,-1,dest,0,4);
    fail("Should have thrown IndexOutOfBoundsException: src ofs negative");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    System.arraycopy(src,0,dest,-1,4);
    fail("Should have thrown IndexOutOfBoundsException: dest ofs negative");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    System.arraycopy(src,0,dest,0,-1);
    fail("Should have thrown IndexOutOfBoundsException: negative length");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    System.arraycopy("test",0,dest,0,4);
    fail("Should have thrown ArrayStoreException: src not array");
  }
 catch (  ArrayStoreException e) {
  }
  try {
    System.arraycopy(src,0,"test",0,4);
    fail("Should have thrown ArrayStoreException: dest not array");
  }
 catch (  ArrayStoreException e) {
  }
  try {
    System.arraycopy(src,0,destDouble,0,4);
    fail("Should have thrown ArrayStoreException: different primitive types");
  }
 catch (  ArrayStoreException e) {
  }
  try {
    System.arraycopy(strings,0,dest,0,4);
    fail("Should have thrown ArrayStoreException: reference/primitive mismatch");
  }
 catch (  ArrayStoreException e) {
  }
  try {
    System.arraycopy(src,0,strings,0,4);
    fail("Should have thrown ArrayStoreException: primitive/reference mismatch");
  }
 catch (  ArrayStoreException e) {
  }
}

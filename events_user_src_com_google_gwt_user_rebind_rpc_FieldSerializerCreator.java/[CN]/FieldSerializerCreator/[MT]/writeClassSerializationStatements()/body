{
  for (  JField serializableField : serializableFields) {
    JType fieldType=serializableField.getType();
    String writeMethodName=Shared.getStreamWriteMethodNameFor(fieldType);
    sourceWriter.print("streamWriter.");
    sourceWriter.print(writeMethodName);
    sourceWriter.print("(");
    if (needsAccessorMethods(serializableField)) {
      sourceWriter.print("get");
      sourceWriter.print(Shared.capitalize(serializableField.getName()));
      sourceWriter.println("(instance));");
    }
 else {
      sourceWriter.print("instance.");
      sourceWriter.print(serializableField.getName());
      sourceWriter.println(");");
    }
  }
  sourceWriter.println();
  JClassType superClass=serializableClass.getSuperclass();
  if (superClass != null && serializationOracle.isSerializable(superClass)) {
    String fieldSerializerName=serializationOracle.getFieldSerializerName(superClass);
    sourceWriter.print(fieldSerializerName);
    sourceWriter.println(".serialize(streamWriter, instance);");
  }
}

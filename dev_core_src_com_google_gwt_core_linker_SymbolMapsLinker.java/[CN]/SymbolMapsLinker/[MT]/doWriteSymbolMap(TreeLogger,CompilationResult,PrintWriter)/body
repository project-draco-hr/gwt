{
  for (  SortedMap<SelectionProperty,String> map : result.getPropertyMap()) {
    pw.print("# { ");
    boolean needsComma=false;
    for (    Map.Entry<SelectionProperty,String> entry : map.entrySet()) {
      if (needsComma) {
        pw.print(" , ");
      }
 else {
        needsComma=true;
      }
      pw.print("'");
      pw.print(entry.getKey().getName());
      pw.print("' : '");
      pw.print(entry.getValue());
      pw.print("'");
    }
    pw.println(" }");
  }
  pw.println("# jsName, jsniIdent, className, memberName, sourceUri, sourceLine");
  for (  SymbolData symbol : result.getSymbolMap()) {
    StringBuilder sb=new StringBuilder(1024);
    sb.append(symbol.getSymbolName());
    sb.append(',');
    sb.append(symbol.getJsniIdent());
    sb.append(',');
    sb.append(symbol.getClassName());
    sb.append(',');
    String memberName=symbol.getMemberName();
    if (memberName != null) {
      sb.append(memberName);
    }
    sb.append(',');
    String sourceUri=symbol.getSourceUri();
    if (sourceUri != null) {
      sb.append(sourceUri);
    }
    sb.append(',');
    sb.append(symbol.getSourceLine());
    sb.append('\n');
    pw.write(sb.toString());
  }
}

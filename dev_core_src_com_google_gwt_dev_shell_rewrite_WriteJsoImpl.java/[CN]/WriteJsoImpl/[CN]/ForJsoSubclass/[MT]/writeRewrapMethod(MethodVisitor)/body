{
  Label start=new Label();
  Label notNull=new Label();
  Label notMySubclass=new Label();
  Label doReturn=new Label();
  Label end=new Label();
  mv.visitCode();
  mv.visitLabel(start);
  mv.visitVarInsn(Opcodes.ALOAD,0);
  mv.visitInsn(Opcodes.DUP);
  mv.visitJumpInsn(Opcodes.IFNONNULL,notNull);
  mv.visitInsn(Opcodes.POP);
  mv.visitInsn(Opcodes.ACONST_NULL);
  mv.visitJumpInsn(Opcodes.GOTO,doReturn);
  mv.visitLabel(notNull);
  mv.visitFrame(Opcodes.F_NEW,1,new Object[]{JAVASCRIPTOBJECT_DESC},1,new Object[]{JAVASCRIPTOBJECT_DESC});
  mv.visitInsn(Opcodes.DUP);
  mv.visitTypeInsn(Opcodes.INSTANCEOF,typeName);
  mv.visitJumpInsn(Opcodes.IFEQ,notMySubclass);
  mv.visitTypeInsn(Opcodes.CHECKCAST,typeName);
  mv.visitJumpInsn(Opcodes.GOTO,doReturn);
  mv.visitLabel(notMySubclass);
  mv.visitFrame(Opcodes.F_NEW,1,new Object[]{JAVASCRIPTOBJECT_DESC},1,new Object[]{JAVASCRIPTOBJECT_DESC});
  mv.visitTypeInsn(Opcodes.NEW,typeName);
  mv.visitInsn(Opcodes.DUP_X1);
  mv.visitInsn(Opcodes.SWAP);
  mv.visitMethodInsn(Opcodes.INVOKESPECIAL,typeName,"<init>","(L" + JAVASCRIPTOBJECT_DESC + ";)V");
  mv.visitLabel(doReturn);
  mv.visitFrame(Opcodes.F_NEW,1,new Object[]{JAVASCRIPTOBJECT_DESC},1,new Object[]{JAVASCRIPTOBJECT_DESC});
  mv.visitInsn(Opcodes.ARETURN);
  mv.visitLabel(end);
  mv.visitMaxs(3,1);
  mv.visitLocalVariable("jso","L" + JAVASCRIPTOBJECT_DESC + ";",null,start,end,0);
  mv.visitEnd();
}

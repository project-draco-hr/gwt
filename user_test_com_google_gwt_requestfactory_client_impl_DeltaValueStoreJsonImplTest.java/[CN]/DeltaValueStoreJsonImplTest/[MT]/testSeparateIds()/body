{
  ProxyImpl createProxy=(ProxyImpl)requestFactory.create(SimpleFooProxy.class);
  assertTrue(createProxy.isFuture());
  Long futureId=createProxy.getId();
  ProxyImpl mockProxy=new ProxyImpl(ProxyJsoImpl.create(futureId,1,SimpleRequestFactoryInstance.schema()),RequestFactoryJsonImpl.NOT_FUTURE);
  valueStore.setProxy(mockProxy.asJso(),requestFactory);
  DeltaValueStoreJsonImpl deltaValueStore=new DeltaValueStoreJsonImpl(valueStore,requestFactory);
  deltaValueStore.set(SimpleFooProxy.userName,createProxy,"harry");
  deltaValueStore.set(SimpleFooProxy.userName,mockProxy,"bovik");
  assertTrue(deltaValueStore.isChanged());
  String jsonString=deltaValueStore.toJson();
  JSONObject jsonObject=(JSONObject)JSONParser.parseLenient(jsonString);
  assertFalse(jsonObject.containsKey(WriteOperation.DELETE.name()));
  assertTrue(jsonObject.containsKey(WriteOperation.CREATE.name()));
  assertTrue(jsonObject.containsKey(WriteOperation.UPDATE.name()));
  JSONArray createOperationArray=jsonObject.get(WriteOperation.CREATE.name()).isArray();
  assertEquals(1,createOperationArray.size());
  assertEquals("harry",createOperationArray.get(0).isObject().get(SIMPLE_FOO_CLASS_NAME).isObject().get(SimpleFooProxy.userName.getName()).isString().stringValue());
  JSONArray updateOperationArray=jsonObject.get(WriteOperation.UPDATE.name()).isArray();
  assertEquals(1,updateOperationArray.size());
  assertEquals("bovik",updateOperationArray.get(0).isObject().get(SIMPLE_FOO_CLASS_NAME).isObject().get(SimpleFooProxy.userName.getName()).isString().stringValue());
}

{
  assertCfg("void","try {","  if (b) throwCheckedException();","  k++;","} catch (CheckedException e) {","  i++;","}","j++;").is("BLOCK -> [*]","TRY -> [*]","BLOCK -> [*]","STMT -> [*]","READ(b) -> [*]","COND (EntryPoint.b) -> [THEN=*, ELSE=1]","STMT -> [*]","OPTTHROW(throwCheckedException()) -> [NOTHROW=*, 2, RE=4]","CALL(throwCheckedException) -> [*]","1: STMT -> [*]","READWRITE(k, null) -> [3]","2: BLOCK -> [*]","STMT -> [*]","READWRITE(i, null) -> [*]","3: STMT -> [*]","READWRITE(j, null) -> [*]","4: END");
}

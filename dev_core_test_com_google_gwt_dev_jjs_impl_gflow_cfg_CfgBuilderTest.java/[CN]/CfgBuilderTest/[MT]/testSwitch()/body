{
  assertCfg("void","switch(i) {","  case 1: ","    return;","  case 2: ","  case 3: ","    j = 1;","    break;","  case 4: ","    j = 2;","  default:","    j = 4;","  case 5: ","    j = 3;","    break;","}").is("BLOCK -> [*]","STMT -> [*]","READ(i) -> [*]","GOTO -> [*]","STMT -> [*]","COND (EntryPoint.i == 1) -> [THEN=*, ELSE=1]","STMT -> [*]","GOTO -> [7]","1: STMT -> [*]","COND (EntryPoint.i == 2) -> [ELSE=*, THEN=2]","STMT -> [*]","COND (EntryPoint.i == 3) -> [THEN=*, ELSE=3]","2: STMT -> [*]","WRITE(j, 1) -> [*]","STMT -> [*]","GOTO -> [7]","3: STMT -> [*]","COND (EntryPoint.i == 4) -> [THEN=*, ELSE=5]","STMT -> [*]","WRITE(j, 2) -> [*]","4: STMT -> [*]","STMT -> [*]","WRITE(j, 4) -> [6]","5: STMT -> [*]","COND (EntryPoint.i == 5) -> [THEN=*, ELSE=4]","6: STMT -> [*]","WRITE(j, 3) -> [*]","STMT -> [*]","GOTO -> [*]","7: END");
}

{
  try {
    makeOutputDir();
    ReportGenerator reportGenerator=new ReportGenerator(){
      long allids=10684381L;
      @Override public boolean shouldContinue(){
        return getNumReports() < MAX_REPORTS;
      }
      @Override public long storeEmployee(      EmployeeDTO employee){
        if (getNumReports() >= REPORTS_PER_DIR * index) {
          ReportGeneratorMain.makeOutputDir();
        }
        long id=allids++;
        empWriter.println(employee.userName + "," + employee.displayName+ ","+ employee.supervisorKey+ ","+ VERSION+ ","+ id+ ","+ employee.department+ ",");
        return id;
      }
      @Override public long storeExpense(      ExpenseDTO expense){
        long id=allids++;
        expWriter.println(expense.category + "," + expense.description+ ",,"+ expense.amount+ ","+ VERSION+ ","+ expense.reportId+ ","+ id+ ","+ dateToString(expense.created)+ ",");
        return id;
      }
      @Override public long storeReport(      ReportDTO report){
        long id=allids++;
        repWriter.println(dateToString(report.created) + ",\"" + report.notes+ "\","+ VERSION+ ","+ report.approvedSupervisorKey+ ","+ id+ ","+ report.reporterKey+ ",\""+ report.purpose.toLowerCase()+ "\",\""+ report.purpose+ "\","+ report.department);
        return id;
      }
    }
;
    reportGenerator.init("/home/rice/www/dist.all.last.txt","/home/rice/www/dist.female.first.txt","/home/rice/www/dist.male.first.txt");
    long supervisorId=1;
    while (reportGenerator.shouldContinue()) {
      int department=reportGenerator.getDepartment();
      reportGenerator.makeEmployee(department,supervisorId);
    }
    empWriter.close();
    repWriter.close();
    expWriter.close();
  }
 catch (  Exception e) {
    throw e;
  }
}

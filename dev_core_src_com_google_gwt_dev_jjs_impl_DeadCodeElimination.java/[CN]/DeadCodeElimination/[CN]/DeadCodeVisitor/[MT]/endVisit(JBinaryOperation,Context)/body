{
  JBinaryOperator op=x.getOp();
  JExpression lhs=x.getLhs();
  JExpression rhs=x.getRhs();
switch (op) {
case AND:
    shortCircuitAnd(lhs,rhs,ctx);
  break;
case OR:
shortCircuitOr(lhs,rhs,ctx);
break;
case EQ:
if (lhs.getType() == program.getTypeNull() && rhs.getType() == program.getTypeNull() && !x.hasSideEffects()) {
ctx.replaceMe(program.getLiteralBoolean(true));
}
break;
case NEQ:
if (lhs.getType() == program.getTypeNull() && rhs.getType() == program.getTypeNull() && !x.hasSideEffects()) {
ctx.replaceMe(program.getLiteralBoolean(false));
}
break;
case ADD:
if (x.getType() == program.getTypeJavaLangString()) {
evalConcat(lhs,rhs,ctx);
}
break;
case DIV:
case ASG_DIV:
if (x.getType() != program.getTypePrimitiveFloat() && x.getType() != program.getTypePrimitiveDouble()) {
divToShift(x,lhs,rhs,ctx);
}
break;
default :
if (op.isAssignment()) {
lvalues.remove(lhs);
}
break;
}
}

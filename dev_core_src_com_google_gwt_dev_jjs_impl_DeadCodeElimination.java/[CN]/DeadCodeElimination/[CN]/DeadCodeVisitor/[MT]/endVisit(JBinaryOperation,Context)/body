{
  JBinaryOperator op=x.getOp();
  JExpression lhs=x.getLhs();
  JExpression rhs=x.getRhs();
  if (op == JBinaryOperator.AND) {
    if (lhs instanceof JBooleanLiteral) {
      JBooleanLiteral booleanLiteral=(JBooleanLiteral)lhs;
      if (booleanLiteral.getValue()) {
        ctx.replaceMe(rhs);
      }
 else {
        ctx.replaceMe(lhs);
      }
    }
 else     if (rhs instanceof JBooleanLiteral) {
      JBooleanLiteral booleanLiteral=(JBooleanLiteral)rhs;
      if (booleanLiteral.getValue()) {
        ctx.replaceMe(lhs);
      }
 else       if (!lhs.hasSideEffects()) {
        ctx.replaceMe(rhs);
      }
    }
  }
 else   if (op == JBinaryOperator.OR) {
    if (lhs instanceof JBooleanLiteral) {
      JBooleanLiteral booleanLiteral=(JBooleanLiteral)lhs;
      if (booleanLiteral.getValue()) {
        ctx.replaceMe(lhs);
      }
 else {
        ctx.replaceMe(rhs);
      }
    }
 else     if (rhs instanceof JBooleanLiteral) {
      JBooleanLiteral booleanLiteral=(JBooleanLiteral)rhs;
      if (!booleanLiteral.getValue()) {
        ctx.replaceMe(lhs);
      }
 else       if (!lhs.hasSideEffects()) {
        ctx.replaceMe(rhs);
      }
    }
  }
 else   if (op == JBinaryOperator.EQ) {
    if (lhs.getType() == program.getTypeNull() && rhs.getType() == program.getTypeNull()) {
      ctx.replaceMe(program.getLiteralBoolean(true));
    }
  }
 else   if (op == JBinaryOperator.NEQ) {
    if (lhs.getType() == program.getTypeNull() && rhs.getType() == program.getTypeNull()) {
      ctx.replaceMe(program.getLiteralBoolean(false));
    }
  }
 else   if (op == JBinaryOperator.ADD && x.getType() == program.getTypeJavaLangString()) {
    if (lhs instanceof JValueLiteral && rhs instanceof JValueLiteral) {
      Object lhsObj=((JValueLiteral)lhs).getValueObj();
      Object rhsObj=((JValueLiteral)rhs).getValueObj();
      ctx.replaceMe(program.getLiteralString(String.valueOf(lhsObj) + String.valueOf(rhsObj)));
    }
  }
}

{
  List<JExpression> exprs=x.exprs;
  if (exprs.size() > 1) {
    List<JExpression> nonFinalChildren=exprs.subList(0,exprs.size() - 1);
    ignoringExpressionOutput.removeAll(nonFinalChildren);
  }
  for (int i=0; i < numRemovableExpressions(x); ++i) {
    JExpression expr=x.exprs.get(i);
    if (!expr.hasSideEffects()) {
      x.exprs.remove(i);
      --i;
      madeChanges();
      continue;
    }
    if (expr instanceof JMultiExpression) {
      x.exprs.remove(i);
      x.exprs.addAll(i,((JMultiExpression)expr).exprs);
      i--;
      madeChanges();
      continue;
    }
  }
  if (x.exprs.size() == 1) {
    ctx.replaceMe(x.exprs.get(0));
  }
}

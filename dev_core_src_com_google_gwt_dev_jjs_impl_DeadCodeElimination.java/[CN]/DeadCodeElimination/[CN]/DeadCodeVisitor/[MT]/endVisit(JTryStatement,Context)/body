{
  List<JLocalRef> catchArgs=x.getCatchArgs();
  List<JBlock> catchBlocks=x.getCatchBlocks();
  Iterator<JLocalRef> itA=catchArgs.iterator();
  Iterator<JBlock> itB=catchBlocks.iterator();
  while (itA.hasNext()) {
    JLocalRef localRef=itA.next();
    itB.next();
    JReferenceType type=(JReferenceType)localRef.getType();
    if (!program.typeOracle.isInstantiatedType(type) || type == program.getTypeNull()) {
      itA.remove();
      itB.remove();
      madeChanges();
    }
  }
  boolean noTry=Simplifier.isEmpty(x.getTryBlock());
  boolean noCatch=catchArgs.size() == 0;
  boolean noFinally=Simplifier.isEmpty(x.getFinallyBlock());
  if (noTry) {
    if (noFinally) {
      removeMe(x,ctx);
    }
 else {
      replaceMe(x.getFinallyBlock(),ctx);
    }
  }
 else   if (noCatch && noFinally) {
    replaceMe(x.getTryBlock(),ctx);
  }
}

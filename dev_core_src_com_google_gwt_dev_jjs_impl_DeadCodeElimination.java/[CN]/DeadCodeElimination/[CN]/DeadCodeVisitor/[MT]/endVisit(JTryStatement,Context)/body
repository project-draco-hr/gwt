{
  List<JTryStatement.CatchClause> catchClauses=x.getCatchClauses();
  Iterator<JTryStatement.CatchClause> itClauses=catchClauses.iterator();
  while (itClauses.hasNext()) {
    JTryStatement.CatchClause clause=itClauses.next();
    Iterator<JType> itTypes=clause.getTypes().iterator();
    while (itTypes.hasNext()) {
      JReferenceType type=(JReferenceType)itTypes.next();
      if (!program.typeOracle.isInstantiatedType(type) || type == program.getTypeNull()) {
        itTypes.remove();
        madeChanges();
      }
    }
    if (clause.getTypes().isEmpty()) {
      itClauses.remove();
      madeChanges();
    }
  }
  boolean noTry=Simplifier.isEmpty(x.getTryBlock());
  boolean noCatch=catchClauses.size() == 0;
  boolean noFinally=Simplifier.isEmpty(x.getFinallyBlock());
  if (noTry) {
    if (noFinally) {
      removeMe(x,ctx);
    }
 else {
      replaceMe(x.getFinallyBlock(),ctx);
    }
  }
 else   if (noCatch && noFinally) {
    replaceMe(x.getTryBlock(),ctx);
  }
}

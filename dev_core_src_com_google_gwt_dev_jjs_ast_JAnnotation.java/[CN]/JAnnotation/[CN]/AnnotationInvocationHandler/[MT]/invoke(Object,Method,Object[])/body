{
  if (method.getDeclaringClass() == Object.class) {
    return method.invoke(this,arguments);
  }
  Property prop=annotation.getProperty(method.getName());
  if (prop == null) {
    return method.getDefaultValue();
  }
  if (method.getReturnType().isArray()) {
    List<JAnnotationArgument> values=prop.getValues();
    Object toReturn=Array.newInstance(method.getReturnType().getComponentType(),values.size());
    for (int i=0, j=values.size(); i < j; i++) {
      Object value=evaluate(values.get(i));
      Array.set(toReturn,i,value);
    }
    return toReturn;
  }
  return evaluate(prop.getSingleValue());
}

{
  if (value instanceof JValueLiteral) {
    return ((JValueLiteral)value).getValueObj();
  }
 else   if (value instanceof JClassLiteral) {
    String clazzName=((JClassLiteral)value).getRefType().getName();
    try {
      return Class.forName(clazzName,true,clazz.getClassLoader());
    }
 catch (    ClassNotFoundException e) {
      throw new SourceOnlyClassException((JClassLiteral)value);
    }
  }
 else   if (value instanceof JAnnotation) {
    String clazzName=((JAnnotation)value).getType().getName();
    Class<? extends Annotation> annotationType=Class.forName(clazzName,true,clazz.getClassLoader()).asSubclass(Annotation.class);
    return createAnnotation(annotationType,(JAnnotation)value);
  }
  throw new RuntimeException("Cannot convert " + value.getClass().getCanonicalName() + " into an Object");
}

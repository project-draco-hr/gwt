{
  E[] enums=e.getEnumConstants();
  EnumSet<E> numbers=EnumSet.of(enums[1],enums[2]);
  HashSet<E> numberSet=new HashSet<E>();
  numberSet.add(enums[1]);
  numberSet.add(enums[2]);
  assertEquals(numberSet,numbers);
  numbers.add(enums[23]);
  numberSet.add(enums[23]);
  assertEquals(numberSet,numbers);
  numbers.remove(enums[1]);
  numberSet.remove(enums[1]);
  assertEquals(numberSet,numbers);
  numbers.add(enums[0]);
  numberSet.add(enums[0]);
  assertEquals(numberSet,numbers);
  numbers.add(enums[enums.length - 1]);
  numberSet.add(enums[enums.length - 1]);
  assertEquals(numberSet,numbers);
  numbers.remove(enums[15]);
  numberSet.remove(enums[15]);
  assertEquals(numberSet,numbers);
  numbers.add(enums[23]);
  numberSet.add(enums[23]);
  assertEquals(numberSet,numbers);
  numbers=EnumSet.allOf(e);
  numberSet.clear();
  numberSet.addAll(Arrays.asList(enums));
  assertEquals(numberSet,numbers);
  numbers=EnumSet.noneOf(e);
  numberSet.clear();
  assertEquals(numberSet,numbers);
  numbers=EnumSet.complementOf(EnumSet.allOf(e));
  numberSet.clear();
  assertEquals(numberSet,numbers);
  numbers=EnumSet.complementOf(EnumSet.noneOf(e));
  numberSet.clear();
  numberSet.addAll(Arrays.asList(enums));
  assertEquals(numberSet,numbers);
  numbers=EnumSet.allOf(e);
  numbers.remove(enums[20]);
  numbers.remove(enums[17]);
  numbers=EnumSet.complementOf(numbers);
  numberSet.clear();
  numberSet.add(enums[20]);
  numberSet.add(enums[17]);
  assertEquals(numberSet,numbers);
  numbers=EnumSet.range(enums[0],enums[enums.length - 1]);
  numberSet.clear();
  numberSet.addAll(Arrays.asList(enums));
  assertEquals(numberSet,numbers);
  numbers=EnumSet.range(enums[5],enums[5]);
  numberSet.clear();
  numberSet.add(enums[5]);
  assertEquals(numberSet,numbers);
  numbers=EnumSet.range(enums[5],enums[10]);
  numberSet.clear();
  for (int i=5, end=10; i <= end; ++i) {
    numberSet.add(enums[i]);
  }
  assertEquals(numberSet,numbers);
  List<E> numberList=new ArrayList<E>();
  for (int i=5, end=10; i <= end; ++i) {
    numberList.add(enums[i]);
  }
  for (int i=5, end=10; i <= end; ++i) {
    numberList.add(enums[i]);
  }
  numbers=EnumSet.copyOf(numberList);
  numberSet=new HashSet<E>(numberList);
  assertEquals(numberSet,numbers);
  try {
    numbers.add(null);
    fail("Expected NullPointerException");
  }
 catch (  NullPointerException expected) {
  }
  assertFalse("EnumSet should allow testing for null",numbers.contains(null));
  numbers.clear();
  numbers.add(enums[1]);
  assertFalse("EnumSet should test for correct type.",numbers.contains(FalseEnum.One));
  numbers.remove(FalseEnum.One);
  assertTrue("EnumSet should test for correct type on remove",numbers.contains(enums[1]));
}

{
  AbstractListViewAdapter<String> adapter=createListViewAdapter();
  MockPagingListView<String> view=new MockPagingListView<String>();
  view.setRange(10,5);
  adapter.addView(view);
{
    List<String> values=createData(10,5);
    adapter.updateViewData(10,5,values);
    assertEquals(values,view.getLastData());
    assertEquals(new Range(10,5),view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(12,2);
    adapter.updateViewData(12,2,values);
    assertEquals(values,view.getLastData());
    assertEquals(new Range(12,2),view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(5,5);
    adapter.updateViewData(5,5,values);
    assertNull(view.getLastData());
    assertNull(view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(15,5);
    adapter.updateViewData(15,5,values);
    assertNull(view.getLastData());
    assertNull(view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(5,15);
    adapter.updateViewData(5,15,values);
    assertEquals(values.subList(5,10),view.getLastData());
    assertEquals(new Range(10,5),view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(5,7);
    adapter.updateViewData(5,7,values);
    assertEquals(values.subList(5,7),view.getLastData());
    assertEquals(new Range(10,2),view.getLastDataRange());
    view.clearLastDataAndRange();
  }
{
    List<String> values=createData(13,5);
    adapter.updateViewData(13,5,values);
    assertEquals(values.subList(0,2),view.getLastData());
    assertEquals(new Range(13,2),view.getLastDataRange());
    view.clearLastDataAndRange();
  }
}

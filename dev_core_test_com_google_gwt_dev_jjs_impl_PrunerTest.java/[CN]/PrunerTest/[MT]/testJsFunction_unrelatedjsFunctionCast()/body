{
  addSnippetImport("jsinterop.annotations.JsFunction");
  addSnippetClassDecl("@JsFunction interface MyJsFunctionInterface {","int foo (int a);","}");
  addSnippetClassDecl("@JsFunction interface MyOtherJsFunctionInterface {","int bar (int a);","}");
  addSnippetClassDecl("interface MyPlainInterface {","int goo (int a);","}");
  Result result;
  (result=optimize("int","MyJsFunctionInterface a = new MyJsFunctionInterface() {" + "@Override public int foo (int a) { return 1; }" + "};"+ "return ((MyOtherJsFunctionInterface) a).bar(0) + ((MyPlainInterface) a).goo(0);")).intoString("EntryPoint$MyJsFunctionInterface a = new EntryPoint$1();\n" + "return ((EntryPoint$MyOtherJsFunctionInterface) a).bar(0) +" + " ((EntryPoint$MyPlainInterface) a).nullMethod();");
  assertNotNull(result.findClass("EntryPoint$MyOtherJsFunctionInterface"));
  assertNotNull(OptimizerTestBase.findMethod(result.findClass("EntryPoint$MyOtherJsFunctionInterface"),"bar"));
  assertNull(result.findClass("EntryPoint$MyPlainInterface"));
}

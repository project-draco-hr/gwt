{
  final Image image=new Image("counting-backwards.png",12,12,12,12);
  final TestLoadListener listener=new TestLoadListener(image){
    @Override public void onLoad(    Widget sender){
      if (isFinished()) {
        fail("LoadListener fired twice. Expected it to fire only once.");
      }
      assertEquals(0,image.getOriginLeft());
      assertEquals(16,image.getOriginTop());
      assertEquals(16,image.getWidth());
      assertEquals(16,image.getHeight());
      assertEquals("clipped",getCurrentImageStateName(image));
      finish();
    }
  }
;
  image.addLoadListener(listener);
  final TestLoadHandler loadHandler=new TestLoadHandler(){
    @Override public void onLoad(    LoadEvent event){
      if (isFinished()) {
        fail("LoadHandler fired twice. Expected it to fire only once.");
      }
      if (listener.isFinished()) {
        finish();
      }
 else {
        fail("Listener did not fire first");
      }
    }
  }
;
  image.addLoadHandler(loadHandler);
  image.addErrorHandler(new TestErrorHandler(image));
  RootPanel.get().add(image);
  assertEquals("clipped",getCurrentImageStateName(image));
  image.setUrlAndVisibleRect("counting-forwards.png",0,16,16,16);
  delayTestFinish(DEFAULT_TEST_TIMEOUT);
  new Timer(){
    @Override public void run(){
      assertTrue(loadHandler.isFinished());
      finishTest();
    }
  }
.schedule(SYNTHETIC_LOAD_EVENT_TIMEOUT);
}

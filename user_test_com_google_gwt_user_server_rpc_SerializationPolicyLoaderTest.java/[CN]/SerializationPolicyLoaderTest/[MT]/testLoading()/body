{
  InputStream is=getInputStreamFromString(VALID_POLICY_FILE_CONTENTS);
  List<ClassNotFoundException> notFounds=new ArrayList<ClassNotFoundException>();
  SerializationPolicy sp=SerializationPolicyLoader.loadFromStream(is,notFounds);
  assertTrue(notFounds.isEmpty());
  assertTrue(sp.shouldSerializeFields(A.class));
  sp.validateSerialize(A.class);
  assertFalse(sp.shouldDeserializeFields(A.class));
  assertCannotDeserialize(sp,A.class);
  assertFalse(sp.shouldSerializeFields(B.class));
  assertCannotDeserialize(sp,B.class);
  assertTrue(sp.shouldDeserializeFields(B.class));
  assertCannotDeserialize(sp,B.class);
  assertTrue(sp instanceof TypeNameObfuscator);
  TypeNameObfuscator ob=(TypeNameObfuscator)sp;
  assertEquals("a",ob.getTypeIdForClass(A.class));
  assertEquals(A.class.getName(),ob.getClassNameForTypeId("a"));
  assertEquals("b",ob.getTypeIdForClass(B.class));
  assertEquals(B.class.getName(),ob.getClassNameForTypeId("b"));
  assertEquals(TypeNameObfuscator.SERVICE_INTERFACE_ID,ob.getTypeIdForClass(I.class));
  assertEquals(I.class.getName(),ob.getClassNameForTypeId(TypeNameObfuscator.SERVICE_INTERFACE_ID));
}

{
  List<Maker> widgetMakers=new ArrayList<Maker>();
  widgetMakers.add(new Maker("SimplePanel"){
    @Override public Widget make(){
      return new SimplePanel();
    }
  }
);
  widgetMakers.add(new Maker("FlowPanel"){
    @Override public Widget make(){
      return new FlowPanel();
    }
  }
);
  widgetMakers.add(new Maker("HTMLPanel"){
    @Override public Widget make(){
      return new HTMLPanel("");
    }
  }
);
  widgetMakers.add(new EmptyBinder.Maker());
  widgetMakers.add(new TestEmptyDomViaApi.Maker());
  widgetMakers.add(new TestEmptyDom.Maker());
  widgetMakers.add(new TestEmptyCursorDomCrawl.Maker());
  widgetMakers.add(new TestEmptyRealisticDomCrawl.Maker());
  widgetMakers.add(new TestDomViaApi.Maker());
  widgetMakers.add(new TestDomInnerHtmlById.Maker());
  if (Util.hasQSA) {
    widgetMakers.add(new TestDomInnerHtmlQuerySelectorAll.Maker());
  }
  widgetMakers.add(new TestCursorDomCrawl.Maker());
  widgetMakers.add(new TestRealisticDomCrawl.Maker());
  widgetMakers.add(new TestDomBinder.Maker());
  widgetMakers.add(new TestFlows.Maker());
  widgetMakers.add(new TestManualHTMLPanel.Maker());
  widgetMakers.add(new TestWidgetBinder.Maker());
  List<Maker> tableMakers=new ArrayList<Maker>();
  tableMakers.add(new TestCreateTableInnerHtml.Maker());
  tableMakers.add(new TestCreateTablePrecreatedInnerHtml.Maker());
  tableMakers.add(new TestCreateTableDom.Maker());
  tableMakers.add(new TestCreateTableDomWithEvents.Maker());
  benchmarks=new Microbenchmark[2];
  benchmarks[0]=new WidgetCreation("Widget Creation Survey",widgetMakers);
  benchmarks[1]=new WidgetCreation("Table Creation Survey",tableMakers);
}

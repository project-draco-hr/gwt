{
@SuppressWarnings("unused") class Foo {
    int field;
    void nonOverloaded(    int x){
    }
    void overloaded(    double x){
    }
    void overloaded(    int x){
    }
  }
  DispatchClassInfo dci=new DispatchClassInfo(Foo.class,42);
  assertField(dci,"field","field");
  assertNonExistent(dci,"bogofield");
  assertMethod(dci,"nonOverloaded(I)",Foo.class,"nonOverloaded",Integer.TYPE);
  assertMethod(dci,"nonOverloaded(*)",Foo.class,"nonOverloaded",Integer.TYPE);
  assertMethod(dci,"overloaded(I)",Foo.class,"overloaded",Integer.TYPE);
  assertMethod(dci,"overloaded(D)",Foo.class,"overloaded",Double.TYPE);
  assertNonExistent(dci,"overloaded(*)");
  assertNonExistent(dci,"bogometh(I)");
  assertNonExistent(dci,"bogometh(*)");
}

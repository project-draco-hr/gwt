{
  if (value == null) {
    return new TreeViewModel.DefaultNodeInfo<String>(topLevelListListModel,new TextCell());
  }
 else   if ("Favorites".equals(value)) {
    return new TreeViewModel.DefaultNodeInfo<StockQuote>(stockQuoteListModel,STOCK_QUOTE_CELL){
      @Override public Object getKey(      StockQuote value){
        return value.getTicker();
      }
    }
;
  }
 else   if ("History".equals(value)) {
    String ticker=((StockQuote)treeNode.getParentNode().getValue()).getTicker();
    ListListModel<Transaction> listModel=transactionListListModelsByTicker.get(ticker);
    if (listModel == null) {
      listModel=new ListListModel<Transaction>();
      transactionListListModelsByTicker.put(ticker,listModel);
    }
    return new TreeViewModel.DefaultNodeInfo<Transaction>(listModel,TRANSACTION_CELL);
  }
 else   if ("Actions".equals(value)) {
    ListListModel<String> listModel=new ListListModel<String>();
    List<String> list=listModel.getList();
    list.add("Buy");
    list.add("Sell");
    return new TreeViewModel.DefaultNodeInfo<String>(listModel,new ButtonCell(),new ValueUpdater<String>(){
      public void update(      String value){
        StockQuote stockQuote=(StockQuote)treeNode.getParentNode().getValue();
        if ("Buy".equals(value)) {
          updater.buy(stockQuote);
        }
 else {
          updater.sell(stockQuote);
        }
      }
    }
);
  }
 else   if (value instanceof String) {
    SectorListModel listModel=new SectorListModel((String)value);
    sectorListModels.put((String)value,listModel);
    return new TreeViewModel.DefaultNodeInfo<StockQuote>(listModel,STOCK_QUOTE_CELL){
      @Override public Object getKey(      StockQuote value){
        return value.getTicker();
      }
    }
;
  }
 else   if (value instanceof StockQuote) {
    ListListModel<String> listModel=new ListListModel<String>();
    List<String> list=listModel.getList();
    list.add("Actions");
    list.add("History");
    return new TreeViewModel.DefaultNodeInfo<String>(listModel,new TextCell());
  }
  throw new IllegalArgumentException(value.toString());
}

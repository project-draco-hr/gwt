{
  if (orig == null) {
    throw new NumberFormatException("null");
  }
  if (orig.length() == 0) {
    throw NumberFormatException.forInputString(orig);
  }
  if (intRadix < Character.MIN_RADIX || intRadix > Character.MAX_RADIX) {
    throw new NumberFormatException("radix " + intRadix + " out of range");
  }
  boolean neg=false;
  String s;
  if (orig.charAt(0) == '-') {
    neg=true;
    s=orig.substring(1);
  }
 else {
    s=orig;
  }
  long result=0;
  if (intRadix == 16) {
    result=parseHex(s);
  }
 else {
    long radix=intRadix;
    for (int i=0, len=s.length(); i < len; ++i) {
      if (result < 0) {
        throw NumberFormatException.forInputString(s);
      }
      result*=radix;
      char c=s.charAt(i);
      int value=Character.digit(c,intRadix);
      if (value < 0) {
        throw NumberFormatException.forInputString(s);
      }
      result+=value;
    }
  }
  if (result < 0 && result != MIN_VALUE) {
    throw NumberFormatException.forInputString(s);
  }
  if (neg) {
    return -result;
  }
 else {
    return result;
  }
}

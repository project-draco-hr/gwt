{
  if (intRadix == 10 || intRadix < Character.MIN_RADIX || intRadix > Character.MAX_RADIX) {
    return String.valueOf(value);
  }
  final int bufSize=65;
  char[] buf=new char[bufSize];
  char[] digits=__Digits.digits;
  int pos=bufSize - 1;
  long radix=intRadix;
  if (value >= 0) {
    while (value >= radix) {
      buf[pos--]=digits[(int)(value % radix)];
      value/=radix;
    }
    buf[pos]=digits[(int)value];
  }
 else {
    while (value <= -radix) {
      buf[pos--]=digits[(int)-(value % radix)];
      value/=radix;
    }
    buf[pos--]=digits[(int)-value];
    buf[pos]='-';
  }
  return String.__valueOf(buf,pos,bufSize);
}

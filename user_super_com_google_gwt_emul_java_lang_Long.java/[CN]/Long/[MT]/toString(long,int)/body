{
  if (intRadix == 10 || intRadix < Character.MIN_RADIX || intRadix > Character.MAX_RADIX) {
    return String.valueOf(value);
  }
  if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {
    return Integer.toString((int)value,intRadix);
  }
  final int bufSize=65;
  char[] buf=new char[bufSize];
  int pos=bufSize - 1;
  long radix=intRadix;
  if (value >= 0) {
    while (value >= radix) {
      buf[pos--]=Character.forDigit((int)(value % radix));
      value/=radix;
    }
    buf[pos]=Character.forDigit((int)value);
  }
 else {
    long negRadix=-radix;
    while (value <= negRadix) {
      buf[pos--]=Character.forDigit(-((int)(value % radix)));
      value/=radix;
    }
    buf[pos--]=Character.forDigit(-((int)value));
    buf[pos]='-';
  }
  return StringHelper.valueOf(buf,pos,bufSize);
}
